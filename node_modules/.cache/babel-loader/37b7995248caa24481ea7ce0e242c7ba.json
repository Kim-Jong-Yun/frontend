{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask';\nimport TaskFlow from './TaskFlow';\nimport './TaskPage.css';\nfunction TaskPage() {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [assignPopupOpen, setAssignPopupOpen] = useState(false);\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n  const [deletedWorkflowNodes, setDeletedWorkflowNodes] = useState([]);\n  const [monitoredMapName, setMonitoredMapName] = useState('');\n  const taskFlowRef = useRef(null);\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskType, setTaskType] = useState('A');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    fetchTasks();\n    fetchMonitoredMapName();\n  }, [token]);\n  const fetchMonitoredMapName = async () => {\n    try {\n      const mapResponse = await axios.get('http://172.30.1.33:5557/map/monitored', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const monitoredMapData = mapResponse.data;\n      if (monitoredMapData && monitoredMapData.name) {\n        setMonitoredMapName(monitoredMapData.name);\n      } else {\n        setMonitoredMapName('맵 정보 없음');\n      }\n    } catch (error) {\n      console.error('모니터링 중인 맵 정보를 가져오는 중 오류가 발생했습니다:', error);\n      setMonitoredMapName('오류 발생');\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const mapResponse = await axios.get('http://172.30.1.33:5557/map/monitored', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const monitoredMapData = mapResponse.data;\n      if (!monitoredMapData || !monitoredMapData._id) {\n        console.error('모니터링 중인 맵 정보가 없습니다.');\n        return;\n      }\n      const taskResponse = await axios.get(`http://172.30.1.33:8080/task/tasks?mapId=${monitoredMapData._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(taskResponse.data);\n      if (taskResponse.data.length > 0) handleTaskClick(taskResponse.data[0]);\n    } catch (error) {\n      console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n    }\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setTaskName(task.name);\n    setTaskDescription(task.description || '');\n    setTaskType(task.taskType || 'A');\n    setTemporaryWorkflow([]);\n    setDeletedWorkflowNodes([]);\n    if (taskFlowRef.current) {\n      taskFlowRef.current.clearTemporaryWorkflow();\n    }\n  };\n  const togglePopup = () => setIsPopupOpen(prev => !prev);\n  const toggleAssignPopup = () => setAssignPopupOpen(prev => !prev);\n  const handleTaskCreated = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    handleTaskClick(newTask);\n  };\n  const handleSaveTask = async () => {\n    if (!selectedTask) {\n      alert('저장할 작업을 선택하세요.');\n      return;\n    }\n\n    // 업데이트된 작업 데이터 로그\n    const updatedTask = {\n      ...selectedTask,\n      workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n      name: taskName,\n      description: taskDescription,\n      taskType: taskType\n    };\n    console.log('Saving updated task:', updatedTask);\n\n    // 워크플로우의 모든 단계에 x와 y가 있는지 검증\n    for (const [index, step] of updatedTask.workflow.entries()) {\n      if (step.x === undefined || step.y === undefined) {\n        console.error(`Workflow step at index ${index} is missing x or y:`, step);\n        alert(`워크플로우 단계 ${index + 1}에 x와 y 좌표가 필요합니다.`);\n        return;\n      }\n    }\n    try {\n      await axios.put(`http://172.30.1.33:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      for (const {\n        taskId,\n        nodeId\n      } of deletedWorkflowNodes) {\n        await axios.put(`http://172.30.1.33:8080/task/tasks/${taskId}/workflow/${nodeId}/nodeToZero`, null, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      setTemporaryWorkflow([]);\n      setDeletedWorkflowNodes([]);\n      if (taskFlowRef.current) {\n        taskFlowRef.current.clearTemporaryWorkflow();\n      }\n      alert('작업이 성공적으로 저장되었습니다.');\n      await fetchTasks();\n      const updatedTasks = await axios.get(`http://172.30.1.33:8080/task/tasks?mapId=${selectedTask.mapId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const savedTask = updatedTasks.data.find(task => task._id === selectedTask._id);\n      if (savedTask) handleTaskClick(savedTask);\n    } catch (error) {\n      console.error('작업 저장 중 오류가 발생했습니다.', error);\n      alert('작업 저장 중 오류가 발생했습니다.');\n    }\n  };\n  const handleTemporaryFlowAdd = newFlow => {\n    // 플로우 추가 로그\n    console.log('Adding temporary workflow:', newFlow);\n\n    // x와 y 값 검증\n    if (newFlow.x === undefined || newFlow.y === undefined) {\n      console.error('Invalid workflow data: x or y is missing', newFlow);\n      alert('워크플로우 추가 시 x와 y 좌표가 필요합니다.');\n      return;\n    }\n    setTemporaryWorkflow(prev => [...prev, newFlow]);\n  };\n  const handleTemporaryFlowDelete = (taskId, flowId) => {\n    // 플로우 삭제 로그\n    console.log('Deleting workflow node:', {\n      taskId,\n      flowId\n    });\n    setDeletedWorkflowNodes(prev => [...prev, {\n      taskId,\n      nodeId: flowId\n    }]);\n  };\n  const handleDeleteTask = async () => {\n    if (!selectedTask) {\n      alert('삭제할 작업을 선택하세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('정말로 이 작업을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.33:8080/task/tasks/${selectedTask._id}/delete`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedTasks = tasks.filter(task => task._id !== selectedTask._id);\n      setTasks(updatedTasks);\n      if (updatedTasks.length > 0) {\n        handleTaskClick(updatedTasks[0]);\n      } else {\n        setSelectedTask(null);\n        setTaskName('');\n        setTaskDescription('');\n        setTaskType('A');\n        setTemporaryWorkflow([]);\n        setDeletedWorkflowNodes([]);\n      }\n      alert('작업이 성공적으로 삭제되었습니다.');\n    } catch (error) {\n      console.error('작업 삭제 중 오류가 발생했습니다.', error);\n      alert('작업 삭제 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5 \\uB9AC\\uC2A4\\uD2B8 - \", monitoredMapName), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-task-btn\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    onClick: () => handleTaskClick(task),\n    className: selectedTask && selectedTask._id === task._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, selectedTask ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uC0C1\\uC138 \\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-field\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC124\\uBA85:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea-field\",\n    value: taskDescription,\n    onChange: e => setTaskDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select-field\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 41\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 41\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 41\n    }\n  }, \"C\")))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uD50C\\uB85C\\uC6B0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TaskFlow, {\n    ref: taskFlowRef,\n    taskId: selectedTask._id,\n    workflow: selectedTask.workflow,\n    onTemporaryFlowAdd: handleTemporaryFlowAdd,\n    onTemporaryFlowDelete: handleTemporaryFlowDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\")), isPopupOpen && /*#__PURE__*/React.createElement(CreateTask, {\n    onClose: togglePopup,\n    onTaskCreated: handleTaskCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }), assignPopupOpen && selectedTask && /*#__PURE__*/React.createElement(AssignTaskPopup, {\n    onClose: toggleAssignPopup,\n    selectedTask: selectedTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"assign-task-btn\",\n    onClick: toggleAssignPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-task-btn\",\n    onClick: handleSaveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-task-btn\",\n    onClick: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC0AD\\uC81C\"))));\n}\nfunction AssignTaskPopup({\n  onClose,\n  selectedTask\n}) {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  useEffect(() => {\n    const fetchActiveRobots = async () => {\n      try {\n        const response = await axios.get('http://172.30.1.33:5559/robot/robots/active', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Active 상태의 로봇을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    };\n    fetchActiveRobots();\n  }, []);\n  const handleRobotSelect = e => {\n    setSelectedRobot(e.target.value);\n  };\n  const handleAssign = async () => {\n    if (!selectedRobot) {\n      alert('할당할 로봇을 선택하세요.');\n      return;\n    }\n    if (!selectedTask || !selectedTask.workflow) {\n      alert('유효하지 않은 작업 또는 작업 플로우가 없습니다.');\n      return;\n    }\n    try {\n      for (const flow of selectedTask.workflow) {\n        // x와 y를 포함하여 전송하도록 수정 (필요 시 주석 해제)\n        await axios.post('http://172.30.1.33:5559/robot/addWorkflow', {\n          robotId: selectedRobot,\n          node: flow.node,\n          step: flow.step,\n          x: flow.x,\n          // x 좌표 추가\n          y: flow.y // y 좌표 추가\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n      alert(`로봇 ${selectedRobot}에 작업이 성공적으로 할당되었습니다.`);\n      onClose(); // 할당 후 팝업 닫기\n    } catch (error) {\n      console.error('작업 할당 중 오류가 발생했습니다:', error);\n      alert('작업 할당에 실패했습니다.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assign-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedRobot,\n    onChange: handleRobotSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 25\n    }\n  }, \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), robots.map(robot => /*#__PURE__*/React.createElement(\"option\", {\n    key: robot._id,\n    value: robot._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 29\n    }\n  }, robot.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAssign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, \"\\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }, \"\\uB2EB\\uAE30\"))));\n}\nexport default TaskPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Navbar","LogoutButton","UserInfo","CreateTask","TaskFlow","TaskPage","tasks","setTasks","selectedTask","setSelectedTask","isPopupOpen","setIsPopupOpen","assignPopupOpen","setAssignPopupOpen","temporaryWorkflow","setTemporaryWorkflow","deletedWorkflowNodes","setDeletedWorkflowNodes","monitoredMapName","setMonitoredMapName","taskFlowRef","taskName","setTaskName","taskDescription","setTaskDescription","taskType","setTaskType","token","localStorage","getItem","fetchTasks","fetchMonitoredMapName","mapResponse","get","headers","Authorization","monitoredMapData","data","name","error","console","_id","taskResponse","length","handleTaskClick","task","description","current","clearTemporaryWorkflow","togglePopup","prev","toggleAssignPopup","handleTaskCreated","newTask","prevTasks","handleSaveTask","alert","updatedTask","workflow","log","index","step","entries","x","undefined","y","put","taskId","nodeId","updatedTasks","mapId","savedTask","find","handleTemporaryFlowAdd","newFlow","handleTemporaryFlowDelete","flowId","handleDeleteTask","confirmDelete","window","confirm","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","key","type","value","onChange","e","target","ref","onTemporaryFlowAdd","onTemporaryFlowDelete","onClose","onTaskCreated","AssignTaskPopup","robots","setRobots","selectedRobot","setSelectedRobot","fetchActiveRobots","response","handleRobotSelect","handleAssign","flow","post","robotId","node","disabled","robot"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask';\nimport TaskFlow from './TaskFlow';\nimport './TaskPage.css';\n\nfunction TaskPage() {\n    const [tasks, setTasks] = useState([]);\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [assignPopupOpen, setAssignPopupOpen] = useState(false);\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n    const [deletedWorkflowNodes, setDeletedWorkflowNodes] = useState([]);\n    const [monitoredMapName, setMonitoredMapName] = useState('');\n    const taskFlowRef = useRef(null);\n\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskType, setTaskType] = useState('A');\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        fetchTasks();\n        fetchMonitoredMapName();\n    }, [token]);\n\n    const fetchMonitoredMapName = async () => {\n        try {\n            const mapResponse = await axios.get('http://172.30.1.33:5557/map/monitored', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            const monitoredMapData = mapResponse.data;\n            if (monitoredMapData && monitoredMapData.name) {\n                setMonitoredMapName(monitoredMapData.name);\n            } else {\n                setMonitoredMapName('맵 정보 없음');\n            }\n        } catch (error) {\n            console.error('모니터링 중인 맵 정보를 가져오는 중 오류가 발생했습니다:', error);\n            setMonitoredMapName('오류 발생');\n        }\n    };\n\n    const fetchTasks = async () => {\n        try {\n            const mapResponse = await axios.get('http://172.30.1.33:5557/map/monitored', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            const monitoredMapData = mapResponse.data;\n            if (!monitoredMapData || !monitoredMapData._id) {\n                console.error('모니터링 중인 맵 정보가 없습니다.');\n                return;\n            }\n\n            const taskResponse = await axios.get(`http://172.30.1.33:8080/task/tasks?mapId=${monitoredMapData._id}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setTasks(taskResponse.data);\n            if (taskResponse.data.length > 0) handleTaskClick(taskResponse.data[0]);\n        } catch (error) {\n            console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n        }\n    };\n\n    const handleTaskClick = (task) => {\n        setSelectedTask(task);\n        setTaskName(task.name);\n        setTaskDescription(task.description || '');\n        setTaskType(task.taskType || 'A');\n        setTemporaryWorkflow([]);\n        setDeletedWorkflowNodes([]);\n\n        if (taskFlowRef.current) {\n            taskFlowRef.current.clearTemporaryWorkflow();\n        }\n    };\n\n    const togglePopup = () => setIsPopupOpen((prev) => !prev);\n    const toggleAssignPopup = () => setAssignPopupOpen((prev) => !prev);\n\n    const handleTaskCreated = (newTask) => {\n        setTasks((prevTasks) => [...prevTasks, newTask]);\n        handleTaskClick(newTask);\n    };\n\n    const handleSaveTask = async () => {\n        if (!selectedTask) {\n            alert('저장할 작업을 선택하세요.');\n            return;\n        }\n\n        // 업데이트된 작업 데이터 로그\n        const updatedTask = {\n            ...selectedTask,\n            workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n            name: taskName,\n            description: taskDescription,\n            taskType: taskType,\n        };\n        console.log('Saving updated task:', updatedTask);\n\n        // 워크플로우의 모든 단계에 x와 y가 있는지 검증\n        for (const [index, step] of updatedTask.workflow.entries()) {\n            if (step.x === undefined || step.y === undefined) {\n                console.error(`Workflow step at index ${index} is missing x or y:`, step);\n                alert(`워크플로우 단계 ${index + 1}에 x와 y 좌표가 필요합니다.`);\n                return;\n            }\n        }\n\n        try {\n            await axios.put(`http://172.30.1.33:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            for (const { taskId, nodeId } of deletedWorkflowNodes) {\n                await axios.put(\n                    `http://172.30.1.33:8080/task/tasks/${taskId}/workflow/${nodeId}/nodeToZero`,\n                    null,\n                    { headers: { Authorization: `Bearer ${token}` } }\n                );\n            }\n\n            setTemporaryWorkflow([]);\n            setDeletedWorkflowNodes([]);\n            if (taskFlowRef.current) {\n                taskFlowRef.current.clearTemporaryWorkflow();\n            }\n\n            alert('작업이 성공적으로 저장되었습니다.');\n            await fetchTasks();\n\n            const updatedTasks = await axios.get(`http://172.30.1.33:8080/task/tasks?mapId=${selectedTask.mapId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            const savedTask = updatedTasks.data.find((task) => task._id === selectedTask._id);\n            if (savedTask) handleTaskClick(savedTask);\n\n        } catch (error) {\n            console.error('작업 저장 중 오류가 발생했습니다.', error);\n            alert('작업 저장 중 오류가 발생했습니다.');\n        }\n    };\n\n    const handleTemporaryFlowAdd = (newFlow) => {\n        // 플로우 추가 로그\n        console.log('Adding temporary workflow:', newFlow);\n\n        // x와 y 값 검증\n        if (newFlow.x === undefined || newFlow.y === undefined) {\n            console.error('Invalid workflow data: x or y is missing', newFlow);\n            alert('워크플로우 추가 시 x와 y 좌표가 필요합니다.');\n            return;\n        }\n\n        setTemporaryWorkflow((prev) => [...prev, newFlow]);\n    };\n\n    const handleTemporaryFlowDelete = (taskId, flowId) => {\n        // 플로우 삭제 로그\n        console.log('Deleting workflow node:', { taskId, flowId });\n        setDeletedWorkflowNodes((prev) => [...prev, { taskId, nodeId: flowId }]);\n    };\n\n    const handleDeleteTask = async () => {\n        if (!selectedTask) {\n            alert('삭제할 작업을 선택하세요.');\n            return;\n        }\n\n        const confirmDelete = window.confirm('정말로 이 작업을 삭제하시겠습니까?');\n        if (!confirmDelete) return;\n\n        try {\n            await axios.put(`http://172.30.1.33:8080/task/tasks/${selectedTask._id}/delete`, null, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            const updatedTasks = tasks.filter((task) => task._id !== selectedTask._id);\n            setTasks(updatedTasks);\n\n            if (updatedTasks.length > 0) {\n                handleTaskClick(updatedTasks[0]);\n            } else {\n                setSelectedTask(null);\n                setTaskName('');\n                setTaskDescription('');\n                setTaskType('A');\n                setTemporaryWorkflow([]);\n                setDeletedWorkflowNodes([]);\n            }\n\n            alert('작업이 성공적으로 삭제되었습니다.');\n        } catch (error) {\n            console.error('작업 삭제 중 오류가 발생했습니다.', error);\n            alert('작업 삭제 중 오류가 발생했습니다.');\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <header className=\"header\">\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <Navbar className=\"navbar\" />\n            <div className=\"main-content\">\n                <div className=\"task-list\">\n                    <div className=\"task-list-header\">\n                        <h3>작업 리스트 - {monitoredMapName}</h3>\n                        <button className=\"add-task-btn\" onClick={togglePopup}>+</button>\n                    </div>\n                    <ul>\n                        {tasks.map((task) => (\n                            <li\n                                key={task._id}\n                                onClick={() => handleTaskClick(task)}\n                                className={selectedTask && selectedTask._id === task._id ? 'selected' : ''}\n                            >\n                                {task.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"task-details\">\n                    {selectedTask ? (\n                        <div>\n                            <h3>작업 상세 정보</h3>\n                            <label>\n                                <strong>작업 이름:</strong>\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    value={taskName}\n                                    onChange={(e) => setTaskName(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <label>\n                                <strong>작업 설명:</strong>\n                                <textarea\n                                    className=\"textarea-field\"\n                                    value={taskDescription}\n                                    onChange={(e) => setTaskDescription(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <div className=\"task-row\">\n                                <label>\n                                    <strong>작업 유형:</strong>\n                                    <select\n                                        className=\"select-field\"\n                                        value={taskType}\n                                        onChange={(e) => setTaskType(e.target.value)}\n                                    >\n                                        <option value=\"A\">A</option>\n                                        <option value=\"B\">B</option>\n                                        <option value=\"C\">C</option>\n                                    </select>\n                                </label>\n                            </div>\n\n                            <h4>작업 플로우</h4>\n                            <div className=\"task-flow-section\">\n                                <TaskFlow\n                                    ref={taskFlowRef}\n                                    taskId={selectedTask._id}\n                                    workflow={selectedTask.workflow}\n                                    onTemporaryFlowAdd={handleTemporaryFlowAdd}\n                                    onTemporaryFlowDelete={handleTemporaryFlowDelete}\n                                />\n                            </div>\n                        </div>\n                    ) : (\n                        <p>작업을 선택하세요.</p>\n                    )}\n                </div>\n\n                {isPopupOpen && (\n                    <CreateTask onClose={togglePopup} onTaskCreated={handleTaskCreated} />\n                )}\n\n                {assignPopupOpen && selectedTask && (\n                    <AssignTaskPopup onClose={toggleAssignPopup} selectedTask={selectedTask} />\n                )}\n\n                <div className=\"floating-buttons\">\n                    <button className=\"assign-task-btn\" onClick={toggleAssignPopup}>작업 할당</button>\n                    <button className=\"save-task-btn\" onClick={handleSaveTask}>작업 저장</button>\n                    <button className=\"delete-task-btn\" onClick={handleDeleteTask}>작업 삭제</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction AssignTaskPopup({ onClose, selectedTask }) {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n\n    useEffect(() => {\n        const fetchActiveRobots = async () => {\n            try {\n                const response = await axios.get('http://172.30.1.33:5559/robot/robots/active', {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Active 상태의 로봇을 불러오는 중 오류가 발생했습니다:', error);\n            }\n        };\n\n        fetchActiveRobots();\n    }, []);\n\n    const handleRobotSelect = (e) => {\n        setSelectedRobot(e.target.value);\n    };\n\n    const handleAssign = async () => {\n        if (!selectedRobot) {\n            alert('할당할 로봇을 선택하세요.');\n            return;\n        }\n\n        if (!selectedTask || !selectedTask.workflow) {\n            alert('유효하지 않은 작업 또는 작업 플로우가 없습니다.');\n            return;\n        }\n\n        try {\n            for (const flow of selectedTask.workflow) {\n                // x와 y를 포함하여 전송하도록 수정 (필요 시 주석 해제)\n                await axios.post(\n                    'http://172.30.1.33:5559/robot/addWorkflow',\n                    {\n                        robotId: selectedRobot,\n                        node: flow.node,\n                        step: flow.step,\n                        x: flow.x, // x 좌표 추가\n                        y: flow.y, // y 좌표 추가\n                    },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem('token')}`,\n                            'Content-Type': 'application/json'\n                        }\n                    }\n                );\n            }\n            alert(`로봇 ${selectedRobot}에 작업이 성공적으로 할당되었습니다.`);\n            onClose(); // 할당 후 팝업 닫기\n        } catch (error) {\n            console.error('작업 할당 중 오류가 발생했습니다:', error);\n            alert('작업 할당에 실패했습니다.');\n        }\n    };\n\n    return (\n        <div className=\"assign-popup\">\n            <div className=\"popup-content\">\n                <h3>작업 할당</h3>\n                <label>\n                    <strong>로봇 선택:</strong>\n                    <select value={selectedRobot} onChange={handleRobotSelect}>\n                        <option value=\"\" disabled>로봇을 선택하세요</option>\n                        {robots.map((robot) => (\n                            <option key={robot._id} value={robot._id}>\n                                {robot.name}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <div className=\"popup-buttons\">\n                    <button onClick={handleAssign}>할당</button>\n                    <button onClick={onClose}>닫기</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,gBAAgB;AAEvB,SAASC,QAAQA,CAAA,EAAG;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACoB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMwB,WAAW,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM+B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3ChC,SAAS,CAAC,MAAM;IACZiC,UAAU,CAAC,CAAC;IACZC,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMI,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACA,MAAMC,WAAW,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,uCAAuC,EAAE;QACzEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,MAAMS,gBAAgB,GAAGJ,WAAW,CAACK,IAAI;MACzC,IAAID,gBAAgB,IAAIA,gBAAgB,CAACE,IAAI,EAAE;QAC3CnB,mBAAmB,CAACiB,gBAAgB,CAACE,IAAI,CAAC;MAC9C,CAAC,MAAM;QACHnB,mBAAmB,CAAC,SAAS,CAAC;MAClC;IACJ,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDpB,mBAAmB,CAAC,OAAO,CAAC;IAChC;EACJ,CAAC;EAED,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAME,WAAW,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,uCAAuC,EAAE;QACzEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,MAAMS,gBAAgB,GAAGJ,WAAW,CAACK,IAAI;MACzC,IAAI,CAACD,gBAAgB,IAAI,CAACA,gBAAgB,CAACK,GAAG,EAAE;QAC5CD,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;QACpC;MACJ;MAEA,MAAMG,YAAY,GAAG,MAAM3C,KAAK,CAACkC,GAAG,CAAC,4CAA4CG,gBAAgB,CAACK,GAAG,EAAE,EAAE;QACrGP,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAChD,CAAC,CAAC;MACFpB,QAAQ,CAACmC,YAAY,CAACL,IAAI,CAAC;MAC3B,IAAIK,YAAY,CAACL,IAAI,CAACM,MAAM,GAAG,CAAC,EAAEC,eAAe,CAACF,YAAY,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAMK,eAAe,GAAIC,IAAI,IAAK;IAC9BpC,eAAe,CAACoC,IAAI,CAAC;IACrBvB,WAAW,CAACuB,IAAI,CAACP,IAAI,CAAC;IACtBd,kBAAkB,CAACqB,IAAI,CAACC,WAAW,IAAI,EAAE,CAAC;IAC1CpB,WAAW,CAACmB,IAAI,CAACpB,QAAQ,IAAI,GAAG,CAAC;IACjCV,oBAAoB,CAAC,EAAE,CAAC;IACxBE,uBAAuB,CAAC,EAAE,CAAC;IAE3B,IAAIG,WAAW,CAAC2B,OAAO,EAAE;MACrB3B,WAAW,CAAC2B,OAAO,CAACC,sBAAsB,CAAC,CAAC;IAChD;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAMtC,cAAc,CAAEuC,IAAI,IAAK,CAACA,IAAI,CAAC;EACzD,MAAMC,iBAAiB,GAAGA,CAAA,KAAMtC,kBAAkB,CAAEqC,IAAI,IAAK,CAACA,IAAI,CAAC;EAEnE,MAAME,iBAAiB,GAAIC,OAAO,IAAK;IACnC9C,QAAQ,CAAE+C,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;IAChDT,eAAe,CAACS,OAAO,CAAC;EAC5B,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC/C,YAAY,EAAE;MACfgD,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;;IAEA;IACA,MAAMC,WAAW,GAAG;MAChB,GAAGjD,YAAY;MACfkD,QAAQ,EAAE,CAAC,GAAGlD,YAAY,CAACkD,QAAQ,EAAE,GAAG5C,iBAAiB,CAAC;MAC1DwB,IAAI,EAAEjB,QAAQ;MACdyB,WAAW,EAAEvB,eAAe;MAC5BE,QAAQ,EAAEA;IACd,CAAC;IACDe,OAAO,CAACmB,GAAG,CAAC,sBAAsB,EAAEF,WAAW,CAAC;;IAEhD;IACA,KAAK,MAAM,CAACG,KAAK,EAAEC,IAAI,CAAC,IAAIJ,WAAW,CAACC,QAAQ,CAACI,OAAO,CAAC,CAAC,EAAE;MACxD,IAAID,IAAI,CAACE,CAAC,KAAKC,SAAS,IAAIH,IAAI,CAACI,CAAC,KAAKD,SAAS,EAAE;QAC9CxB,OAAO,CAACD,KAAK,CAAC,0BAA0BqB,KAAK,qBAAqB,EAAEC,IAAI,CAAC;QACzEL,KAAK,CAAC,YAAYI,KAAK,GAAG,CAAC,mBAAmB,CAAC;QAC/C;MACJ;IACJ;IAEA,IAAI;MACA,MAAM7D,KAAK,CAACmE,GAAG,CAAC,sCAAsC1D,YAAY,CAACiC,GAAG,EAAE,EAAEgB,WAAW,EAAE;QACnFvB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,KAAK,MAAM;QAAEwC,MAAM;QAAEC;MAAO,CAAC,IAAIpD,oBAAoB,EAAE;QACnD,MAAMjB,KAAK,CAACmE,GAAG,CACX,sCAAsCC,MAAM,aAAaC,MAAM,aAAa,EAC5E,IAAI,EACJ;UAAElC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUR,KAAK;UAAG;QAAE,CACpD,CAAC;MACL;MAEAZ,oBAAoB,CAAC,EAAE,CAAC;MACxBE,uBAAuB,CAAC,EAAE,CAAC;MAC3B,IAAIG,WAAW,CAAC2B,OAAO,EAAE;QACrB3B,WAAW,CAAC2B,OAAO,CAACC,sBAAsB,CAAC,CAAC;MAChD;MAEAQ,KAAK,CAAC,oBAAoB,CAAC;MAC3B,MAAM1B,UAAU,CAAC,CAAC;MAElB,MAAMuC,YAAY,GAAG,MAAMtE,KAAK,CAACkC,GAAG,CAAC,4CAA4CzB,YAAY,CAAC8D,KAAK,EAAE,EAAE;QACnGpC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAChD,CAAC,CAAC;MACF,MAAM4C,SAAS,GAAGF,YAAY,CAAChC,IAAI,CAACmC,IAAI,CAAE3B,IAAI,IAAKA,IAAI,CAACJ,GAAG,KAAKjC,YAAY,CAACiC,GAAG,CAAC;MACjF,IAAI8B,SAAS,EAAE3B,eAAe,CAAC2B,SAAS,CAAC;IAE7C,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CiB,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;EAED,MAAMiB,sBAAsB,GAAIC,OAAO,IAAK;IACxC;IACAlC,OAAO,CAACmB,GAAG,CAAC,4BAA4B,EAAEe,OAAO,CAAC;;IAElD;IACA,IAAIA,OAAO,CAACX,CAAC,KAAKC,SAAS,IAAIU,OAAO,CAACT,CAAC,KAAKD,SAAS,EAAE;MACpDxB,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEmC,OAAO,CAAC;MAClElB,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IAEAzC,oBAAoB,CAAEmC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEwB,OAAO,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAACR,MAAM,EAAES,MAAM,KAAK;IAClD;IACApC,OAAO,CAACmB,GAAG,CAAC,yBAAyB,EAAE;MAAEQ,MAAM;MAAES;IAAO,CAAC,CAAC;IAC1D3D,uBAAuB,CAAEiC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEiB,MAAM;MAAEC,MAAM,EAAEQ;IAAO,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACrE,YAAY,EAAE;MACfgD,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;IAEA,MAAMsB,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,qBAAqB,CAAC;IAC3D,IAAI,CAACF,aAAa,EAAE;IAEpB,IAAI;MACA,MAAM/E,KAAK,CAACmE,GAAG,CAAC,sCAAsC1D,YAAY,CAACiC,GAAG,SAAS,EAAE,IAAI,EAAE;QACnFP,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,MAAM0C,YAAY,GAAG/D,KAAK,CAAC2E,MAAM,CAAEpC,IAAI,IAAKA,IAAI,CAACJ,GAAG,KAAKjC,YAAY,CAACiC,GAAG,CAAC;MAC1ElC,QAAQ,CAAC8D,YAAY,CAAC;MAEtB,IAAIA,YAAY,CAAC1B,MAAM,GAAG,CAAC,EAAE;QACzBC,eAAe,CAACyB,YAAY,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,MAAM;QACH5D,eAAe,CAAC,IAAI,CAAC;QACrBa,WAAW,CAAC,EAAE,CAAC;QACfE,kBAAkB,CAAC,EAAE,CAAC;QACtBE,WAAW,CAAC,GAAG,CAAC;QAChBX,oBAAoB,CAAC,EAAE,CAAC;QACxBE,uBAAuB,CAAC,EAAE,CAAC;MAC/B;MAEAuC,KAAK,CAAC,oBAAoB,CAAC;IAC/B,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CiB,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;EAED,oBACI7D,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B9F,KAAA,CAAAuF,aAAA;IAAQC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtB9F,KAAA,CAAAuF,aAAA,CAAChF,QAAQ;IAAAkF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACZ9F,KAAA,CAAAuF,aAAA,CAACjF,YAAY;IAAAmF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACX,CAAC,eACT9F,KAAA,CAAAuF,aAAA,CAAClF,MAAM;IAACmF,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7B9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtB9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oCAAS,EAACvE,gBAAqB,CAAC,eACpCvB,KAAA,CAAAuF,aAAA;IAAQC,SAAS,EAAC,cAAc;IAACO,OAAO,EAAEzC,WAAY;IAAAmC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CAC/D,CAAC,eACN9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKnF,KAAK,CAACqF,GAAG,CAAE9C,IAAI,iBACZlD,KAAA,CAAAuF,aAAA;IACIU,GAAG,EAAE/C,IAAI,CAACJ,GAAI;IACdiD,OAAO,EAAEA,CAAA,KAAM9C,eAAe,CAACC,IAAI,CAAE;IACrCsC,SAAS,EAAE3E,YAAY,IAAIA,YAAY,CAACiC,GAAG,KAAKI,IAAI,CAACJ,GAAG,GAAG,UAAU,GAAG,EAAG;IAAA2C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE1E5C,IAAI,CAACP,IACN,CACP,CACD,CACH,CAAC,eAEN3C,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBjF,YAAY,gBACTb,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,wCAAY,CAAC,eACjB9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,4BAAc,CAAC,eACvB9F,KAAA,CAAAuF,aAAA;IACIW,IAAI,EAAC,MAAM;IACXV,SAAS,EAAC,aAAa;IACvBW,KAAK,EAAEzE,QAAS;IAChB0E,QAAQ,EAAGC,CAAC,IAAK1E,WAAW,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChD,CACE,CAAC,eACR9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eACN9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,4BAAc,CAAC,eACvB9F,KAAA,CAAAuF,aAAA;IACIC,SAAS,EAAC,gBAAgB;IAC1BW,KAAK,EAAEvE,eAAgB;IACvBwE,QAAQ,EAAGC,CAAC,IAAKxE,kBAAkB,CAACwE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvD,CACE,CAAC,eACR9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eACN9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrB9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,4BAAc,CAAC,eACvB9F,KAAA,CAAAuF,aAAA;IACIC,SAAS,EAAC,cAAc;IACxBW,KAAK,EAAErE,QAAS;IAChBsE,QAAQ,EAAGC,CAAC,IAAKtE,WAAW,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE7C9F,KAAA,CAAAuF,aAAA;IAAQY,KAAK,EAAC,GAAG;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CAAC,eAC5B9F,KAAA,CAAAuF,aAAA;IAAQY,KAAK,EAAC,GAAG;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CAAC,eAC5B9F,KAAA,CAAAuF,aAAA;IAAQY,KAAK,EAAC,GAAG;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CACvB,CACL,CACN,CAAC,eAEN9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iCAAU,CAAC,eACf9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9B9F,KAAA,CAAAuF,aAAA,CAAC9E,QAAQ;IACL8F,GAAG,EAAE9E,WAAY;IACjB+C,MAAM,EAAE3D,YAAY,CAACiC,GAAI;IACzBiB,QAAQ,EAAElD,YAAY,CAACkD,QAAS;IAChCyC,kBAAkB,EAAE1B,sBAAuB;IAC3C2B,qBAAqB,EAAEzB,yBAA0B;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpD,CACA,CACJ,CAAC,gBAEN9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,oDAAa,CAEnB,CAAC,EAEL/E,WAAW,iBACRf,KAAA,CAAAuF,aAAA,CAAC/E,UAAU;IAACkG,OAAO,EAAEpD,WAAY;IAACqD,aAAa,EAAElD,iBAAkB;IAAAgC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACxE,EAEA7E,eAAe,IAAIJ,YAAY,iBAC5Bb,KAAA,CAAAuF,aAAA,CAACqB,eAAe;IAACF,OAAO,EAAElD,iBAAkB;IAAC3C,YAAY,EAAEA,YAAa;IAAA4E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7E,eAED9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B9F,KAAA,CAAAuF,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACO,OAAO,EAAEvC,iBAAkB;IAAAiC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAa,CAAC,eAC9E9F,KAAA,CAAAuF,aAAA;IAAQC,SAAS,EAAC,eAAe;IAACO,OAAO,EAAEnC,cAAe;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAa,CAAC,eACzE9F,KAAA,CAAAuF,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACO,OAAO,EAAEb,gBAAiB;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAa,CAC3E,CACJ,CACJ,CAAC;AAEd;AAEA,SAASc,eAAeA,CAAC;EAAEF,OAAO;EAAE7F;AAAa,CAAC,EAAE;EAChD,MAAM,CAACgG,MAAM,EAAEC,SAAS,CAAC,GAAG7G,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8G,aAAa,EAAEC,gBAAgB,CAAC,GAAG/G,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAM+G,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM9G,KAAK,CAACkC,GAAG,CAAC,6CAA6C,EAAE;UAC5EC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAAG;QACxE,CAAC,CAAC;QACF4E,SAAS,CAACI,QAAQ,CAACxE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC7D;IACJ,CAAC;IAEDqE,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,iBAAiB,GAAId,CAAC,IAAK;IAC7BW,gBAAgB,CAACX,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EACpC,CAAC;EAED,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACL,aAAa,EAAE;MAChBlD,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;IAEA,IAAI,CAAChD,YAAY,IAAI,CAACA,YAAY,CAACkD,QAAQ,EAAE;MACzCF,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IAEA,IAAI;MACA,KAAK,MAAMwD,IAAI,IAAIxG,YAAY,CAACkD,QAAQ,EAAE;QACtC;QACA,MAAM3D,KAAK,CAACkH,IAAI,CACZ,2CAA2C,EAC3C;UACIC,OAAO,EAAER,aAAa;UACtBS,IAAI,EAAEH,IAAI,CAACG,IAAI;UACftD,IAAI,EAAEmD,IAAI,CAACnD,IAAI;UACfE,CAAC,EAAEiD,IAAI,CAACjD,CAAC;UAAE;UACXE,CAAC,EAAE+C,IAAI,CAAC/C,CAAC,CAAE;QACf,CAAC,EACD;UACI/B,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUP,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;YACxD,cAAc,EAAE;UACpB;QACJ,CACJ,CAAC;MACL;MACA2B,KAAK,CAAC,MAAMkD,aAAa,sBAAsB,CAAC;MAChDL,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAO9D,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CiB,KAAK,CAAC,gBAAgB,CAAC;IAC3B;EACJ,CAAC;EAED,oBACI7D,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB9F,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1B9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACd9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI9F,KAAA,CAAAuF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,4BAAc,CAAC,eACvB9F,KAAA,CAAAuF,aAAA;IAAQY,KAAK,EAAEY,aAAc;IAACX,QAAQ,EAAEe,iBAAkB;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtD9F,KAAA,CAAAuF,aAAA;IAAQY,KAAK,EAAC,EAAE;IAACsB,QAAQ;IAAAhC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mDAAiB,CAAC,EAC3Ce,MAAM,CAACb,GAAG,CAAE0B,KAAK,iBACd1H,KAAA,CAAAuF,aAAA;IAAQU,GAAG,EAAEyB,KAAK,CAAC5E,GAAI;IAACqD,KAAK,EAAEuB,KAAK,CAAC5E,GAAI;IAAA2C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpC4B,KAAK,CAAC/E,IACH,CACX,CACG,CACL,CAAC,eACR3C,KAAA,CAAAuF,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1B9F,KAAA,CAAAuF,aAAA;IAAQQ,OAAO,EAAEqB,YAAa;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAU,CAAC,eAC1C9F,KAAA,CAAAuF,aAAA;IAAQQ,OAAO,EAAEW,OAAQ;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAU,CACnC,CACJ,CACJ,CAAC;AAEd;AAEA,eAAepF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}