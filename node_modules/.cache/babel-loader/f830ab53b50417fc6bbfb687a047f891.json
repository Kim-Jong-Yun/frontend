{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TeleopControl.js\";\nimport React, { useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport { exec } from 'child_process';\nimport './TeleopControl.css';\nfunction TeleopControl({\n  robotName,\n  onClose\n}) {\n  let ros;\n  let cmdVel;\n  let rosbridgeProcess;\n  useEffect(() => {\n    // rosbridge 서버 시작\n    rosbridgeProcess = exec('roslaunch rosbridge_server rosbridge_websocket.launch', (error, stdout, stderr) => {\n      if (error) {\n        console.error('Failed to start rosbridge websocket:', error);\n      }\n      if (stdout) console.log(`rosbridge stdout: ${stdout}`);\n      if (stderr) console.warn(`rosbridge stderr: ${stderr}`);\n    });\n\n    // ROS 연결 설정\n    ros = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n\n    // ROS 연결 오류 처리\n    ros.on('error', error => {\n      console.error('ROS connection error:', error);\n    });\n    ros.on('connection', () => {\n      console.log('Connected to ROS');\n    });\n    ros.on('close', () => {\n      console.log('Disconnected from ROS');\n    });\n\n    // cmd_vel 토픽 설정\n    cmdVel = new ROSLIB.Topic({\n      ros,\n      name: `/${robotName}/cmd_vel`,\n      messageType: 'geometry_msgs/Twist'\n    });\n\n    // 컴포넌트 언마운트 시 rosbridge 서버 및 ROS 연결 종료\n    return () => {\n      if (rosbridgeProcess) {\n        rosbridgeProcess.kill(); // rosbridge 서버 종료\n        console.log('rosbridge websocket stopped');\n      }\n      ros.close(); // ROS 연결 종료\n      console.log('ROS connection closed');\n    };\n  }, [robotName]);\n\n  // 로봇에 명령을 보내는 함수\n  const sendCommand = (linear, angular) => {\n    if (cmdVel) {\n      const twist = new ROSLIB.Message({\n        linear: {\n          x: linear,\n          y: 0.0,\n          z: 0.0\n        },\n        angular: {\n          x: 0.0,\n          y: 0.0,\n          z: angular\n        }\n      });\n      cmdVel.publish(twist);\n    } else {\n      console.warn('cmdVel topic is not initialized');\n    }\n  };\n\n  // 키보드 이벤트 핸들러\n  const handleKeyDown = event => {\n    switch (event.key) {\n      case 'ArrowUp':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'ArrowDown':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'ArrowLeft':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'ArrowRight':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case ' ':\n        // 스페이스바\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 버튼 클릭 이벤트 핸들러\n  const handleButtonClick = direction => {\n    switch (direction) {\n      case 'forward':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'backward':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'left':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'right':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case 'stop':\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 키보드 이벤트 리스너 추가 및 제거\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, robotName, \" Teleop Control\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"teleop-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Use arrow keys or buttons to control the robot. Press space to stop.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('forward'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"\\u25B2\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('left'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"\\u25C0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('stop'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"\\u25A0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('right'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"\\u25B6\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('backward'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"\\u25BC\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (onClose) onClose();\n      if (rosbridgeProcess) rosbridgeProcess.kill(); // Close 버튼으로 rosbridge 종료\n    },\n    className: \"close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n}\nexport default TeleopControl;","map":{"version":3,"names":["React","useEffect","ROSLIB","exec","TeleopControl","robotName","onClose","ros","cmdVel","rosbridgeProcess","error","stdout","stderr","console","log","warn","Ros","url","on","Topic","name","messageType","kill","close","sendCommand","linear","angular","twist","Message","x","y","z","publish","handleKeyDown","event","key","handleButtonClick","direction","window","addEventListener","removeEventListener","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TeleopControl.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport { exec } from 'child_process';\nimport './TeleopControl.css';\n\nfunction TeleopControl({ robotName, onClose }) {\n  let ros;\n  let cmdVel;\n  let rosbridgeProcess;\n\n  useEffect(() => {\n    // rosbridge 서버 시작\n    rosbridgeProcess = exec('roslaunch rosbridge_server rosbridge_websocket.launch', (error, stdout, stderr) => {\n      if (error) {\n        console.error('Failed to start rosbridge websocket:', error);\n      }\n      if (stdout) console.log(`rosbridge stdout: ${stdout}`);\n      if (stderr) console.warn(`rosbridge stderr: ${stderr}`);\n    });\n\n    // ROS 연결 설정\n    ros = new ROSLIB.Ros({\n      url: 'ws://localhost:9090',\n    });\n\n    // ROS 연결 오류 처리\n    ros.on('error', (error) => {\n      console.error('ROS connection error:', error);\n    });\n\n    ros.on('connection', () => {\n      console.log('Connected to ROS');\n    });\n\n    ros.on('close', () => {\n      console.log('Disconnected from ROS');\n    });\n\n    // cmd_vel 토픽 설정\n    cmdVel = new ROSLIB.Topic({\n      ros,\n      name: `/${robotName}/cmd_vel`,\n      messageType: 'geometry_msgs/Twist',\n    });\n\n    // 컴포넌트 언마운트 시 rosbridge 서버 및 ROS 연결 종료\n    return () => {\n      if (rosbridgeProcess) {\n        rosbridgeProcess.kill(); // rosbridge 서버 종료\n        console.log('rosbridge websocket stopped');\n      }\n      ros.close(); // ROS 연결 종료\n      console.log('ROS connection closed');\n    };\n  }, [robotName]);\n\n  // 로봇에 명령을 보내는 함수\n  const sendCommand = (linear, angular) => {\n    if (cmdVel) {\n      const twist = new ROSLIB.Message({\n        linear: { x: linear, y: 0.0, z: 0.0 },\n        angular: { x: 0.0, y: 0.0, z: angular },\n      });\n      cmdVel.publish(twist);\n    } else {\n      console.warn('cmdVel topic is not initialized');\n    }\n  };\n\n  // 키보드 이벤트 핸들러\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'ArrowDown':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'ArrowLeft':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'ArrowRight':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case ' ': // 스페이스바\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 버튼 클릭 이벤트 핸들러\n  const handleButtonClick = (direction) => {\n    switch (direction) {\n      case 'forward':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'backward':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'left':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'right':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case 'stop':\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 키보드 이벤트 리스너 추가 및 제거\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup\">\n        <h3>{robotName} Teleop Control</h3>\n        <div className=\"teleop-controls\">\n          <p>Use arrow keys or buttons to control the robot. Press space to stop.</p>\n          <div className=\"button-controls\">\n            <button onClick={() => handleButtonClick('forward')}>▲</button>\n            <div>\n              <button onClick={() => handleButtonClick('left')}>◀</button>\n              <button onClick={() => handleButtonClick('stop')}>■</button>\n              <button onClick={() => handleButtonClick('right')}>▶</button>\n            </div>\n            <button onClick={() => handleButtonClick('backward')}>▼</button>\n          </div>\n        </div>\n        <button onClick={() => {\n          if (onClose) onClose();\n          if (rosbridgeProcess) rosbridgeProcess.kill(); // Close 버튼으로 rosbridge 종료\n        }} className=\"close-btn\">\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TeleopControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}