{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\n// Mapmanage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport NodeManager from '../../components/NodeManager/NodeManager'; // NodeManager 임포트\nimport './Mapmanage.css'; // CSS 파일 import\n\nfunction MapManagementPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isAddingNode, setIsAddingNode] = useState(false);\n  const [nodeCoordinates, setNodeCoordinates] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n  const handleSelectMap = async map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  const openUploadPopup = () => {\n    setIsUploadPopupOpen(true);\n    setUploadName('');\n    setUploadDescription('');\n    setMapFile(null);\n    setYamlFile(null);\n  };\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false);\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n    }\n  };\n\n  // 편집 핸들러 함수 추가\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    if (!selectedMap) {\n      alert('편집할 맵을 선택하세요.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('인증 토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.put(`http://172.30.1.15:5557/map/edit/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('맵 정보가 성공적으로 수정되었습니다.');\n      setIsEditPopupOpen(false);\n      fetchMaps(); // 맵 목록을 다시 불러와 업데이트\n      setSelectedMap(response.data); // 수정된 맵 정보로 업데이트\n    } catch (error) {\n      console.error('맵 수정 중 오류 발생:', error);\n      alert('맵 수정 중 오류가 발생했습니다.');\n    }\n  };\n  const handleMapClick = e => {\n    if (!isAddingNode) return;\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNodeCoordinates({\n      x,\n      y\n    });\n    alert(`좌표가 설정되었습니다: (${x}, ${y})`);\n    setIsAddingNode(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Map List\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-map-button\",\n    onClick: openUploadPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: selectedMap && selectedMap._id === map._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditPopupOpen(true),\n    className: \"edit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"node-add-button\",\n    onClick: () => setIsAddingNode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC \\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-node-button\",\n    onClick: handleNodeAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC \\uC800\\uC7A5\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-view\",\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    alt: \"Selected Map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"Select a map to view its image\"))), selectedMap && /*#__PURE__*/React.createElement(NodeManager, {\n    mapId: selectedMap._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  })), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"Map Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: e => setMapFile(e.target.files[0]),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml,.yml\",\n    onChange: e => setYamlFile(e.target.files[0]),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), isEditPopupOpen && selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleEditSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"Map Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))));\n}\nexport default MapManagementPage;","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faEdit","Navbar","LogoutButton","UserInfo","NodeManager","MapManagementPage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isAddingNode","setIsAddingNode","nodeCoordinates","setNodeCoordinates","x","y","fetchMaps","token","localStorage","getItem","alert","response","get","headers","Authorization","data","error","console","handleSelectMap","map","name","description","_id","responseType","imageUrl","URL","createObjectURL","openUploadPopup","handleDeleteMap","mapId","confirmDelete","window","confirm","put","handleUploadMap","e","preventDefault","length","formData","FormData","append","post","handleEditSubmit","handleMapClick","rect","target","getBoundingClientRect","clientX","left","clientY","top","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","key","icon","handleNodeAdd","src","alt","onSubmit","type","value","onChange","placeholder","required","accept","files"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["// Mapmanage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport NodeManager from '../../components/NodeManager/NodeManager'; // NodeManager 임포트\nimport './Mapmanage.css'; // CSS 파일 import\n\nfunction MapManagementPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isAddingNode, setIsAddingNode] = useState(false);\n  const [nodeCoordinates, setNodeCoordinates] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(\n        `http://172.30.1.15:5557/map/file/${map._id}`,\n        { headers: { Authorization: `Bearer ${token}` }, responseType: 'blob' }\n      );\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n\n  const openUploadPopup = () => {\n    setIsUploadPopupOpen(true);\n    setUploadName('');\n    setUploadDescription('');\n    setMapFile(null);\n    setYamlFile(null);\n  };\n\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false);\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n    }\n  };\n\n  // 편집 핸들러 함수 추가\n  const handleEditSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!selectedMap) {\n      alert('편집할 맵을 선택하세요.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('인증 토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      const response = await axios.put(\n        `http://172.30.1.15:5557/map/edit/${selectedMap._id}`,\n        {\n          name: editName,\n          description: editDescription,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      alert('맵 정보가 성공적으로 수정되었습니다.');\n      setIsEditPopupOpen(false);\n      fetchMaps(); // 맵 목록을 다시 불러와 업데이트\n      setSelectedMap(response.data); // 수정된 맵 정보로 업데이트\n    } catch (error) {\n      console.error('맵 수정 중 오류 발생:', error);\n      alert('맵 수정 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleMapClick = (e) => {\n    if (!isAddingNode) return;\n\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    setNodeCoordinates({ x, y });\n    alert(`좌표가 설정되었습니다: (${x}, ${y})`);\n    setIsAddingNode(false);\n  };\n\n  return (\n    <div className=\"map-management\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      <div className=\"content\">\n        <div className=\"map-list\">\n          <h2>\n            Map List\n            <button className=\"add-map-button\" onClick={openUploadPopup}>\n              +\n            </button>\n          </h2>\n          <ul>\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={selectedMap && selectedMap._id === map._id ? 'selected' : ''}\n              >\n                <span onClick={() => handleSelectMap(map)}>{map.name}</span>\n                <button onClick={() => setIsEditPopupOpen(true)} className=\"edit-button\">\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button onClick={() => handleDeleteMap(map._id)} className=\"delete-button\">\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"map-container\">\n          <div className=\"toolbar\">\n            <button className=\"node-add-button\" onClick={() => setIsAddingNode(true)}>\n              노드 추가\n            </button>\n            <button className=\"confirm-node-button\" onClick={handleNodeAdd}>\n              노드 저장\n            </button>\n          </div>\n\n          <div className=\"map-view\" onClick={handleMapClick}>\n            {mapImage ? (\n              <img src={mapImage} alt=\"Selected Map\" />\n            ) : (\n              <p>Select a map to view its image</p>\n            )}\n          </div>\n        </div>\n\n        {/* NodeManager 컴포넌트 렌더링 및 mapId 전달 */}\n        {selectedMap && (\n          <NodeManager mapId={selectedMap._id} />\n        )}\n      </div>\n\n      {/* 업로드 팝업 */}\n      {isUploadPopupOpen && (\n        <div className=\"upload-popup\">\n          <form onSubmit={handleUploadMap}>\n            <input\n              type=\"text\"\n              value={uploadName}\n              onChange={(e) => setUploadName(e.target.value)}\n              placeholder=\"Map Name\"\n              required\n            />\n            <textarea\n              value={uploadDescription}\n              onChange={(e) => setUploadDescription(e.target.value)}\n              placeholder=\"Map Description\"\n            ></textarea>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(e) => setMapFile(e.target.files[0])}\n              required\n            />\n            <input\n              type=\"file\"\n              accept=\".yaml,.yml\"\n              onChange={(e) => setYamlFile(e.target.files[0])}\n              required\n            />\n            <button type=\"submit\">Upload</button>\n            <button type=\"button\" onClick={() => setIsUploadPopupOpen(false)}>\n              Cancel\n            </button>\n          </form>\n        </div>\n      )}\n\n      {/* 수정 팝업 */}\n      {isEditPopupOpen && selectedMap && (\n        <div className=\"edit-popup\">\n          <form onSubmit={handleEditSubmit}>\n            <input\n              type=\"text\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              placeholder=\"Map Name\"\n              required\n            />\n            <textarea\n              value={editDescription}\n              onChange={(e) => setEditDescription(e.target.value)}\n              placeholder=\"Map Description\"\n            ></textarea>\n            <button type=\"submit\">Save</button>\n            <button type=\"button\" onClick={() => setIsEditPopupOpen(false)}>\n              Cancel\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MapManagementPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}