{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/NodeConnectionPopup.js\";\n// src/components/MapManage/NodeConnectionPopup.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './NodeConnectionPopup.css';\nfunction NodeConnectionPopup({\n  onComplete,\n  onCancel\n}) {\n  const [firstNode, setFirstNode] = useState(null);\n  const [secondNode, setSecondNode] = useState(null);\n  const [waypoints, setWaypoints] = useState([]);\n  const [activeField, setActiveField] = useState(null); // 현재 설정 필드\n\n  // 맵 클릭 시 좌표 처리\n  const handleMapClick = (x, y) => {\n    if (activeField === 'firstNode') {\n      setFirstNode({\n        x,\n        y\n      });\n      setActiveField(null); // 필드 선택 초기화\n    } else if (activeField === 'secondNode') {\n      setSecondNode({\n        x,\n        y\n      });\n      setActiveField(null); // 필드 선택 초기화\n    }\n  };\n\n  // 경유지 추가\n  const handleWaypointAdd = () => {\n    setWaypoints([...waypoints, {\n      x: null,\n      y: null\n    }]);\n  };\n\n  // 경유지 제거\n  const handleWaypointRemove = index => {\n    setWaypoints(waypoints.filter((_, i) => i !== index));\n  };\n\n  // 경유지 설정\n  const handleSetWaypoint = index => {\n    setActiveField(`waypoint-${index}`);\n  };\n\n  // 맵 클릭 이벤트 처리\n  const handleCanvasClick = e => {\n    const canvas = e.target;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // TODO: mapToWorld 함수를 import하거나 정의해야 함\n    // 예시로 직접 좌표를 사용하는 경우\n    const x = clickX; // 실제 월드 좌표로 변환 필요\n    const y = clickY;\n    if (activeField === 'firstNode') {\n      setFirstNode({\n        x,\n        y\n      });\n      setActiveField(null);\n    } else if (activeField === 'secondNode') {\n      setSecondNode({\n        x,\n        y\n      });\n      setActiveField(null);\n    } else {\n      // 특정 웨이포인트 설정\n      const waypointIndex = parseInt(activeField.split('-')[1], 10);\n      const updatedWaypoints = waypoints.map((wp, idx) => {\n        if (idx === waypointIndex) {\n          return {\n            x,\n            y\n          };\n        }\n        return wp;\n      });\n      setWaypoints(updatedWaypoints);\n      setActiveField(null);\n    }\n  };\n\n  // 연결 확인\n  const handleConfirmConnection = async () => {\n    if (!firstNode || !secondNode) {\n      alert(\"모든 노드를 설정해주세요.\");\n      return;\n    }\n\n    // 모든 경유지가 설정되었는지 확인\n    for (let i = 0; i < waypoints.length; i++) {\n      if (waypoints[i].x === null || waypoints[i].y === null) {\n        alert(`경유지 ${i + 1}가 설정되지 않았습니다.`);\n        return;\n      }\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const totalDistance = calculateTotalDistance(firstNode, secondNode, waypoints);\n      await axios.post('http://172.30.1.33:5557/map/node/connect', {\n        node1: firstNode,\n        node2: secondNode,\n        waypoints,\n        distance: totalDistance\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('노드 연결이 성공적으로 완료되었습니다.');\n      onComplete({\n        firstNode,\n        secondNode,\n        waypoints\n      });\n    } catch (error) {\n      console.error('노드 연결 오류:', error);\n      alert('노드 연결에 실패했습니다.');\n    }\n  };\n\n  // 거리 계산 함수\n  const calculateTotalDistance = (node1, node2, waypoints) => {\n    let totalDistance = 0;\n    const distance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    if (waypoints.length > 0) {\n      totalDistance += distance(node1.x, node1.y, waypoints[0].x, waypoints[0].y);\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        totalDistance += distance(waypoints[i].x, waypoints[i].y, waypoints[i + 1].x, waypoints[i + 1].y);\n      }\n      totalDistance += distance(waypoints[waypoints.length - 1].x, waypoints[waypoints.length - 1].y, node2.x, node2.y);\n    } else {\n      totalDistance += distance(node1.x, node1.y, node2.x, node2.y);\n    }\n    return totalDistance;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"\\uB178\\uB4DC \\uC5F0\\uACB0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"\\uCCAB \\uBC88\\uC9F8 \\uB178\\uB4DC\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: firstNode ? `X: ${firstNode.x}, Y: ${firstNode.y}` : '',\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setActiveField('firstNode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Set\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"\\uB450 \\uBC88\\uC9F8 \\uB178\\uB4DC\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: secondNode ? `X: ${secondNode.x}, Y: ${secondNode.y}` : '',\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setActiveField('secondNode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Set\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-waypoints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"\\uACBD\\uC720\\uC9C0\"), waypoints.map((wp, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"popup-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: wp.x !== null && wp.y !== null ? `X: ${wp.x}, Y: ${wp.y}` : '',\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleSetWaypoint(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Set\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleWaypointRemove(index),\n    className: \"remove-waypoint-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleWaypointAdd,\n    className: \"add-waypoint-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"\\uB9F5\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC88C\\uD45C\\uB97C \\uC124\\uC815\\uD558\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConfirmConnection,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"\\uC5F0\\uACB0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onCancel,\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"\\uCDE8\\uC18C\")), /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"popup-map-canvas\",\n    onClick: handleCanvasClick,\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      cursor: activeField ? 'crosshair' : 'default',\n      zIndex: 1001,\n      opacity: 0 // 투명하게 설정\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }));\n}\nexport default NodeConnectionPopup;","map":{"version":3,"names":["React","useState","axios","NodeConnectionPopup","onComplete","onCancel","firstNode","setFirstNode","secondNode","setSecondNode","waypoints","setWaypoints","activeField","setActiveField","handleMapClick","x","y","handleWaypointAdd","handleWaypointRemove","index","filter","_","i","handleSetWaypoint","handleCanvasClick","e","canvas","target","rect","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","waypointIndex","parseInt","split","updatedWaypoints","map","wp","idx","handleConfirmConnection","alert","length","token","localStorage","getItem","totalDistance","calculateTotalDistance","post","node1","node2","distance","headers","Authorization","error","console","x1","y1","x2","y2","Math","sqrt","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","readOnly","onClick","key","style","position","width","height","cursor","zIndex","opacity"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/NodeConnectionPopup.js"],"sourcesContent":["// src/components/MapManage/NodeConnectionPopup.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './NodeConnectionPopup.css';\n\nfunction NodeConnectionPopup({ onComplete, onCancel }) {\n  const [firstNode, setFirstNode] = useState(null);\n  const [secondNode, setSecondNode] = useState(null);\n  const [waypoints, setWaypoints] = useState([]);\n  const [activeField, setActiveField] = useState(null); // 현재 설정 필드\n\n  // 맵 클릭 시 좌표 처리\n  const handleMapClick = (x, y) => {\n    if (activeField === 'firstNode') {\n      setFirstNode({ x, y });\n      setActiveField(null); // 필드 선택 초기화\n    } else if (activeField === 'secondNode') {\n      setSecondNode({ x, y });\n      setActiveField(null); // 필드 선택 초기화\n    }\n  };\n\n  // 경유지 추가\n  const handleWaypointAdd = () => {\n    setWaypoints([...waypoints, { x: null, y: null }]);\n  };\n\n  // 경유지 제거\n  const handleWaypointRemove = (index) => {\n    setWaypoints(waypoints.filter((_, i) => i !== index));\n  };\n\n  // 경유지 설정\n  const handleSetWaypoint = (index) => {\n    setActiveField(`waypoint-${index}`);\n  };\n\n  // 맵 클릭 이벤트 처리\n  const handleCanvasClick = (e) => {\n    const canvas = e.target;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // TODO: mapToWorld 함수를 import하거나 정의해야 함\n    // 예시로 직접 좌표를 사용하는 경우\n    const x = clickX; // 실제 월드 좌표로 변환 필요\n    const y = clickY;\n\n    if (activeField === 'firstNode') {\n      setFirstNode({ x, y });\n      setActiveField(null);\n    } else if (activeField === 'secondNode') {\n      setSecondNode({ x, y });\n      setActiveField(null);\n    } else {\n      // 특정 웨이포인트 설정\n      const waypointIndex = parseInt(activeField.split('-')[1], 10);\n      const updatedWaypoints = waypoints.map((wp, idx) => {\n        if (idx === waypointIndex) {\n          return { x, y };\n        }\n        return wp;\n      });\n      setWaypoints(updatedWaypoints);\n      setActiveField(null);\n    }\n  };\n\n  // 연결 확인\n  const handleConfirmConnection = async () => {\n    if (!firstNode || !secondNode) {\n      alert(\"모든 노드를 설정해주세요.\");\n      return;\n    }\n\n    // 모든 경유지가 설정되었는지 확인\n    for (let i = 0; i < waypoints.length; i++) {\n      if (waypoints[i].x === null || waypoints[i].y === null) {\n        alert(`경유지 ${i + 1}가 설정되지 않았습니다.`);\n        return;\n      }\n    }\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      const totalDistance = calculateTotalDistance(firstNode, secondNode, waypoints);\n\n      await axios.post(\n        'http://172.30.1.33:5557/map/node/connect',\n        {\n          node1: firstNode,\n          node2: secondNode,\n          waypoints,\n          distance: totalDistance,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert('노드 연결이 성공적으로 완료되었습니다.');\n      onComplete({ firstNode, secondNode, waypoints });\n    } catch (error) {\n      console.error('노드 연결 오류:', error);\n      alert('노드 연결에 실패했습니다.');\n    }\n  };\n\n  // 거리 계산 함수\n  const calculateTotalDistance = (node1, node2, waypoints) => {\n    let totalDistance = 0;\n    const distance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    \n    if (waypoints.length > 0) {\n      totalDistance += distance(node1.x, node1.y, waypoints[0].x, waypoints[0].y);\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        totalDistance += distance(waypoints[i].x, waypoints[i].y, waypoints[i + 1].x, waypoints[i + 1].y);\n      }\n      totalDistance += distance(waypoints[waypoints.length - 1].x, waypoints[waypoints.length - 1].y, node2.x, node2.y);\n    } else {\n      totalDistance += distance(node1.x, node1.y, node2.x, node2.y);\n    }\n    return totalDistance;\n  };\n\n  return (\n    <div className=\"popup-container\">\n      <h3>노드 연결</h3>\n      \n      {/* 첫 번째 노드 선택 */}\n      <div className=\"popup-field\">\n        <label>첫 번째 노드</label>\n        <input type=\"text\" value={firstNode ? `X: ${firstNode.x}, Y: ${firstNode.y}` : ''} readOnly />\n        <button onClick={() => setActiveField('firstNode')}>Set</button>\n      </div>\n\n      {/* 두 번째 노드 선택 */}\n      <div className=\"popup-field\">\n        <label>두 번째 노드</label>\n        <input type=\"text\" value={secondNode ? `X: ${secondNode.x}, Y: ${secondNode.y}` : ''} readOnly />\n        <button onClick={() => setActiveField('secondNode')}>Set</button>\n      </div>\n\n      {/* 경유지 관리 */}\n      <div className=\"popup-waypoints\">\n        <label>경유지</label>\n        {waypoints.map((wp, index) => (\n          <div key={index} className=\"popup-field\">\n            <input\n              type=\"text\"\n              value={wp.x !== null && wp.y !== null ? `X: ${wp.x}, Y: ${wp.y}` : ''}\n              readOnly\n            />\n            <button onClick={() => handleSetWaypoint(index)}>Set</button>\n            <button onClick={() => handleWaypointRemove(index)} className=\"remove-waypoint-button\">-</button>\n          </div>\n        ))}\n        <button onClick={handleWaypointAdd} className=\"add-waypoint-button\">+</button>\n      </div>\n\n      {/* 맵 클릭 지시 */}\n      <p>맵을 클릭하여 좌표를 설정하세요.</p>\n\n      {/* 확인 및 취소 버튼 */}\n      <div className=\"popup-button-container\">\n        <button onClick={handleConfirmConnection} className=\"popup-submit-button\">연결</button>\n        <button onClick={onCancel} className=\"popup-cancel-button\">취소</button>\n      </div>\n\n      {/* 투명한 캔버스 오버레이 (맵 클릭 이벤트를 받을 수 있도록) */}\n      <canvas\n        className=\"popup-map-canvas\"\n        onClick={handleCanvasClick}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          cursor: activeField ? 'crosshair' : 'default',\n          zIndex: 1001,\n          opacity: 0, // 투명하게 설정\n        }}\n      />\n    </div>\n  );\n}\n\nexport default NodeConnectionPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}