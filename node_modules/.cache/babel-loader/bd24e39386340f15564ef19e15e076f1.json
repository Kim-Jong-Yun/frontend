{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\n// src/components/MapManage/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nimport NodeList from './NodeList';\nimport NodeDisconnect from './NodeDisconnect';\nimport NodeConnectionPopup from './NodeConnectionPopup';\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false);\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isCreatingNode, setIsCreatingNode] = useState(false);\n  const [nodeX, setNodeX] = useState(null);\n  const [nodeY, setNodeY] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false);\n  const canvasRef = useRef(null);\n  const mapImageRef = useRef(null);\n  const [nodes, setNodes] = useState([]);\n  const [isDeletingNode, setIsDeletingNode] = useState(false);\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isNodeConnectionPopupOpen, setIsNodeConnectionPopupOpen] = useState(false);\n  const [connectionData, setConnectionData] = useState({\n    node1: null,\n    node2: null,\n    waypoints: []\n  });\n  const [disconnectStep, setDisconnectStep] = useState('idle'); // 'idle' | 'selectingFirstNode' | 'selectingSecondNode'\n  const [disconnectFirstNodeId, setDisconnectFirstNodeId] = useState(null);\n  const [disconnectSecondNodeId, setDisconnectSecondNodeId] = useState(null);\n  const [isCreatingNoGoZone, setIsCreatingNoGoZone] = useState(false);\n  const [isDeletingNoGoZone, setIsDeletingNoGoZone] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [noGoZones, setNoGoZones] = useState([]);\n  const [isPatchingMap, setIsPatchingMap] = useState(false);\n  const [selectionMode, setSelectionMode] = useState('none'); // 'none' | 'selectingNode1' | 'selectingNode2' | 'selectingWaypoint'\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.33:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n      if (response.data.length > 0) {\n        await handleSelectMap(response.data[0]);\n      }\n    } catch (error) {\n      console.error('맵을 가져오는 중 오류 발생:', error);\n      alert('맵을 가져오는 데 실패했습니다.');\n    }\n  };\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data);\n      } else {\n        setNodes([]);\n      }\n    } catch (error) {\n      console.error('노드를 가져오는 중 오류 발생:', error);\n      setNodes([]);\n      alert('노드를 가져오는 데 실패했습니다.');\n    }\n  };\n  const fetchNoGoZones = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/no-go-zones/map/${mapId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNoGoZones(response.data);\n    } catch (error) {\n      console.error('금지구역을 가져오는 중 오류 발생:', error);\n      alert('금지구역을 가져오는 데 실패했습니다.');\n    }\n  };\n  const handleSelectMap = async map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('맵 이미지를 가져오는 중 오류 발생:', error);\n      alert('맵 이미지를 가져오는 데 실패했습니다.');\n    }\n    await fetchNoGoZones(map._id);\n    await fetchNodes(map._id);\n  };\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawAll();\n    };\n  };\n  const mapToMapCoordinates = (x, y) => {\n    return worldToMap(x, y, imageNaturalWidth, imageNaturalHeight);\n  };\n  const drawAll = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(mapImageRef.current, 0, 0, imageNaturalWidth, imageNaturalHeight);\n\n    // Draw No-Go Zones\n    noGoZones.forEach(zone => {\n      const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n      const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n      const width = bottomRight.x - topLeft.x;\n      const height = bottomRight.y - topLeft.y;\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n      ctx.fillRect(topLeft.x, topLeft.y, width, height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(topLeft.x, topLeft.y, width, height);\n    });\n\n    // Draw Current Rectangle (if any)\n    if (currentRect) {\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n    }\n\n    // Draw Node Connections\n    nodes.forEach(node => {\n      node.connections.forEach(connection => {\n        const connectedNode = nodes.find(n => n._id === connection.node);\n        if (connectedNode) {\n          const {\n            x: startX,\n            y: startY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const {\n            x: endX,\n            y: endY\n          } = worldToMap(connectedNode.x, connectedNode.y, imageNaturalWidth, imageNaturalHeight);\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(startX, startY);\n          if (connection.waypoints && connection.waypoints.length > 0) {\n            connection.waypoints.forEach(wp => {\n              const {\n                x: wpX,\n                y: wpY\n              } = worldToMap(wp.x, wp.y, imageNaturalWidth, imageNaturalHeight);\n              ctx.lineTo(wpX, wpY);\n            });\n          }\n          ctx.lineTo(endX, endY);\n          ctx.stroke();\n        }\n      });\n    });\n\n    // Draw Deletion Indicators for No-Go Zones\n    if (isDeletingNoGoZone) {\n      noGoZones.forEach(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const size = 20;\n        ctx.fillStyle = 'red';\n        ctx.font = 'bold 16px Inter, Arial, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('X', topLeft.x + 8, topLeft.y + 15);\n      });\n    }\n\n    // Draw Nodes\n    nodes.forEach(node => {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const size = 10;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size);\n    });\n  };\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapImage]);\n  useEffect(() => {\n    if (mapImage && selectedMap) {\n      fetchNodes(selectedMap._id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapImage, selectedMap]);\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawAll();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, noGoZones, currentRect, isDeletingNoGoZone]);\n  useEffect(() => {\n    if (!isDeletingNode && disconnectStep === 'idle' && !isCreatingNoGoZone && !isDeletingNoGoZone && !dragging && selectionMode === 'none') {\n      document.body.style.cursor = 'default';\n    }\n  }, [isDeletingNode, disconnectStep, isCreatingNoGoZone, isDeletingNoGoZone, dragging, selectionMode]);\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    let foundNode = null;\n    for (let node of nodes) {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 5) {\n        foundNode = node;\n        break;\n      }\n    }\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else {\n      setHoveredNode(null);\n    }\n    if (isCreatingNoGoZone && dragging && dragStart) {\n      const newRect = {\n        x: Math.min(mouseX, dragStart.x),\n        y: Math.min(mouseY, dragStart.y),\n        width: Math.abs(mouseX - dragStart.x),\n        height: Math.abs(mouseY - dragStart.y)\n      };\n      setCurrentRect(newRect);\n    }\n  };\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n    if (isCreatingNoGoZone && dragging) {\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      document.body.style.cursor = 'default';\n    }\n  };\n  const handleMouseDown = e => {\n    if (isCreatingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      setDragStart({\n        x: startX,\n        y: startY\n      });\n      setDragging(true);\n      document.body.style.cursor = 'crosshair';\n    }\n    if (isDeletingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n      const clickedZone = noGoZones.find(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n        return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n      });\n      if (clickedZone) {\n        handleDeleteNoGoZone(clickedZone._id);\n      }\n    }\n  };\n  const handleMouseUp = async e => {\n    if (isCreatingNoGoZone && dragging && dragStart && currentRect) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n      const finalRect = {\n        x: Math.min(endX, dragStart.x),\n        y: Math.min(endY, dragStart.y),\n        width: Math.abs(endX - dragStart.x),\n        height: Math.abs(endY - dragStart.y)\n      };\n      const topLeftWorld = mapToWorld(finalRect.x, finalRect.y, imageNaturalWidth, imageNaturalHeight);\n      const bottomRightWorld = mapToWorld(finalRect.x + finalRect.width, finalRect.y + finalRect.height, imageNaturalWidth, imageNaturalHeight);\n      const noGoZone = {\n        topLeft: topLeftWorld,\n        bottomRight: bottomRightWorld,\n        mapId: selectedMap._id\n      };\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://172.30.1.33:5557/map/no-go-zones', noGoZone, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('금지 구역이 성공적으로 생성되었습니다.');\n        setNoGoZones([...noGoZones, response.data.noGoZone]);\n      } catch (error) {\n        console.error('금지 구역 생성 중 오류 발생:', error);\n        alert('금지 구역 생성에 실패했습니다.');\n      }\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n  const handleConnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsNodeConnectionPopupOpen(true);\n  };\n  const handleDisconnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setDisconnectStep('selectingFirstNode');\n    setDisconnectFirstNodeId(null);\n    setDisconnectSecondNodeId(null);\n    alert('연결을 해제할 첫 번째 노드를 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n  const handleCreateNoGoZone = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNoGoZone(true);\n    setIsDeletingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setCurrentRect(null);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n  const handleDeleteNoGoZoneMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNoGoZone(true);\n    setIsCreatingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setSelectionMode('none');\n    alert('삭제할 금지 구역을 클릭하세요.');\n    document.body.style.cursor = 'not-allowed';\n  };\n  const handleDeleteNoGoZone = async zoneId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 금지 구역을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/no-go-zones/${zoneId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('금지 구역이 성공적으로 삭제되었습니다.');\n      setNoGoZones(noGoZones.filter(zone => zone._id !== zoneId));\n    } catch (error) {\n      console.error('금지 구역 삭제 중 오류 발생:', error);\n      alert('금지 구역 삭제에 실패했습니다.');\n    } finally {\n      setIsDeletingNoGoZone(false);\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n  const handleMapClick = async e => {\n    if (!selectedMap) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n    const {\n      x,\n      y\n    } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n    try {\n      // Handle Disconnect Node Selection\n      if (disconnectStep === 'selectingFirstNode') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n        if (clickedNode) {\n          setDisconnectFirstNodeId(clickedNode._id);\n          setDisconnectStep('selectingSecondNode');\n          alert(`첫 번째 노드가 \"${clickedNode.name}\"으로 설정되었습니다. 두 번째 노드를 선택하세요.`);\n          return;\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n          return;\n        }\n      }\n      if (disconnectStep === 'selectingSecondNode') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n        if (clickedNode) {\n          setDisconnectSecondNodeId(clickedNode._id);\n          setDisconnectStep('idle');\n          setSelectionMode('none');\n          document.body.style.cursor = 'default';\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      // Handle Node Connection Selection\n      if (selectionMode === 'selectingNode1') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n        if (clickedNode) {\n          setConnectionData(prev => ({\n            ...prev,\n            node1: clickedNode\n          }));\n          setSelectionMode('selectingNode2');\n          alert(`노드 1이 \"${clickedNode.name}\"으로 설정되었습니다. 노드 2를 선택하세요.`);\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n      if (selectionMode === 'selectingNode2') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n        if (clickedNode) {\n          setConnectionData(prev => ({\n            ...prev,\n            node2: clickedNode\n          }));\n          setSelectionMode('none');\n          alert(`노드 2가 \"${clickedNode.name}\"으로 설정되었습니다.`);\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      // Handle Waypoint Selection\n      if (selectionMode === 'selectingWaypoint') {\n        const newWaypoint = {\n          x,\n          y\n        };\n        setConnectionData(prev => ({\n          ...prev,\n          waypoints: [...prev.waypoints, newWaypoint]\n        }));\n        setSelectionMode('none');\n        alert(`웨이포인트가 추가되었습니다: X=${x.toFixed(2)}, Y=${y.toFixed(2)}`);\n        return;\n      }\n\n      // Handle Creating Node\n      if (isCreatingNode) {\n        setNodeX(x);\n        setNodeY(y);\n        setIsCreatingNode(false);\n        setIsNodePopupOpen(true);\n        document.body.style.cursor = 'default';\n        return;\n      }\n\n      // Handle Deleting Node\n      if (isDeletingNode) {\n        let nodeToDelete = null;\n        for (let node of nodes) {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          if (distance < 10) {\n            // Adjust the radius as needed\n            nodeToDelete = node;\n            break;\n          }\n        }\n        if (nodeToDelete) {\n          const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n          if (confirmDelete) {\n            try {\n              const token = localStorage.getItem('token');\n              await axios.delete(`http://172.30.1.33:5557/map/node/${nodeToDelete._id}`, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              alert('노드가 성공적으로 삭제되었습니다.');\n              await fetchNodes(selectedMap._id);\n              drawAll();\n              setIsDeletingNode(false);\n            } catch (error) {\n              console.error('노드 삭제 중 오류 발생:', error);\n              alert('노드 삭제에 실패했습니다.');\n            }\n          }\n        } else {\n          alert('해당 위치에 노드를 찾을 수 없습니다.');\n        }\n        return;\n      }\n\n      // Ignore clicks when disconnecting\n      if (disconnectStep !== 'idle') {\n        return;\n      }\n\n      // Ignore clicks when not in any selection mode\n      if (selectionMode === 'none') {\n        return;\n      }\n    } catch (error) {\n      console.error('맵 클릭 처리 중 오류 발생:', error);\n      alert('맵 클릭 처리 중 오류가 발생했습니다.');\n    } finally {\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    }\n  };\n  const calculateTotalDistance = (node1Id, node2Id, waypoints) => {\n    const node1 = nodes.find(n => n._id === node1Id);\n    const node2 = nodes.find(n => n._id === node2Id);\n    if (!node1 || !node2) return 0;\n    let totalDistance = 0;\n    const distance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    if (waypoints.length > 0) {\n      totalDistance += distance(node1.x, node1.y, waypoints[0].x, waypoints[0].y);\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        totalDistance += distance(waypoints[i].x, waypoints[i].y, waypoints[i + 1].x, waypoints[i + 1].y);\n      }\n      totalDistance += distance(waypoints[waypoints.length - 1].x, waypoints[waypoints.length - 1].y, node2.x, node2.y);\n    } else {\n      totalDistance += distance(node1.x, node1.y, node2.x, node2.y);\n    }\n    return totalDistance;\n  };\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    if (nodeName.trim().length === 0) {\n      alert('노드 이름을 입력해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('노드가 성공적으로 생성되었습니다.');\n      setIsNodePopupOpen(false);\n      setNodeName('');\n      setNodeX(null);\n      setNodeY(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 생성 중 오류 발생:', error);\n      alert('노드 생성에 실패했습니다.');\n    }\n  };\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 맵을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('맵이 성공적으로 삭제되었습니다.');\n      await fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n        setMapImage(null);\n        setNodes([]);\n        setNoGoZones([]);\n      }\n    } catch (error) {\n      console.error('맵 삭제 중 오류 발생:', error);\n      alert('맵 삭제에 실패했습니다.');\n    }\n  };\n  const handleFileChange = e => {\n    setMapFile(e.target.files[0]);\n  };\n  const handleYamlFileChange = e => {\n    setYamlFile(e.target.files[0]);\n  };\n  const handleUpdateMap = async e => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 성공적으로 업데이트되었습니다.');\n      setIsEditPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('맵 업데이트 중 오류 발생:', error);\n      alert(`맵 업데이트 중 오류 발생: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('맵이 성공적으로 업로드되었습니다.');\n      setIsUploadPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업로드 중 오류 발생:', error);\n      alert('맵 업로드에 실패했습니다.');\n    }\n  };\n  const openEditPopup = map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    setIsEditPopupOpen(true);\n  };\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNode(true);\n    setIsDeletingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n  useEffect(() => {\n    return () => {\n      if (mapImage) {\n        URL.revokeObjectURL(mapImage);\n      }\n    };\n  }, [mapImage]);\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    setIsDeletingNoGoZone(false);\n    setIsCreatingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'not-allowed';\n  };\n  const handleSendMap = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5559/robot/send_map', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 로봇에게 성공적으로 전송되었습니다.');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('맵을 로봇에게 전송하는 중 오류 발생:', error);\n      alert(`맵을 로봇에게 전송하는 중 오류 발생: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    }\n  };\n  const handlePatchMap = async () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmPatch = window.confirm('선택한 맵의 모든 노드 간의 최단 경로를 계산하고 저장하시겠습니까?');\n    if (!confirmPatch) return;\n    setIsPatchingMap(true);\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/shortpaths/map/${selectedMap._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('기존 ShortPath 데이터가 삭제되었습니다.');\n      const response = await axios.post('http://172.30.1.33:5557/map/calculate-paths', {\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('맵 패치가 성공적으로 완료되었습니다.');\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      } else {\n        alert('맵 패치에 실패했습니다.');\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('맵 패치 중 오류 발생:', error);\n      alert(`맵 패치 중 오류 발생: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message}`);\n    } finally {\n      setIsPatchingMap(false);\n    }\n  };\n  const handleNodeConnectionCreate = async ({\n    node1,\n    node2,\n    waypoints\n  }) => {\n    if (!node1 || !node2) {\n      alert('노드 1과 노드 2를 모두 선택해주세요.');\n      return;\n    }\n    try {\n      const totalDistance = calculateTotalDistance(node1._id, node2._id, waypoints);\n      const token = localStorage.getItem('token');\n      await axios.post(`http://172.30.1.33:5557/map/node/connect`, {\n        node1: node1._id,\n        node2: node2._id,\n        waypoints: waypoints,\n        // 웨이포인트는 좌표값으로 전달\n        distance: totalDistance\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(`노드가 성공적으로 연결되었습니다. 전체 꺾인 경로의 가중치: ${totalDistance.toFixed(2)}`);\n      setIsNodeConnectionPopupOpen(false);\n      setConnectionData({\n        node1: null,\n        node2: null,\n        waypoints: []\n      });\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 연결 중 오류 발생:', error);\n      alert('노드 연결에 실패했습니다.');\n    }\n  };\n\n  // Callback functions to start selecting nodes or waypoints\n  const startSelectingNode1 = () => {\n    setSelectionMode('selectingNode1');\n    alert('노드 1을 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n  const startSelectingNode2 = () => {\n    setSelectionMode('selectingNode2');\n    alert('노드 2를 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n  const startSelectingWaypoint = () => {\n    setSelectionMode('selectingWaypoint');\n    alert('웨이포인트를 선택하세요.');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // Disconnect Success Handler\n  const handleDisconnectSuccess = isDeleted => {\n    if (isDeleted) {\n      alert('노드 간의 연결이 성공적으로 해제되었습니다.');\n      fetchNodes(selectedMap._id);\n      drawAll();\n    } else {\n      alert('노드 간의 연결 해제에 실패했습니다.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNodeMode,\n    className: \"create-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDeleteNodeMode,\n    className: \"delete-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC0AD\\uC81C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConnectNodeMode,\n    className: \"connect-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC5F0\\uACB0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDisconnectNodeMode,\n    className: \"disconnect-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 11\n    }\n  }), \" \\uC5F0\\uACB0 \\uD574\\uC81C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNoGoZone,\n    className: \"create-nogozone-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 9\n    }\n  }, \"\\uAE08\\uC9C0 \\uAD6C\\uC5ED \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDeleteNoGoZoneMode,\n    className: \"delete-nogozone-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 9\n    }\n  }, \"\\uAE08\\uC9C0 \\uAD6C\\uC5ED \\uD574\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 11\n    }\n  }, \"\\uB9F5 \\uB9AC\\uC2A4\\uD2B8\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${(selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id) === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 15\n    }\n  }, selectedMap.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-and-node-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-container\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    className: \"map-canvas\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleMapClick,\n    style: {\n      cursor: isCreatingNode ? 'crosshair' : isCreatingNoGoZone ? 'crosshair' : isDeletingNoGoZone ? 'not-allowed' : selectionMode !== 'none' ? 'crosshair' : 'default'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uC774\\uBBF8\\uC9C0\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694.\"), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send-to-robots-button\",\n    onClick: handleSendMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07\\uC5D0\\uAC8C \\uC804\\uC1A1\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"map-patch-button\",\n    onClick: handlePatchMap,\n    disabled: isPatchingMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 17\n    }\n  }, isPatchingMap ? '맵 패치 중...' : '맵 패치'))), /*#__PURE__*/React.createElement(NodeList, {\n    mapId: selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 11\n    }\n  }))), isNodePopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 13\n    }\n  }, \"X: \", nodeX.toFixed(2), \", Y: \", nodeY.toFixed(2)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"\\uB178\\uB4DC \\uC774\\uB984 \\uC785\\uB825\",\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitNode,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 15\n    }\n  }, \"\\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsNodePopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")))), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 13\n    }\n  }, \"\\uB9F5 \\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"\\uB9F5 \\uC774\\uB984\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"\\uB9F5 \\uC124\\uBA85\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5 \\uD30C\\uC77C (.pgm, .png, .jpg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 15\n    }\n  }, \"YAML \\uD30C\\uC77C (.yaml)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 17\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\"))))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 13\n    }\n  }, \"\\uB9F5 \\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"\\uB9F5 \\uC774\\uB984\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"\\uB9F5 \\uC124\\uBA85\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginTop: '10px',\n      color: '#333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isMonitored,\n    onChange: e => setIsMonitored(e.target.checked),\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 17\n    }\n  }), \"\\uBAA8\\uB2C8\\uD130\\uB9C1 \\uB9F5\\uC73C\\uB85C \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 17\n    }\n  }, \"\\uC5C5\\uB370\\uC774\\uD2B8\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\"))))), hoveredNode && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip\",\n    style: {\n      position: 'fixed',\n      top: `${tooltipPosition.y + 10}px`,\n      left: `${tooltipPosition.x + 10}px`,\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      color: 'white',\n      padding: '5px 10px',\n      borderRadius: '4px',\n      pointerEvents: 'none',\n      zIndex: 1000,\n      fontSize: '12px',\n      fontFamily: 'Inter, Arial, sans-serif'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 9\n    }\n  }, hoveredNode.name), disconnectStep !== 'idle' && /*#__PURE__*/React.createElement(NodeDisconnect, {\n    firstNodeId: disconnectFirstNodeId,\n    setFirstNodeId: setDisconnectFirstNodeId,\n    secondNodeId: disconnectSecondNodeId,\n    setSecondNodeId: setDisconnectSecondNodeId,\n    onDisconnectSuccess: handleDisconnectSuccess,\n    nodes: nodes,\n    selectedMapId: selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 9\n    }\n  }), isPatchingMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 11\n    }\n  })), isNodeConnectionPopupOpen && /*#__PURE__*/React.createElement(NodeConnectionPopup, {\n    connectionData: connectionData,\n    onClose: () => setIsNodeConnectionPopupOpen(false),\n    onCreate: handleNodeConnectionCreate,\n    setSelectionMode: setSelectionMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 9\n    }\n  }));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faEdit","faPlus","faLink","faUnlink","Navbar","LogoutButton","UserInfo","worldToMap","mapToWorld","NodeList","NodeDisconnect","NodeConnectionPopup","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","isMonitored","setIsMonitored","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isCreatingNode","setIsCreatingNode","nodeX","setNodeX","nodeY","setNodeY","nodeName","setNodeName","isNodePopupOpen","setIsNodePopupOpen","canvasRef","mapImageRef","nodes","setNodes","isDeletingNode","setIsDeletingNode","imageNaturalWidth","setImageNaturalWidth","imageNaturalHeight","setImageNaturalHeight","hoveredNode","setHoveredNode","tooltipPosition","setTooltipPosition","x","y","isNodeConnectionPopupOpen","setIsNodeConnectionPopupOpen","connectionData","setConnectionData","node1","node2","waypoints","disconnectStep","setDisconnectStep","disconnectFirstNodeId","setDisconnectFirstNodeId","disconnectSecondNodeId","setDisconnectSecondNodeId","isCreatingNoGoZone","setIsCreatingNoGoZone","isDeletingNoGoZone","setIsDeletingNoGoZone","dragging","setDragging","dragStart","setDragStart","currentRect","setCurrentRect","noGoZones","setNoGoZones","isPatchingMap","setIsPatchingMap","selectionMode","setSelectionMode","fetchMaps","token","localStorage","getItem","alert","response","get","headers","data","length","handleSelectMap","error","console","fetchNodes","mapId","status","fetchNoGoZones","map","name","description","_id","Authorization","responseType","imageUrl","URL","createObjectURL","loadMapImage","canvas","current","ctx","getContext","Image","src","onload","imgWidth","width","imgHeight","height","clearRect","drawImage","drawAll","mapToMapCoordinates","forEach","zone","topLeft","bottomRight","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","node","connections","connection","connectedNode","find","n","startX","startY","endX","endY","beginPath","moveTo","wp","wpX","wpY","lineTo","stroke","size","font","textAlign","textBaseline","fillText","document","body","style","cursor","handleMouseMove","e","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","foundNode","distance","Math","sqrt","newRect","min","abs","handleMouseLeave","handleMouseDown","clickX","clickY","clickedZone","handleDeleteNoGoZone","handleMouseUp","finalRect","topLeftWorld","bottomRightWorld","noGoZone","post","handleConnectNodeMode","handleDisconnectNodeMode","handleCreateNoGoZone","handleDeleteNoGoZoneMode","zoneId","confirmDelete","window","confirm","delete","filter","handleMapClick","clickedNode","prev","newWaypoint","toFixed","nodeToDelete","calculateTotalDistance","node1Id","node2Id","totalDistance","x1","y1","x2","y2","i","handleSubmitNode","trim","handleDeleteMap","put","handleFileChange","target","files","handleYamlFileChange","handleUpdateMap","preventDefault","_error$response","_error$response$data","message","handleUploadMap","formData","FormData","append","openEditPopup","handleCreateNodeMode","revokeObjectURL","handleDeleteNodeMode","handleSendMap","_error$response2","_error$response2$data","handlePatchMap","confirmPatch","log","_error$response3","_error$response3$data","handleNodeConnectionCreate","startSelectingNode1","startSelectingNode2","startSelectingWaypoint","handleDisconnectSuccess","isDeleted","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","key","position","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","disabled","type","value","onChange","placeholder","onSubmit","required","accept","marginTop","color","checked","marginRight","backgroundColor","padding","borderRadius","pointerEvents","zIndex","fontSize","fontFamily","firstNodeId","setFirstNodeId","secondNodeId","setSecondNodeId","onDisconnectSuccess","selectedMapId","onClose","onCreate"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["// src/components/MapManage/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\n\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nimport NodeList from './NodeList';\nimport NodeDisconnect from './NodeDisconnect';\nimport NodeConnectionPopup from './NodeConnectionPopup';\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false);\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isCreatingNode, setIsCreatingNode] = useState(false);\n  const [nodeX, setNodeX] = useState(null);\n  const [nodeY, setNodeY] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false);\n  const canvasRef = useRef(null);\n  const mapImageRef = useRef(null);\n  const [nodes, setNodes] = useState([]);\n  const [isDeletingNode, setIsDeletingNode] = useState(false);\n\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const [isNodeConnectionPopupOpen, setIsNodeConnectionPopupOpen] = useState(false);\n  const [connectionData, setConnectionData] = useState({ node1: null, node2: null, waypoints: [] });\n\n  const [disconnectStep, setDisconnectStep] = useState('idle'); // 'idle' | 'selectingFirstNode' | 'selectingSecondNode'\n  const [disconnectFirstNodeId, setDisconnectFirstNodeId] = useState(null);\n  const [disconnectSecondNodeId, setDisconnectSecondNodeId] = useState(null);\n\n  const [isCreatingNoGoZone, setIsCreatingNoGoZone] = useState(false);\n  const [isDeletingNoGoZone, setIsDeletingNoGoZone] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [noGoZones, setNoGoZones] = useState([]);\n\n  const [isPatchingMap, setIsPatchingMap] = useState(false);\n  const [selectionMode, setSelectionMode] = useState('none'); // 'none' | 'selectingNode1' | 'selectingNode2' | 'selectingWaypoint'\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.33:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n\n      if (response.data.length > 0) {\n        await handleSelectMap(response.data[0]);\n      }\n    } catch (error) {\n      console.error('맵을 가져오는 중 오류 발생:', error);\n      alert('맵을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  const fetchNodes = async (mapId) => {\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data);\n      } else {\n        setNodes([]);\n      }\n    } catch (error) {\n      console.error('노드를 가져오는 중 오류 발생:', error);\n      setNodes([]);\n      alert('노드를 가져오는 데 실패했습니다.');\n    }\n  };\n\n  const fetchNoGoZones = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/no-go-zones/map/${mapId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setNoGoZones(response.data);\n    } catch (error) {\n      console.error('금지구역을 가져오는 중 오류 발생:', error);\n      alert('금지구역을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('맵 이미지를 가져오는 중 오류 발생:', error);\n      alert('맵 이미지를 가져오는 데 실패했습니다.');\n    }\n\n    await fetchNoGoZones(map._id);\n    await fetchNodes(map._id);\n  };\n\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawAll();\n    };\n  };\n\n  const mapToMapCoordinates = (x, y) => {\n    return worldToMap(x, y, imageNaturalWidth, imageNaturalHeight);\n  };\n\n  const drawAll = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(mapImageRef.current, 0, 0, imageNaturalWidth, imageNaturalHeight);\n\n    // Draw No-Go Zones\n    noGoZones.forEach((zone) => {\n      const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n      const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n      const width = bottomRight.x - topLeft.x;\n      const height = bottomRight.y - topLeft.y;\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n      ctx.fillRect(topLeft.x, topLeft.y, width, height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(topLeft.x, topLeft.y, width, height);\n    });\n\n    // Draw Current Rectangle (if any)\n    if (currentRect) {\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n    }\n\n    // Draw Node Connections\n    nodes.forEach((node) => {\n      node.connections.forEach((connection) => {\n        const connectedNode = nodes.find(n => n._id === connection.node);\n        if (connectedNode) {\n          const { x: startX, y: startY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const { x: endX, y: endY } = worldToMap(connectedNode.x, connectedNode.y, imageNaturalWidth, imageNaturalHeight);\n\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(startX, startY);\n\n          if (connection.waypoints && connection.waypoints.length > 0) {\n            connection.waypoints.forEach((wp) => {\n              const { x: wpX, y: wpY } = worldToMap(wp.x, wp.y, imageNaturalWidth, imageNaturalHeight);\n              ctx.lineTo(wpX, wpY);\n            });\n          }\n\n          ctx.lineTo(endX, endY);\n          ctx.stroke();\n        }\n      });\n    });\n\n    // Draw Deletion Indicators for No-Go Zones\n    if (isDeletingNoGoZone) {\n      noGoZones.forEach((zone) => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const size = 20;\n        ctx.fillStyle = 'red';\n        ctx.font = 'bold 16px Inter, Arial, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('X', topLeft.x + 8, topLeft.y + 15);\n      });\n    }\n\n    // Draw Nodes\n    nodes.forEach((node) => {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const size = 10;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size);\n    });\n  };\n\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapImage]);\n\n  useEffect(() => {\n    if (mapImage && selectedMap) {\n      fetchNodes(selectedMap._id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapImage, selectedMap]);\n\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawAll();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, noGoZones, currentRect, isDeletingNoGoZone]);\n\n  useEffect(() => {\n    if (\n      !isDeletingNode &&\n      disconnectStep === 'idle' &&\n      !isCreatingNoGoZone &&\n      !isDeletingNoGoZone &&\n      !dragging &&\n      selectionMode === 'none'\n    ) {\n      document.body.style.cursor = 'default';\n    }\n  }, [isDeletingNode, disconnectStep, isCreatingNoGoZone, isDeletingNoGoZone, dragging, selectionMode]);\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    let foundNode = null;\n\n    for (let node of nodes) {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 5) {\n        foundNode = node;\n        break;\n      }\n    }\n\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({ x: e.clientX, y: e.clientY });\n    } else {\n      setHoveredNode(null);\n    }\n\n    if (isCreatingNoGoZone && dragging && dragStart) {\n      const newRect = {\n        x: Math.min(mouseX, dragStart.x),\n        y: Math.min(mouseY, dragStart.y),\n        width: Math.abs(mouseX - dragStart.x),\n        height: Math.abs(mouseY - dragStart.y),\n      };\n      setCurrentRect(newRect);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n    if (isCreatingNoGoZone && dragging) {\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  const handleMouseDown = (e) => {\n    if (isCreatingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      setDragStart({ x: startX, y: startY });\n      setDragging(true);\n      document.body.style.cursor = 'crosshair';\n    }\n\n    if (isDeletingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n\n      const clickedZone = noGoZones.find(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n        return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n      });\n\n      if (clickedZone) {\n        handleDeleteNoGoZone(clickedZone._id);\n      }\n    }\n  };\n\n  const handleMouseUp = async (e) => {\n    if (isCreatingNoGoZone && dragging && dragStart && currentRect) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n\n      const finalRect = {\n        x: Math.min(endX, dragStart.x),\n        y: Math.min(endY, dragStart.y),\n        width: Math.abs(endX - dragStart.x),\n        height: Math.abs(endY - dragStart.y),\n      };\n\n      const topLeftWorld = mapToWorld(finalRect.x, finalRect.y, imageNaturalWidth, imageNaturalHeight);\n      const bottomRightWorld = mapToWorld(finalRect.x + finalRect.width, finalRect.y + finalRect.height, imageNaturalWidth, imageNaturalHeight);\n\n      const noGoZone = {\n        topLeft: topLeftWorld,\n        bottomRight: bottomRightWorld,\n        mapId: selectedMap._id,\n      };\n\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://172.30.1.33:5557/map/no-go-zones', noGoZone, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        alert('금지 구역이 성공적으로 생성되었습니다.');\n        setNoGoZones([...noGoZones, response.data.noGoZone]);\n      } catch (error) {\n        console.error('금지 구역 생성 중 오류 발생:', error);\n        alert('금지 구역 생성에 실패했습니다.');\n      }\n\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n\n  const handleConnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsNodeConnectionPopupOpen(true);\n  };\n\n  const handleDisconnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setDisconnectStep('selectingFirstNode');\n    setDisconnectFirstNodeId(null);\n    setDisconnectSecondNodeId(null);\n    alert('연결을 해제할 첫 번째 노드를 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n\n  const handleCreateNoGoZone = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNoGoZone(true);\n    setIsDeletingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setCurrentRect(null);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  const handleDeleteNoGoZoneMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNoGoZone(true);\n    setIsCreatingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setSelectionMode('none');\n    alert('삭제할 금지 구역을 클릭하세요.');\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  const handleDeleteNoGoZone = async (zoneId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('이 금지 구역을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/no-go-zones/${zoneId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('금지 구역이 성공적으로 삭제되었습니다.');\n      setNoGoZones(noGoZones.filter(zone => zone._id !== zoneId));\n    } catch (error) {\n      console.error('금지 구역 삭제 중 오류 발생:', error);\n      alert('금지 구역 삭제에 실패했습니다.');\n    } finally {\n      setIsDeletingNoGoZone(false);\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n\n  const handleMapClick = async (e) => {\n    if (!selectedMap) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    const { x, y } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n\n    try {\n      // Handle Disconnect Node Selection\n      if (disconnectStep === 'selectingFirstNode') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n\n        if (clickedNode) {\n          setDisconnectFirstNodeId(clickedNode._id);\n          setDisconnectStep('selectingSecondNode');\n          alert(`첫 번째 노드가 \"${clickedNode.name}\"으로 설정되었습니다. 두 번째 노드를 선택하세요.`);\n          return;\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n          return;\n        }\n      }\n\n      if (disconnectStep === 'selectingSecondNode') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n\n        if (clickedNode) {\n          setDisconnectSecondNodeId(clickedNode._id);\n          setDisconnectStep('idle');\n          setSelectionMode('none');\n          document.body.style.cursor = 'default';\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      // Handle Node Connection Selection\n      if (selectionMode === 'selectingNode1') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n\n        if (clickedNode) {\n          setConnectionData(prev => ({ ...prev, node1: clickedNode }));\n          setSelectionMode('selectingNode2');\n          alert(`노드 1이 \"${clickedNode.name}\"으로 설정되었습니다. 노드 2를 선택하세요.`);\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      if (selectionMode === 'selectingNode2') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // Adjust the radius as needed\n        });\n\n        if (clickedNode) {\n          setConnectionData(prev => ({ ...prev, node2: clickedNode }));\n          setSelectionMode('none');\n          alert(`노드 2가 \"${clickedNode.name}\"으로 설정되었습니다.`);\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      // Handle Waypoint Selection\n      if (selectionMode === 'selectingWaypoint') {\n        const newWaypoint = { x, y };\n        setConnectionData(prev => ({\n          ...prev,\n          waypoints: [...prev.waypoints, newWaypoint]\n        }));\n        setSelectionMode('none');\n        alert(`웨이포인트가 추가되었습니다: X=${x.toFixed(2)}, Y=${y.toFixed(2)}`);\n        return;\n      }\n\n      // Handle Creating Node\n      if (isCreatingNode) {\n        setNodeX(x);\n        setNodeY(y);\n        setIsCreatingNode(false);\n        setIsNodePopupOpen(true);\n        document.body.style.cursor = 'default';\n        return;\n      }\n\n      // Handle Deleting Node\n      if (isDeletingNode) {\n        let nodeToDelete = null;\n        for (let node of nodes) {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          if (distance < 10) { // Adjust the radius as needed\n            nodeToDelete = node;\n            break;\n          }\n        }\n\n        if (nodeToDelete) {\n          const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n          if (confirmDelete) {\n            try {\n              const token = localStorage.getItem('token');\n              await axios.delete(`http://172.30.1.33:5557/map/node/${nodeToDelete._id}`, {\n                headers: { Authorization: `Bearer ${token}` },\n              });\n              alert('노드가 성공적으로 삭제되었습니다.');\n\n              await fetchNodes(selectedMap._id);\n              drawAll();\n\n              setIsDeletingNode(false);\n            } catch (error) {\n              console.error('노드 삭제 중 오류 발생:', error);\n              alert('노드 삭제에 실패했습니다.');\n            }\n          }\n        } else {\n          alert('해당 위치에 노드를 찾을 수 없습니다.');\n        }\n        return;\n      }\n\n      // Ignore clicks when disconnecting\n      if (disconnectStep !== 'idle') {\n        return;\n      }\n\n      // Ignore clicks when not in any selection mode\n      if (selectionMode === 'none') {\n        return;\n      }\n    } catch (error) {\n      console.error('맵 클릭 처리 중 오류 발생:', error);\n      alert('맵 클릭 처리 중 오류가 발생했습니다.');\n    } finally {\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    }\n  };\n\n  const calculateTotalDistance = (node1Id, node2Id, waypoints) => {\n    const node1 = nodes.find(n => n._id === node1Id);\n    const node2 = nodes.find(n => n._id === node2Id);\n    if (!node1 || !node2) return 0;\n\n    let totalDistance = 0;\n\n    const distance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n    if (waypoints.length > 0) {\n      totalDistance += distance(node1.x, node1.y, waypoints[0].x, waypoints[0].y);\n\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        totalDistance += distance(waypoints[i].x, waypoints[i].y, waypoints[i + 1].x, waypoints[i + 1].y);\n      }\n\n      totalDistance += distance(waypoints[waypoints.length - 1].x, waypoints[waypoints.length - 1].y, node2.x, node2.y);\n    } else {\n      totalDistance += distance(node1.x, node1.y, node2.x, node2.y);\n    }\n\n    return totalDistance;\n  };\n\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    if (nodeName.trim().length === 0) {\n      alert('노드 이름을 입력해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id,\n      }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('노드가 성공적으로 생성되었습니다.');\n      setIsNodePopupOpen(false);\n      setNodeName('');\n      setNodeX(null);\n      setNodeY(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 생성 중 오류 발생:', error);\n      alert('노드 생성에 실패했습니다.');\n    }\n  };\n\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('이 맵을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('맵이 성공적으로 삭제되었습니다.');\n      await fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n        setMapImage(null);\n        setNodes([]);\n        setNoGoZones([]);\n      }\n    } catch (error) {\n      console.error('맵 삭제 중 오류 발생:', error);\n      alert('맵 삭제에 실패했습니다.');\n    }\n  };\n\n  const handleFileChange = (e) => {\n    setMapFile(e.target.files[0]);\n  };\n\n  const handleYamlFileChange = (e) => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  const handleUpdateMap = async (e) => {\n    e.preventDefault();\n\n    if (editName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 성공적으로 업데이트되었습니다.');\n      setIsEditPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업데이트 중 오류 발생:', error);\n      alert(`맵 업데이트 중 오류 발생: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n\n    if (uploadName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('맵이 성공적으로 업로드되었습니다.');\n      setIsUploadPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업로드 중 오류 발생:', error);\n      alert('맵 업로드에 실패했습니다.');\n    }\n  };\n\n  const openEditPopup = (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    setIsEditPopupOpen(true);\n  };\n\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNode(true);\n    setIsDeletingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  useEffect(() => {\n    return () => {\n      if (mapImage) {\n        URL.revokeObjectURL(mapImage);\n      }\n    };\n  }, [mapImage]);\n\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    setIsDeletingNoGoZone(false);\n    setIsCreatingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  const handleSendMap = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5559/robot/send_map', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 로봇에게 성공적으로 전송되었습니다.');\n    } catch (error) {\n      console.error('맵을 로봇에게 전송하는 중 오류 발생:', error);\n      alert(`맵을 로봇에게 전송하는 중 오류 발생: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  const handlePatchMap = async () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmPatch = window.confirm('선택한 맵의 모든 노드 간의 최단 경로를 계산하고 저장하시겠습니까?');\n    if (!confirmPatch) return;\n\n    setIsPatchingMap(true);\n\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/shortpaths/map/${selectedMap._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log('기존 ShortPath 데이터가 삭제되었습니다.');\n\n      const response = await axios.post('http://172.30.1.33:5557/map/calculate-paths', {\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        alert('맵 패치가 성공적으로 완료되었습니다.');\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      } else {\n        alert('맵 패치에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('맵 패치 중 오류 발생:', error);\n      alert(`맵 패치 중 오류 발생: ${error.response?.data?.error || error.message}`);\n    } finally {\n      setIsPatchingMap(false);\n    }\n  };\n\n  const handleNodeConnectionCreate = async ({ node1, node2, waypoints }) => {\n    if (!node1 || !node2) {\n      alert('노드 1과 노드 2를 모두 선택해주세요.');\n      return;\n    }\n\n    try {\n      const totalDistance = calculateTotalDistance(node1._id, node2._id, waypoints);\n\n      const token = localStorage.getItem('token');\n      await axios.post(`http://172.30.1.33:5557/map/node/connect`, {\n        node1: node1._id,\n        node2: node2._id,\n        waypoints: waypoints, // 웨이포인트는 좌표값으로 전달\n        distance: totalDistance,\n      }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      alert(`노드가 성공적으로 연결되었습니다. 전체 꺾인 경로의 가중치: ${totalDistance.toFixed(2)}`);\n\n      setIsNodeConnectionPopupOpen(false);\n      setConnectionData({ node1: null, node2: null, waypoints: [] });\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 연결 중 오류 발생:', error);\n      alert('노드 연결에 실패했습니다.');\n    }\n  };\n\n  // Callback functions to start selecting nodes or waypoints\n  const startSelectingNode1 = () => {\n    setSelectionMode('selectingNode1');\n    alert('노드 1을 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n\n  const startSelectingNode2 = () => {\n    setSelectionMode('selectingNode2');\n    alert('노드 2를 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n\n  const startSelectingWaypoint = () => {\n    setSelectionMode('selectingWaypoint');\n    alert('웨이포인트를 선택하세요.');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // Disconnect Success Handler\n  const handleDisconnectSuccess = (isDeleted) => {\n    if (isDeleted) {\n      alert('노드 간의 연결이 성공적으로 해제되었습니다.');\n      fetchNodes(selectedMap._id);\n      drawAll();\n    } else {\n      alert('노드 간의 연결 해제에 실패했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"map-management-page\">\n      <header className=\"map-management-header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      <div className=\"toolbar\">\n        <button onClick={handleCreateNodeMode} className=\"create-node-button\">\n          <FontAwesomeIcon icon={faPlus} /> 노드 생성\n        </button>\n        <button onClick={handleDeleteNodeMode} className=\"delete-node-button\">\n          <FontAwesomeIcon icon={faEdit} /> 노드 삭제\n        </button>\n        <button onClick={handleConnectNodeMode} className=\"connect-node-button\">\n          <FontAwesomeIcon icon={faLink} /> 노드 연결\n        </button>\n        <button onClick={handleDisconnectNodeMode} className=\"disconnect-node-button\">\n          <FontAwesomeIcon icon={faUnlink} /> 연결 해제\n        </button>\n        <button\n          onClick={handleCreateNoGoZone}\n          className=\"create-nogozone-button\"\n        >\n          금지 구역 생성\n        </button>\n        <button\n          onClick={handleDeleteNoGoZoneMode}\n          className=\"delete-nogozone-button\"\n        >\n          금지 구역 해제\n        </button>\n      </div>\n\n      <div className=\"map-management-content\">\n        <div className=\"map-list-container\">\n          <h2 className=\"map-list-header\">\n            맵 리스트\n            <button\n              onClick={() => setIsUploadPopupOpen(true)}\n              className=\"add-map-button\"\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </h2>\n          <ul className=\"map-list\">\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={`map-list-item ${selectedMap?._id === map._id ? 'selected-map' : ''}`}\n              >\n                <span\n                  onClick={() => handleSelectMap(map)}\n                  className=\"map-list-item-name\"\n                >\n                  {map.name}\n                </span>\n                <button\n                  onClick={() => openEditPopup(map)}\n                  className=\"edit-map-button\"\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button\n                  onClick={() => handleDeleteMap(map._id)}\n                  className=\"delete-map-button\"\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {selectedMap && (\n            <div className=\"map-description\">\n              <h3>맵 설명</h3>\n              <p>{selectedMap.description}</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"map-image-and-node-list\">\n          <div\n            className=\"map-image-container\"\n            style={{ position: 'relative' }}\n          >\n            {mapImage ? (\n              <canvas\n                ref={canvasRef}\n                className=\"map-canvas\"\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleMapClick}\n                style={{\n                  cursor:\n                    isCreatingNode\n                      ? 'crosshair'\n                      : isCreatingNoGoZone\n                      ? 'crosshair'\n                      : isDeletingNoGoZone\n                      ? 'not-allowed'\n                      : selectionMode !== 'none'\n                      ? 'crosshair'\n                      : 'default'\n                }}\n              />\n            ) : (\n              <p>맵을 선택하여 이미지를 확인하세요.</p>\n            )}\n\n            {selectedMap && (\n              <div className=\"floating-buttons\">\n                <button\n                  className=\"send-to-robots-button\"\n                  onClick={handleSendMap}\n                >\n                  로봇에게 전송\n                </button>\n                <button\n                  className=\"map-patch-button\"\n                  onClick={handlePatchMap}\n                  disabled={isPatchingMap}\n                >\n                  {isPatchingMap ? '맵 패치 중...' : '맵 패치'}\n                </button>\n              </div>\n            )}\n          </div>\n\n          <NodeList mapId={selectedMap?._id} />\n        </div>\n      </div>\n\n      {/* Node Creation Popup */}\n      {isNodePopupOpen && (\n        <div className=\"popup-container\">\n          <div className=\"node-popup\">\n            <h3>노드 생성</h3>\n            <p>X: {nodeX.toFixed(2)}, Y: {nodeY.toFixed(2)}</p>\n            <input\n              type=\"text\"\n              value={nodeName}\n              onChange={(e) => setNodeName(e.target.value)}\n              placeholder=\"노드 이름 입력\"\n              className=\"popup-input\"\n            />\n            <div className=\"popup-button-container\">\n              <button onClick={handleSubmitNode} className=\"popup-submit-button\">\n                생성\n              </button>\n              <button\n                onClick={() => setIsNodePopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                취소\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Upload Map Popup */}\n      {isUploadPopupOpen && (\n        <div className=\"popup-container\">\n          <div className=\"upload-popup\">\n            <h3>맵 업로드</h3>\n            <form onSubmit={handleUploadMap}>\n              <input\n                type=\"text\"\n                value={uploadName}\n                onChange={(e) => setUploadName(e.target.value)}\n                placeholder=\"맵 이름\"\n                required\n                className=\"popup-input\"\n              />\n              <textarea\n                value={uploadDescription}\n                onChange={(e) => setUploadDescription(e.target.value)}\n                placeholder=\"맵 설명\"\n                required\n                className=\"popup-textarea\"\n              />\n              <label>맵 파일 (.pgm, .png, .jpg)</label>\n              <input\n                type=\"file\"\n                accept=\".pgm,.png,.jpg\"\n                onChange={handleFileChange}\n                required\n                className=\"popup-file-input\"\n              />\n              <label>YAML 파일 (.yaml)</label>\n              <input\n                type=\"file\"\n                accept=\".yaml\"\n                onChange={handleYamlFileChange}\n                required\n                className=\"popup-file-input\"\n              />\n              <div className=\"popup-button-container\">\n                <button type=\"submit\" className=\"popup-submit-button\">\n                  업로드\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setIsUploadPopupOpen(false)}\n                  className=\"popup-cancel-button\"\n                >\n                  취소\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Map Popup */}\n      {isEditPopupOpen && (\n        <div className=\"popup-container\">\n          <div className=\"edit-popup\">\n            <h3>맵 수정</h3>\n            <form onSubmit={handleUpdateMap}>\n              <input\n                type=\"text\"\n                value={editName}\n                onChange={(e) => setEditName(e.target.value)}\n                placeholder=\"맵 이름\"\n                required\n                className=\"popup-input\"\n              />\n              <textarea\n                value={editDescription}\n                onChange={(e) => setEditDescription(e.target.value)}\n                placeholder=\"맵 설명\"\n                required\n                className=\"popup-textarea\"\n              />\n              <label style={{ marginTop: '10px', color: '#333' }}>\n                <input\n                  type=\"checkbox\"\n                  checked={isMonitored}\n                  onChange={(e) => setIsMonitored(e.target.checked)}\n                  style={{ marginRight: '10px' }}\n                />\n                모니터링 맵으로 설정\n              </label>\n              <div className=\"popup-button-container\">\n                <button type=\"submit\" className=\"popup-submit-button\">\n                  업데이트\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setIsEditPopupOpen(false)}\n                  className=\"popup-cancel-button\"\n                >\n                  취소\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Tooltip for Hovered Node */}\n      {hoveredNode && (\n        <div\n          className=\"tooltip\"\n          style={{\n            position: 'fixed',\n            top: `${tooltipPosition.y + 10}px`,\n            left: `${tooltipPosition.x + 10}px`,\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            pointerEvents: 'none',\n            zIndex: 1000,\n            fontSize: '12px',\n            fontFamily: 'Inter, Arial, sans-serif',\n          }}\n        >\n          {hoveredNode.name}\n        </div>\n      )}\n\n      {/* Node Disconnect Component */}\n      {disconnectStep !== 'idle' && (\n        <NodeDisconnect\n          firstNodeId={disconnectFirstNodeId}\n          setFirstNodeId={setDisconnectFirstNodeId}\n          secondNodeId={disconnectSecondNodeId}\n          setSecondNodeId={setDisconnectSecondNodeId}\n          onDisconnectSuccess={handleDisconnectSuccess}\n          nodes={nodes}\n          selectedMapId={selectedMap?._id}\n        />\n      )}\n\n      {/* Loading Overlay */}\n      {isPatchingMap && (\n        <div className=\"loading-overlay\">\n          <div className=\"spinner\"></div>\n        </div>\n      )}\n\n      {/* Node Connection Popup */}\n      {isNodeConnectionPopupOpen && (\n        <NodeConnectionPopup\n          connectionData={connectionData}\n          onClose={() => setIsNodeConnectionPopupOpen(false)}\n          onCreate={handleNodeConnectionCreate}\n          setSelectionMode={setSelectionMode}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Mapmanage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}