{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js\";\n// WebcamStream.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport SimplePeer from 'simple-peer';\nimport io from 'socket.io-client';\nconst WebcamStream = ({\n  selectedRobot\n}) => {\n  const videoRef = useRef(null);\n  const [peer, setPeer] = useState(null);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    if (selectedRobot) {\n      socketRef.current = io('http://172.30.1.40:7001'); // WebRTC 서버 주소\n\n      const peer = new SimplePeer({\n        initiator: true,\n        trickle: false\n      });\n      peer.on('signal', data => {\n        if (socketRef.current) {\n          socketRef.current.emit('signal', data);\n        }\n      });\n      peer.on('stream', stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n      peer.on('error', err => {\n        console.error('Peer connection error:', err);\n      });\n      socketRef.current.on('signal', signal => {\n        if (peer.destroyed) {\n          console.warn('Peer is destroyed, cannot signal');\n          return;\n        }\n        peer.signal(signal);\n      });\n      socketRef.current.on('candidate', candidate => {\n        if (peer.destroyed) {\n          console.warn('Peer is destroyed, cannot add candidate');\n          return;\n        }\n        peer.signal(candidate);\n      });\n      socketRef.current.emit('join');\n      setPeer(peer);\n      return () => {\n        peer.destroy();\n        socketRef.current.disconnect();\n      };\n    }\n  }, [selectedRobot]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\nexport default WebcamStream;","map":{"version":3,"names":["React","useEffect","useRef","useState","SimplePeer","io","WebcamStream","selectedRobot","videoRef","peer","setPeer","socketRef","current","initiator","trickle","on","data","emit","stream","srcObject","err","console","error","signal","destroyed","warn","candidate","destroy","disconnect","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js"],"sourcesContent":["// WebcamStream.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport SimplePeer from 'simple-peer';\nimport io from 'socket.io-client';\n\nconst WebcamStream = ({ selectedRobot }) => {\n    const videoRef = useRef(null);\n    const [peer, setPeer] = useState(null);\n    const socketRef = useRef(null);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            socketRef.current = io('http://172.30.1.40:7001'); // WebRTC 서버 주소\n\n            const peer = new SimplePeer({ initiator: true, trickle: false });\n\n            peer.on('signal', data => {\n                if (socketRef.current) {\n                    socketRef.current.emit('signal', data);\n                }\n            });\n\n            peer.on('stream', stream => {\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            });\n\n            peer.on('error', (err) => {\n                console.error('Peer connection error:', err);\n            });\n\n            socketRef.current.on('signal', signal => {\n                if (peer.destroyed) {\n                    console.warn('Peer is destroyed, cannot signal');\n                    return;\n                }\n                peer.signal(signal);\n            });\n\n            socketRef.current.on('candidate', candidate => {\n                if (peer.destroyed) {\n                    console.warn('Peer is destroyed, cannot add candidate');\n                    return;\n                }\n                peer.signal(candidate);\n            });\n\n            socketRef.current.emit('join');\n\n            setPeer(peer);\n\n            return () => {\n                peer.destroy();\n                socketRef.current.disconnect();\n            };\n        }\n    }, [selectedRobot]);\n\n    return (\n        <div>\n            <video ref={videoRef} autoPlay playsInline />\n        </div>\n    );\n};\n\nexport default WebcamStream;\n\n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EACxC,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMQ,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,IAAIM,aAAa,EAAE;MACfI,SAAS,CAACC,OAAO,GAAGP,EAAE,CAAC,yBAAyB,CAAC,CAAC,CAAC;;MAEnD,MAAMI,IAAI,GAAG,IAAIL,UAAU,CAAC;QAAES,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;MAEhEL,IAAI,CAACM,EAAE,CAAC,QAAQ,EAAEC,IAAI,IAAI;QACtB,IAAIL,SAAS,CAACC,OAAO,EAAE;UACnBD,SAAS,CAACC,OAAO,CAACK,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;QAC1C;MACJ,CAAC,CAAC;MAEFP,IAAI,CAACM,EAAE,CAAC,QAAQ,EAAEG,MAAM,IAAI;QACxB,IAAIV,QAAQ,CAACI,OAAO,EAAE;UAClBJ,QAAQ,CAACI,OAAO,CAACO,SAAS,GAAGD,MAAM;QACvC;MACJ,CAAC,CAAC;MAEFT,IAAI,CAACM,EAAE,CAAC,OAAO,EAAGK,GAAG,IAAK;QACtBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAChD,CAAC,CAAC;MAEFT,SAAS,CAACC,OAAO,CAACG,EAAE,CAAC,QAAQ,EAAEQ,MAAM,IAAI;QACrC,IAAId,IAAI,CAACe,SAAS,EAAE;UAChBH,OAAO,CAACI,IAAI,CAAC,kCAAkC,CAAC;UAChD;QACJ;QACAhB,IAAI,CAACc,MAAM,CAACA,MAAM,CAAC;MACvB,CAAC,CAAC;MAEFZ,SAAS,CAACC,OAAO,CAACG,EAAE,CAAC,WAAW,EAAEW,SAAS,IAAI;QAC3C,IAAIjB,IAAI,CAACe,SAAS,EAAE;UAChBH,OAAO,CAACI,IAAI,CAAC,yCAAyC,CAAC;UACvD;QACJ;QACAhB,IAAI,CAACc,MAAM,CAACG,SAAS,CAAC;MAC1B,CAAC,CAAC;MAEFf,SAAS,CAACC,OAAO,CAACK,IAAI,CAAC,MAAM,CAAC;MAE9BP,OAAO,CAACD,IAAI,CAAC;MAEb,OAAO,MAAM;QACTA,IAAI,CAACkB,OAAO,CAAC,CAAC;QACdhB,SAAS,CAACC,OAAO,CAACgB,UAAU,CAAC,CAAC;MAClC,CAAC;IACL;EACJ,CAAC,EAAE,CAACrB,aAAa,CAAC,CAAC;EAEnB,oBACIP,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACInC,KAAA,CAAA6B,aAAA;IAAOO,GAAG,EAAE5B,QAAS;IAAC6B,QAAQ;IAACC,WAAW;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3C,CAAC;AAEd,CAAC;AAED,eAAe7B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}