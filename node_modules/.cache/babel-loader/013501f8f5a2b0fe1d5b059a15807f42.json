{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\n// src/components/MapManage/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nimport NodeList from './NodeList';\nimport NodeDisconnect from './NodeDisconnect';\nimport NodeConnectionPopup from './NodeConnectionPopup';\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false);\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isCreatingNode, setIsCreatingNode] = useState(false);\n  const [nodeX, setNodeX] = useState(null);\n  const [nodeY, setNodeY] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false);\n  const canvasRef = useRef(null);\n  const mapImageRef = useRef(null);\n  const [nodes, setNodes] = useState([]);\n  const [isDeletingNode, setIsDeletingNode] = useState(false);\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isNodeConnectionPopupOpen, setIsNodeConnectionPopupOpen] = useState(false);\n  const [connectionData, setConnectionData] = useState({\n    node1: null,\n    node2: null,\n    waypoints: []\n  });\n  const [disconnectStep, setDisconnectStep] = useState('idle');\n  const [disconnectFirstNodeId, setDisconnectFirstNodeId] = useState(null);\n  const [disconnectSecondNodeId, setDisconnectSecondNodeId] = useState(null);\n  const [isCreatingNoGoZone, setIsCreatingNoGoZone] = useState(false);\n  const [isDeletingNoGoZone, setIsDeletingNoGoZone] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [noGoZones, setNoGoZones] = useState([]);\n  const [isPatchingMap, setIsPatchingMap] = useState(false);\n  const [selectionMode, setSelectionMode] = useState('none'); // 'none' | 'selectingNode1' | 'selectingNode2' | 'selectingWaypoint'\n\n  // 커서를 기본 상태로 복구하는 함수\n  const resetCursor = () => {\n    document.body.style.cursor = 'default';\n  };\n\n  // 맵 목록을 서버에서 가져오는 함수\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.33:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n      if (response.data.length > 0) {\n        await handleSelectMap(response.data[0]);\n      }\n    } catch (error) {\n      console.error('맵을 가져오는 중 오류 발생:', error);\n      alert('맵을 가져오는 데 실패했습니다.');\n    }\n  };\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  // 노드 목록을 서버에서 가져오는 함수\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data);\n      } else {\n        setNodes([]);\n      }\n    } catch (error) {\n      console.error('노드를 가져오는 중 오류 발생:', error);\n      setNodes([]);\n      alert('노드를 가져오는 데 실패했습니다.');\n    }\n  };\n\n  // 금지구역 목록을 서버에서 가져오는 함수\n  const fetchNoGoZones = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/no-go-zones/map/${mapId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNoGoZones(response.data);\n    } catch (error) {\n      console.error('금지구역을 가져오는 중 오류 발생:', error);\n      alert('금지구역을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  // 맵을 선택했을 때 호출되는 함수\n  const handleSelectMap = async map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('맵 이미지를 가져오는 중 오류 발생:', error);\n      alert('맵 이미지를 가져오는 데 실패했습니다.');\n    }\n    await fetchNoGoZones(map._id);\n  };\n\n  // 이미지 로드 시 호출되는 함수 (지도 이미지를 캔버스에 그리기)\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawAll();\n    };\n  };\n\n  // 맵 좌표계를 캔버스 좌표계로 변환하는 함수\n  const mapToMapCoordinates = (x, y) => {\n    return worldToMap(x, y, imageNaturalWidth, imageNaturalHeight);\n  };\n\n  // 캔버스에 모든 요소를 그리는 함수 (지도, 노드, 연결선, 금지구역)\n  const drawAll = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(mapImageRef.current, 0, 0, imageNaturalWidth, imageNaturalHeight);\n\n    // 금지구역 그리기\n    noGoZones.forEach(zone => {\n      const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n      const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n      const width = bottomRight.x - topLeft.x;\n      const height = bottomRight.y - topLeft.y;\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n      ctx.fillRect(topLeft.x, topLeft.y, width, height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(topLeft.x, topLeft.y, width, height);\n    });\n\n    // 드래그 중인 사각형 그리기\n    if (currentRect) {\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n    }\n\n    // 연결선 그리기\n    nodes.forEach(node => {\n      node.connections.forEach(connection => {\n        const connectedNode = nodes.find(n => n._id === connection.node);\n        if (connectedNode) {\n          const {\n            x: startX,\n            y: startY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const {\n            x: endX,\n            y: endY\n          } = worldToMap(connectedNode.x, connectedNode.y, imageNaturalWidth, imageNaturalHeight);\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(startX, startY);\n          if (connection.waypoints && connection.waypoints.length > 0) {\n            connection.waypoints.forEach(wp => {\n              const {\n                x: wpX,\n                y: wpY\n              } = worldToMap(wp.x, wp.y, imageNaturalWidth, imageNaturalHeight);\n              ctx.lineTo(wpX, wpY);\n            });\n          }\n          ctx.lineTo(endX, endY);\n          ctx.stroke();\n        }\n      });\n    });\n\n    // 금지구역 삭제 모드일 때, 금지구역 위에 삭제 아이콘 표시\n    if (isDeletingNoGoZone) {\n      noGoZones.forEach(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const size = 20;\n        ctx.fillStyle = 'red';\n        ctx.font = 'bold 16px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('X', topLeft.x + 8, topLeft.y + 15);\n      });\n    }\n\n    // 노드 그리기\n    nodes.forEach(node => {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const size = 10;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size);\n    });\n  };\n\n  // 이미지 로드 후 캔버스에 지도 그리기\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n  }, [mapImage]);\n\n  // 맵 이미지와 selectedMap이 모두 설정된 후 노드 및 금지구역 패치\n  useEffect(() => {\n    if (mapImage && selectedMap) {\n      fetchNodes(selectedMap._id);\n      fetchNoGoZones(selectedMap._id);\n    }\n  }, [mapImage, selectedMap]);\n\n  // 노드 또는 금지구역 변경 시마다 캔버스에 다시 그리기\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawAll();\n    }\n  }, [nodes, noGoZones, currentRect, isDeletingNoGoZone]);\n\n  // 노드 삭제 시 커서 복구\n  useEffect(() => {\n    if (!isDeletingNode && disconnectStep === 'idle' && !isCreatingNoGoZone && !isDeletingNoGoZone && !dragging && selectionMode === 'none') {\n      resetCursor();\n    }\n  }, [isDeletingNode, disconnectStep, isCreatingNoGoZone, isDeletingNoGoZone, dragging, selectionMode]);\n\n  // 마우스가 캔버스 위를 움직일 때 노드 호버 상태 업데이트\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    let foundNode = null;\n    for (let node of nodes) {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 10) {\n        // 반경을 10px로 설정\n        foundNode = node;\n        break;\n      }\n    }\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else {\n      setHoveredNode(null);\n    }\n\n    // 금지구역 생성 모드일 때 드래그 중인 사각형 업데이트\n    if (isCreatingNoGoZone && dragging && dragStart) {\n      const newRect = {\n        x: Math.min(mouseX, dragStart.x),\n        y: Math.min(mouseY, dragStart.y),\n        width: Math.abs(mouseX - dragStart.x),\n        height: Math.abs(mouseY - dragStart.y)\n      };\n      setCurrentRect(newRect);\n    }\n  };\n\n  // 마우스가 캔버스를 벗어났을 때 호버 상태 초기화 및 드래그 상태 초기화\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n    // 드래그 중이었는데 캔버스를 벗어났을 경우 드래그 취소\n    if (isCreatingNoGoZone && dragging) {\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      resetCursor();\n    }\n  };\n\n  // 드래그 시작 이벤트 핸들러\n  const handleMouseDown = e => {\n    if (isCreatingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      setDragStart({\n        x: startX,\n        y: startY\n      });\n      setDragging(true);\n      document.body.style.cursor = 'crosshair';\n    }\n    if (isDeletingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n      const clickedZone = noGoZones.find(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n        return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n      });\n      if (clickedZone) {\n        handleDeleteNoGoZone(clickedZone._id);\n      }\n    }\n  };\n\n  // 드래그 종료 이벤트 핸들러\n  const handleMouseUp = async e => {\n    if (isCreatingNoGoZone && dragging && dragStart && currentRect) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n      const finalRect = {\n        x: Math.min(endX, dragStart.x),\n        y: Math.min(endY, dragStart.y),\n        width: Math.abs(endX - dragStart.x),\n        height: Math.abs(endY - dragStart.y)\n      };\n      const topLeftWorld = mapToWorld(finalRect.x, finalRect.y, imageNaturalWidth, imageNaturalHeight);\n      const bottomRightWorld = mapToWorld(finalRect.x + finalRect.width, finalRect.y + finalRect.height, imageNaturalWidth, imageNaturalHeight);\n      const noGoZone = {\n        topLeft: topLeftWorld,\n        bottomRight: bottomRightWorld,\n        mapId: selectedMap._id\n      };\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://172.30.1.33:5557/map/no-go-zones', noGoZone, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('금지 구역이 성공적으로 생성되었습니다.');\n        setNoGoZones([...noGoZones, response.data.noGoZone]);\n      } catch (error) {\n        console.error('금지 구역 생성 중 오류 발생:', error);\n        alert('금지 구역 생성에 실패했습니다.');\n      }\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      resetCursor();\n      drawAll();\n    }\n  };\n\n  // 연결 모드 활성화 함수\n  const handleConnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsNodeConnectionPopupOpen(true);\n  };\n\n  // 연결 해제 모드 활성화 함수\n  const handleDisconnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setDisconnectStep('selectingFirstNode');\n    setDisconnectFirstNodeId(null);\n    setDisconnectSecondNodeId(null);\n    alert('연결을 해제할 첫 번째 노드를 선택하세요.');\n    setSelectionMode('selectingNode1');\n    document.body.style.cursor = 'pointer';\n  };\n\n  // 금지구역 생성 모드 활성화 함수\n  const handleCreateNoGoZone = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNoGoZone(true);\n    setIsDeletingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setCurrentRect(null);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // 금지구역 삭제 모드 활성화 함수\n  const handleDeleteNoGoZoneMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNoGoZone(true);\n    setIsCreatingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setSelectionMode('none');\n    alert('삭제할 금지 구역을 클릭하세요.');\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  // 금지구역을 삭제하는 함수\n  const handleDeleteNoGoZone = async zoneId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 금지 구역을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/no-go-zones/${zoneId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('금지 구역이 성공적으로 삭제되었습니다.');\n      setNoGoZones(noGoZones.filter(zone => zone._id !== zoneId));\n    } catch (error) {\n      console.error('금지 구역 삭제 중 오류 발생:', error);\n      alert('금지 구역 삭제에 실패했습니다.');\n    } finally {\n      setIsDeletingNoGoZone(false);\n      resetCursor();\n      drawAll();\n    }\n  };\n\n  // 맵 클릭 시 다양한 모드 처리\n  const handleMapClick = async e => {\n    if (!selectedMap) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n    const {\n      x,\n      y\n    } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n    try {\n      if (disconnectStep === 'selectingFirstNode') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // 반경을 10px로 설정\n        });\n        if (clickedNode) {\n          setDisconnectFirstNodeId(clickedNode._id);\n          setDisconnectStep('selectingSecondNode');\n          alert(`첫 번째 노드 \"${clickedNode.name}\"가 선택되었습니다. 연결을 해제할 두 번째 노드를 선택하세요.`);\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n      if (disconnectStep === 'selectingSecondNode') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // 반경을 10px로 설정\n        });\n        if (clickedNode) {\n          if (clickedNode._id === disconnectFirstNodeId) {\n            alert('같은 노드를 다시 선택할 수 없습니다. 다른 노드를 선택해주세요.');\n            return;\n          }\n          setDisconnectSecondNodeId(clickedNode._id);\n          setDisconnectStep('idle'); // 연결 해제 단계 종료\n          resetCursor();\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n      if (selectionMode === 'selectingNode1') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10;\n        });\n        if (clickedNode) {\n          setConnectionData(prev => ({\n            ...prev,\n            node1: clickedNode\n          }));\n          setSelectionMode('selectingNode2');\n          alert(`노드 1 \"${clickedNode.name}\"이 선택되었습니다. 노드 2를 선택하세요.`);\n          document.body.style.cursor = 'pointer';\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n      if (selectionMode === 'selectingNode2') {\n        const clickedNode = nodes.find(node => {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10;\n        });\n        if (clickedNode) {\n          if (clickedNode._id === connectionData.node1._id) {\n            alert('같은 노드를 선택했습니다. 다른 노드를 선택해주세요.');\n            return;\n          }\n          setConnectionData(prev => ({\n            ...prev,\n            node2: clickedNode\n          }));\n          setSelectionMode('selectingWaypoint');\n          alert(`노드 2 \"${clickedNode.name}\"이 선택되었습니다. 웨이포인트를 추가하세요.`);\n          document.body.style.cursor = 'crosshair';\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n      if (selectionMode === 'selectingWaypoint') {\n        const newWaypoint = {\n          x,\n          y\n        };\n        setConnectionData(prev => ({\n          ...prev,\n          waypoints: [...prev.waypoints, newWaypoint]\n        }));\n        alert(`웨이포인트가 추가되었습니다: X=${x.toFixed(2)}, Y=${y.toFixed(2)}`);\n        // 선택 모드를 유지하여 추가적인 웨이포인트를 추가할 수 있도록 함\n      }\n      if (isDeletingNoGoZone) {\n        const clickedZone = noGoZones.find(zone => {\n          const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n          const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n          return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n        });\n        if (clickedZone) {\n          handleDeleteNoGoZone(clickedZone._id);\n        } else {\n          alert('금지 구역을 클릭해주세요.');\n        }\n        return;\n      }\n      if (isNodeConnectionPopupOpen) {\n        // NodeConnectionPopup이 열려 있는 동안 맵 클릭을 처리하지 않음\n        return;\n      }\n      if (isCreatingNode) {\n        setNodeX(x);\n        setNodeY(y);\n        setIsCreatingNode(false);\n        setIsNodePopupOpen(true);\n        resetCursor();\n      } else if (isDeletingNode) {\n        let nodeToDelete = null;\n        for (let node of nodes) {\n          const {\n            x: nodeX,\n            y: nodeY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          if (distance < 10) {\n            // 반경을 10px로 설정\n            nodeToDelete = node;\n            break;\n          }\n        }\n        if (nodeToDelete) {\n          const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n          if (confirmDelete) {\n            try {\n              const token = localStorage.getItem('token');\n              await axios.delete(`http://172.30.1.33:5557/map/node/${nodeToDelete._id}`, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              alert('노드가 성공적으로 삭제되었습니다.');\n              await fetchNodes(selectedMap._id);\n              drawAll();\n              setIsDeletingNode(false);\n            } catch (error) {\n              console.error('노드 삭제 중 오류 발생:', error);\n              alert('노드 삭제에 실패했습니다.');\n            }\n          }\n        } else {\n          alert('해당 위치에 노드를 찾을 수 없습니다.');\n        }\n      }\n    } catch (error) {\n      console.error('맵 클릭 처리 중 오류 발생:', error);\n      alert('맵 클릭 처리 중 오류가 발생했습니다.');\n    } finally {\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    }\n  };\n\n  // 노드 간 총 꺾인 경로 거리 계산 함수\n  const calculateTotalDistance = (node1Id, node2Id, waypoints) => {\n    const node1 = nodes.find(n => n._id === node1Id);\n    const node2 = nodes.find(n => n._id === node2Id);\n    if (!node1 || !node2) return 0;\n    let totalDistance = 0;\n\n    // 거리 계산 함수 (직선 거리)\n    const distance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    if (waypoints.length > 0) {\n      totalDistance += distance(node1.x, node1.y, waypoints[0].x, waypoints[0].y);\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        totalDistance += distance(waypoints[i].x, waypoints[i].y, waypoints[i + 1].x, waypoints[i + 1].y);\n      }\n      totalDistance += distance(waypoints[waypoints.length - 1].x, waypoints[waypoints.length - 1].y, node2.x, node2.y);\n    } else {\n      totalDistance += distance(node1.x, node1.y, node2.x, node2.y);\n    }\n    return totalDistance;\n  };\n\n  // 노드 생성을 제출하는 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    if (nodeName.trim().length === 0) {\n      alert('노드 이름을 입력해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('노드가 성공적으로 생성되었습니다.');\n      setIsNodePopupOpen(false);\n      setNodeName('');\n      setNodeX(null);\n      setNodeY(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 생성 중 오류 발생:', error);\n      alert('노드 생성에 실패했습니다.');\n    }\n  };\n\n  // 맵 삭제하는 함수\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 맵을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('맵이 성공적으로 삭제되었습니다.');\n      await fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n        setMapImage(null);\n        setNodes([]);\n        setNoGoZones([]);\n      }\n    } catch (error) {\n      console.error('맵 삭제 중 오류 발생:', error);\n      alert('맵 삭제에 실패했습니다.');\n    }\n  };\n\n  // 맵 파일 변경 시 호출되는 함수\n  const handleFileChange = e => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 시 호출되는 함수\n  const handleYamlFileChange = e => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 맵 업데이트를 처리하는 함수\n  const handleUpdateMap = async e => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 성공적으로 업데이트되었습니다.');\n      setIsEditPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('맵 업데이트 중 오류 발생:', error);\n      alert(`맵 업데이트 중 오류 발생: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n\n  // 맵 업로드를 처리하는 함수\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('맵이 성공적으로 업로드되었습니다.');\n      setIsUploadPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업로드 중 오류 발생:', error);\n      alert('맵 업로드에 실패했습니다.');\n    }\n  };\n\n  // 맵 수정 팝업을 여는 함수\n  const openEditPopup = map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    setIsEditPopupOpen(true);\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNode(true);\n    setIsDeletingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // URL 객체 해제를 위한 useEffect\n  useEffect(() => {\n    return () => {\n      if (mapImage) {\n        URL.revokeObjectURL(mapImage);\n      }\n    };\n  }, [mapImage]);\n\n  // 노드 삭제 모드를 활성화하는 함수\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    setIsDeletingNoGoZone(false);\n    setIsCreatingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  // Send to Robots 버튼과 관련된 함수\n  const handleSendMap = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5559/robot/send_map', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 로봇에게 성공적으로 전송되었습니다.');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('맵을 로봇에게 전송하는 중 오류 발생:', error);\n      alert(`맵을 로봇에게 전송하는 중 오류 발생: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    }\n  };\n\n  // 맵 패치를 처리하는 함수 (기존 경로 삭제 후 재계산)\n  const handlePatchMap = async () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmPatch = window.confirm('선택한 맵의 모든 노드 간의 최단 경로를 계산하고 저장하시겠습니까?');\n    if (!confirmPatch) return;\n    setIsPatchingMap(true);\n    try {\n      // Step 1: 기존 경로 데이터 삭제\n      await axios.delete(`http://172.30.1.33:5557/map/shortpaths/map/${selectedMap._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('기존 ShortPath 데이터가 삭제되었습니다.');\n\n      // Step 2: 새로운 경로 계산 및 저장\n      const response = await axios.post('http://172.30.1.33:5557/map/calculate-paths', {\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('맵 패치가 성공적으로 완료되었습니다.');\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      } else {\n        alert('맵 패치에 실패했습니다.');\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('맵 패치 중 오류 발생:', error);\n      alert(`맵 패치 중 오류 발생: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message}`);\n    } finally {\n      setIsPatchingMap(false);\n    }\n  };\n\n  // 노드 연결을 생성하는 함수\n  const handleNodeConnectionCreate = async ({\n    node1,\n    node2,\n    waypoints\n  }) => {\n    if (!node1 || !node2) {\n      alert('노드 1과 노드 2를 모두 선택해주세요.');\n      return;\n    }\n    try {\n      const totalDistance = calculateTotalDistance(node1._id, node2._id, waypoints);\n      const token = localStorage.getItem('token');\n      await axios.post(`http://172.30.1.33:5557/map/node/connect`, {\n        node1: node1._id,\n        node2: node2._id,\n        waypoints: waypoints,\n        // 웨이포인트는 좌표값으로 전달\n        distance: totalDistance\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(`노드가 성공적으로 연결되었습니다. 전체 꺾인 경로의 가중치: ${totalDistance.toFixed(2)}`);\n      setIsNodeConnectionPopupOpen(false);\n      setConnectionData({\n        node1: null,\n        node2: null,\n        waypoints: []\n      });\n      await fetchNodes(selectedMap._id);\n      drawAll();\n\n      // 상태 초기화 및 커서 복구\n      setSelectionMode('none');\n      resetCursor();\n    } catch (error) {\n      console.error('노드 연결 중 오류 발생:', error);\n      alert('노드 연결에 실패했습니다.');\n      // 오류 발생 시에도 상태를 초기화하고 커서를 복구\n      setSelectionMode('none');\n      resetCursor();\n    }\n  };\n\n  // 노드 연결 해제 성공 시 처리하는 함수\n  const handleDisconnectSuccess = async isDeleted => {\n    if (isDeleted) {\n      alert('노드 간의 연결이 성공적으로 해제되었습니다.');\n      setDisconnectFirstNodeId(null);\n      setDisconnectSecondNodeId(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } else {\n      alert('노드 간의 연결 해제에 실패했습니다.');\n    }\n    // 상태 초기화 및 커서 복구\n    setSelectionMode('none');\n    resetCursor();\n  };\n\n  // NodeConnectionPopup에서 노드 선택 시작 함수\n  const startSelectingNode1 = () => {\n    setSelectionMode('selectingNode1');\n    alert('노드 1을 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n  const startSelectingNode2 = () => {\n    setSelectionMode('selectingNode2');\n    alert('노드 2를 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n  const startSelectingWaypoint = () => {\n    setSelectionMode('selectingWaypoint');\n    alert('웨이포인트를 선택하세요.');\n    document.body.style.cursor = 'crosshair';\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNodeMode,\n    className: \"create-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDeleteNodeMode,\n    className: \"delete-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC0AD\\uC81C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConnectNodeMode,\n    className: \"connect-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC5F0\\uACB0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDisconnectNodeMode,\n    className: \"disconnect-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 11\n    }\n  }), \" \\uC5F0\\uACB0 \\uD574\\uC81C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNoGoZone,\n    className: \"create-nogozone-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 9\n    }\n  }, \"\\uAE08\\uC9C0 \\uAD6C\\uC5ED \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDeleteNoGoZoneMode,\n    className: \"delete-nogozone-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 9\n    }\n  }, \"\\uAE08\\uC9C0 \\uAD6C\\uC5ED \\uD574\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 11\n    }\n  }, \"\\uB9F5 \\uB9AC\\uC2A4\\uD2B8\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${(selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id) === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 15\n    }\n  }, selectedMap.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-and-node-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-container\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    className: \"map-canvas\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleMapClick // 맵 클릭 이벤트 추가\n    ,\n    style: {\n      cursor: isCreatingNode ? 'crosshair' : isCreatingNoGoZone ? 'crosshair' : isDeletingNoGoZone ? 'not-allowed' : selectionMode !== 'none' ? 'crosshair' : 'default'\n    } // 커서 스타일 수정\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uC774\\uBBF8\\uC9C0\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694.\"), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send-to-robots-button\",\n    onClick: handleSendMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07\\uC5D0\\uAC8C \\uC804\\uC1A1\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"map-patch-button\",\n    onClick: handlePatchMap,\n    disabled: isPatchingMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 17\n    }\n  }, isPatchingMap ? '맵 패치 중...' : '맵 패치'))), /*#__PURE__*/React.createElement(NodeList, {\n    mapId: selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 11\n    }\n  }))), isNodePopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 13\n    }\n  }, \"X: \", nodeX.toFixed(2), \", Y: \", nodeY.toFixed(2)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"\\uB178\\uB4DC \\uC774\\uB984 \\uC785\\uB825\",\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1208,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitNode,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 15\n    }\n  }, \"\\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsNodePopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")))), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 13\n    }\n  }, \"\\uB9F5 \\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"\\uB9F5 \\uC774\\uB984\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"\\uB9F5 \\uC124\\uBA85\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5 \\uD30C\\uC77C (.pgm, .png, .jpg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 15\n    }\n  }, \"YAML \\uD30C\\uC77C (.yaml)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 17\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1271,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\"))))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288,\n      columnNumber: 13\n    }\n  }, \"\\uB9F5 \\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"\\uB9F5 \\uC774\\uB984\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"\\uB9F5 \\uC124\\uBA85\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginTop: '10px',\n      color: '#333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1305,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isMonitored,\n    onChange: e => setIsMonitored(e.target.checked),\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 17\n    }\n  }), \"\\uBAA8\\uB2C8\\uD130\\uB9C1 \\uB9F5\\uC73C\\uB85C \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1315,\n      columnNumber: 17\n    }\n  }, \"\\uC5C5\\uB370\\uC774\\uD2B8\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\"))))), hoveredNode && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip\",\n    style: {\n      position: 'fixed',\n      top: `${tooltipPosition.y + 10}px`,\n      left: `${tooltipPosition.x + 10}px`,\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      color: 'white',\n      padding: '5px 10px',\n      borderRadius: '4px',\n      pointerEvents: 'none',\n      zIndex: 1000,\n      fontSize: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 9\n    }\n  }, hoveredNode.name), disconnectFirstNodeId && disconnectSecondNodeId && /*#__PURE__*/React.createElement(NodeDisconnect, {\n    firstNodeId: disconnectFirstNodeId,\n    secondNodeId: disconnectSecondNodeId,\n    onDisconnectSuccess: handleDisconnectSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 9\n    }\n  }), isNodeConnectionPopupOpen && /*#__PURE__*/React.createElement(NodeConnectionPopup, {\n    connectionData: connectionData,\n    onClose: () => {\n      setIsNodeConnectionPopupOpen(false);\n      setSelectionMode('none'); // 선택 모드 초기화\n      resetCursor(); // 커서 복구\n    },\n    onCreate: handleNodeConnectionCreate,\n    setSelectionMode: setSelectionMode,\n    startSelectingNode1: startSelectingNode1,\n    startSelectingNode2: startSelectingNode2,\n    startSelectingWaypoint: startSelectingWaypoint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 9\n    }\n  }), isPatchingMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 11\n    }\n  })));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faEdit","faPlus","faLink","faUnlink","Navbar","LogoutButton","UserInfo","worldToMap","mapToWorld","NodeList","NodeDisconnect","NodeConnectionPopup","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","isMonitored","setIsMonitored","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isCreatingNode","setIsCreatingNode","nodeX","setNodeX","nodeY","setNodeY","nodeName","setNodeName","isNodePopupOpen","setIsNodePopupOpen","canvasRef","mapImageRef","nodes","setNodes","isDeletingNode","setIsDeletingNode","imageNaturalWidth","setImageNaturalWidth","imageNaturalHeight","setImageNaturalHeight","hoveredNode","setHoveredNode","tooltipPosition","setTooltipPosition","x","y","isNodeConnectionPopupOpen","setIsNodeConnectionPopupOpen","connectionData","setConnectionData","node1","node2","waypoints","disconnectStep","setDisconnectStep","disconnectFirstNodeId","setDisconnectFirstNodeId","disconnectSecondNodeId","setDisconnectSecondNodeId","isCreatingNoGoZone","setIsCreatingNoGoZone","isDeletingNoGoZone","setIsDeletingNoGoZone","dragging","setDragging","dragStart","setDragStart","currentRect","setCurrentRect","noGoZones","setNoGoZones","isPatchingMap","setIsPatchingMap","selectionMode","setSelectionMode","resetCursor","document","body","style","cursor","fetchMaps","token","localStorage","getItem","alert","response","get","headers","data","length","handleSelectMap","error","console","fetchNodes","mapId","status","fetchNoGoZones","map","name","description","_id","Authorization","responseType","imageUrl","URL","createObjectURL","loadMapImage","canvas","current","ctx","getContext","Image","src","onload","imgWidth","width","imgHeight","height","clearRect","drawImage","drawAll","mapToMapCoordinates","forEach","zone","topLeft","bottomRight","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","node","connections","connection","connectedNode","find","n","startX","startY","endX","endY","beginPath","moveTo","wp","wpX","wpY","lineTo","stroke","size","font","textAlign","textBaseline","fillText","handleMouseMove","e","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","foundNode","distance","Math","sqrt","newRect","min","abs","handleMouseLeave","handleMouseDown","clickX","clickY","clickedZone","handleDeleteNoGoZone","handleMouseUp","finalRect","topLeftWorld","bottomRightWorld","noGoZone","post","handleConnectNodeMode","handleDisconnectNodeMode","handleCreateNoGoZone","handleDeleteNoGoZoneMode","zoneId","confirmDelete","window","confirm","delete","filter","handleMapClick","clickedNode","prev","newWaypoint","toFixed","nodeToDelete","calculateTotalDistance","node1Id","node2Id","totalDistance","x1","y1","x2","y2","i","handleSubmitNode","trim","handleDeleteMap","put","handleFileChange","target","files","handleYamlFileChange","handleUpdateMap","preventDefault","_error$response","_error$response$data","message","handleUploadMap","formData","FormData","append","openEditPopup","handleCreateNodeMode","revokeObjectURL","handleDeleteNodeMode","handleSendMap","_error$response2","_error$response2$data","handlePatchMap","confirmPatch","log","_error$response3","_error$response3$data","handleNodeConnectionCreate","handleDisconnectSuccess","isDeleted","startSelectingNode1","startSelectingNode2","startSelectingWaypoint","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","key","position","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","disabled","type","value","onChange","placeholder","onSubmit","required","accept","marginTop","color","checked","marginRight","backgroundColor","padding","borderRadius","pointerEvents","zIndex","fontSize","firstNodeId","secondNodeId","onDisconnectSuccess","onClose","onCreate"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["// src/components/MapManage/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\n\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nimport NodeList from './NodeList';\nimport NodeDisconnect from './NodeDisconnect';\nimport NodeConnectionPopup from './NodeConnectionPopup';\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false);\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isCreatingNode, setIsCreatingNode] = useState(false);\n  const [nodeX, setNodeX] = useState(null);\n  const [nodeY, setNodeY] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false);\n  const canvasRef = useRef(null);\n  const mapImageRef = useRef(null);\n  const [nodes, setNodes] = useState([]);\n  const [isDeletingNode, setIsDeletingNode] = useState(false);\n\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const [isNodeConnectionPopupOpen, setIsNodeConnectionPopupOpen] = useState(false);\n  const [connectionData, setConnectionData] = useState({ node1: null, node2: null, waypoints: [] });\n\n  const [disconnectStep, setDisconnectStep] = useState('idle');\n  const [disconnectFirstNodeId, setDisconnectFirstNodeId] = useState(null);\n  const [disconnectSecondNodeId, setDisconnectSecondNodeId] = useState(null);\n\n  const [isCreatingNoGoZone, setIsCreatingNoGoZone] = useState(false);\n  const [isDeletingNoGoZone, setIsDeletingNoGoZone] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [noGoZones, setNoGoZones] = useState([]);\n\n  const [isPatchingMap, setIsPatchingMap] = useState(false);\n  const [selectionMode, setSelectionMode] = useState('none'); // 'none' | 'selectingNode1' | 'selectingNode2' | 'selectingWaypoint'\n\n  // 커서를 기본 상태로 복구하는 함수\n  const resetCursor = () => {\n    document.body.style.cursor = 'default';\n  };\n\n  // 맵 목록을 서버에서 가져오는 함수\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.33:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n\n      if (response.data.length > 0) {\n        await handleSelectMap(response.data[0]);\n      }\n    } catch (error) {\n      console.error('맵을 가져오는 중 오류 발생:', error);\n      alert('맵을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  // 노드 목록을 서버에서 가져오는 함수\n  const fetchNodes = async (mapId) => {\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data);\n      } else {\n        setNodes([]);\n      }\n    } catch (error) {\n      console.error('노드를 가져오는 중 오류 발생:', error);\n      setNodes([]);\n      alert('노드를 가져오는 데 실패했습니다.');\n    }\n  };\n\n  // 금지구역 목록을 서버에서 가져오는 함수\n  const fetchNoGoZones = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/no-go-zones/map/${mapId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setNoGoZones(response.data);\n    } catch (error) {\n      console.error('금지구역을 가져오는 중 오류 발생:', error);\n      alert('금지구역을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  // 맵을 선택했을 때 호출되는 함수\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('맵 이미지를 가져오는 중 오류 발생:', error);\n      alert('맵 이미지를 가져오는 데 실패했습니다.');\n    }\n\n    await fetchNoGoZones(map._id);\n  };\n\n  // 이미지 로드 시 호출되는 함수 (지도 이미지를 캔버스에 그리기)\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawAll();\n    };\n  };\n\n  // 맵 좌표계를 캔버스 좌표계로 변환하는 함수\n  const mapToMapCoordinates = (x, y) => {\n    return worldToMap(x, y, imageNaturalWidth, imageNaturalHeight);\n  };\n\n  // 캔버스에 모든 요소를 그리는 함수 (지도, 노드, 연결선, 금지구역)\n  const drawAll = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(mapImageRef.current, 0, 0, imageNaturalWidth, imageNaturalHeight);\n\n    // 금지구역 그리기\n    noGoZones.forEach((zone) => {\n      const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n      const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n      const width = bottomRight.x - topLeft.x;\n      const height = bottomRight.y - topLeft.y;\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n      ctx.fillRect(topLeft.x, topLeft.y, width, height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(topLeft.x, topLeft.y, width, height);\n    });\n\n    // 드래그 중인 사각형 그리기\n    if (currentRect) {\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n    }\n\n    // 연결선 그리기\n    nodes.forEach((node) => {\n      node.connections.forEach((connection) => {\n        const connectedNode = nodes.find(n => n._id === connection.node);\n        if (connectedNode) {\n          const { x: startX, y: startY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const { x: endX, y: endY } = worldToMap(connectedNode.x, connectedNode.y, imageNaturalWidth, imageNaturalHeight);\n\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(startX, startY);\n\n          if (connection.waypoints && connection.waypoints.length > 0) {\n            connection.waypoints.forEach((wp) => {\n              const { x: wpX, y: wpY } = worldToMap(wp.x, wp.y, imageNaturalWidth, imageNaturalHeight);\n              ctx.lineTo(wpX, wpY);\n            });\n          }\n\n          ctx.lineTo(endX, endY);\n          ctx.stroke();\n        }\n      });\n    });\n\n    // 금지구역 삭제 모드일 때, 금지구역 위에 삭제 아이콘 표시\n    if (isDeletingNoGoZone) {\n      noGoZones.forEach((zone) => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const size = 20;\n        ctx.fillStyle = 'red';\n        ctx.font = 'bold 16px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('X', topLeft.x + 8, topLeft.y + 15);\n      });\n    }\n\n    // 노드 그리기\n    nodes.forEach((node) => {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const size = 10;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size);\n    });\n  };\n\n  // 이미지 로드 후 캔버스에 지도 그리기\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n  }, [mapImage]);\n\n  // 맵 이미지와 selectedMap이 모두 설정된 후 노드 및 금지구역 패치\n  useEffect(() => {\n    if (mapImage && selectedMap) {\n      fetchNodes(selectedMap._id);\n      fetchNoGoZones(selectedMap._id);\n    }\n  }, [mapImage, selectedMap]);\n\n  // 노드 또는 금지구역 변경 시마다 캔버스에 다시 그리기\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawAll();\n    }\n  }, [nodes, noGoZones, currentRect, isDeletingNoGoZone]);\n\n  // 노드 삭제 시 커서 복구\n  useEffect(() => {\n    if (\n      !isDeletingNode &&\n      disconnectStep === 'idle' &&\n      !isCreatingNoGoZone &&\n      !isDeletingNoGoZone &&\n      !dragging &&\n      selectionMode === 'none'\n    ) {\n      resetCursor();\n    }\n  }, [isDeletingNode, disconnectStep, isCreatingNoGoZone, isDeletingNoGoZone, dragging, selectionMode]);\n\n  // 마우스가 캔버스 위를 움직일 때 노드 호버 상태 업데이트\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    let foundNode = null;\n\n    for (let node of nodes) {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 10) { // 반경을 10px로 설정\n        foundNode = node;\n        break;\n      }\n    }\n\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({ x: e.clientX, y: e.clientY });\n    } else {\n      setHoveredNode(null);\n    }\n\n    // 금지구역 생성 모드일 때 드래그 중인 사각형 업데이트\n    if (isCreatingNoGoZone && dragging && dragStart) {\n      const newRect = {\n        x: Math.min(mouseX, dragStart.x),\n        y: Math.min(mouseY, dragStart.y),\n        width: Math.abs(mouseX - dragStart.x),\n        height: Math.abs(mouseY - dragStart.y),\n      };\n      setCurrentRect(newRect);\n    }\n  };\n\n  // 마우스가 캔버스를 벗어났을 때 호버 상태 초기화 및 드래그 상태 초기화\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n    // 드래그 중이었는데 캔버스를 벗어났을 경우 드래그 취소\n    if (isCreatingNoGoZone && dragging) {\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      resetCursor();\n    }\n  };\n\n  // 드래그 시작 이벤트 핸들러\n  const handleMouseDown = (e) => {\n    if (isCreatingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      setDragStart({ x: startX, y: startY });\n      setDragging(true);\n      document.body.style.cursor = 'crosshair';\n    }\n\n    if (isDeletingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n\n      const clickedZone = noGoZones.find(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n        return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n      });\n\n      if (clickedZone) {\n        handleDeleteNoGoZone(clickedZone._id);\n      }\n    }\n  };\n\n  // 드래그 종료 이벤트 핸들러\n  const handleMouseUp = async (e) => {\n    if (isCreatingNoGoZone && dragging && dragStart && currentRect) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n\n      const finalRect = {\n        x: Math.min(endX, dragStart.x),\n        y: Math.min(endY, dragStart.y),\n        width: Math.abs(endX - dragStart.x),\n        height: Math.abs(endY - dragStart.y),\n      };\n\n      const topLeftWorld = mapToWorld(finalRect.x, finalRect.y, imageNaturalWidth, imageNaturalHeight);\n      const bottomRightWorld = mapToWorld(finalRect.x + finalRect.width, finalRect.y + finalRect.height, imageNaturalWidth, imageNaturalHeight);\n\n      const noGoZone = {\n        topLeft: topLeftWorld,\n        bottomRight: bottomRightWorld,\n        mapId: selectedMap._id,\n      };\n\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://172.30.1.33:5557/map/no-go-zones', noGoZone, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        alert('금지 구역이 성공적으로 생성되었습니다.');\n        setNoGoZones([...noGoZones, response.data.noGoZone]);\n      } catch (error) {\n        console.error('금지 구역 생성 중 오류 발생:', error);\n        alert('금지 구역 생성에 실패했습니다.');\n      }\n\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      setSelectionMode('none');\n      resetCursor();\n      drawAll();\n    }\n  };\n\n  // 연결 모드 활성화 함수\n  const handleConnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsNodeConnectionPopupOpen(true);\n  };\n\n  // 연결 해제 모드 활성화 함수\n  const handleDisconnectNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setDisconnectStep('selectingFirstNode');\n    setDisconnectFirstNodeId(null);\n    setDisconnectSecondNodeId(null);\n    alert('연결을 해제할 첫 번째 노드를 선택하세요.');\n    setSelectionMode('selectingNode1');\n    document.body.style.cursor = 'pointer';\n  };\n\n  // 금지구역 생성 모드 활성화 함수\n  const handleCreateNoGoZone = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNoGoZone(true);\n    setIsDeletingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setCurrentRect(null);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // 금지구역 삭제 모드 활성화 함수\n  const handleDeleteNoGoZoneMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNoGoZone(true);\n    setIsCreatingNoGoZone(false);\n    setDragging(false);\n    setDragStart(null);\n    setSelectionMode('none');\n    alert('삭제할 금지 구역을 클릭하세요.');\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  // 금지구역을 삭제하는 함수\n  const handleDeleteNoGoZone = async (zoneId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('이 금지 구역을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/no-go-zones/${zoneId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('금지 구역이 성공적으로 삭제되었습니다.');\n      setNoGoZones(noGoZones.filter(zone => zone._id !== zoneId));\n    } catch (error) {\n      console.error('금지 구역 삭제 중 오류 발생:', error);\n      alert('금지 구역 삭제에 실패했습니다.');\n    } finally {\n      setIsDeletingNoGoZone(false);\n      resetCursor();\n      drawAll();\n    }\n  };\n\n  // 맵 클릭 시 다양한 모드 처리\n  const handleMapClick = async (e) => {\n    if (!selectedMap) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    const { x, y } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n\n    try {\n      if (disconnectStep === 'selectingFirstNode') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // 반경을 10px로 설정\n        });\n\n        if (clickedNode) {\n          setDisconnectFirstNodeId(clickedNode._id);\n          setDisconnectStep('selectingSecondNode');\n          alert(`첫 번째 노드 \"${clickedNode.name}\"가 선택되었습니다. 연결을 해제할 두 번째 노드를 선택하세요.`);\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      if (disconnectStep === 'selectingSecondNode') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10; // 반경을 10px로 설정\n        });\n\n        if (clickedNode) {\n          if (clickedNode._id === disconnectFirstNodeId) {\n            alert('같은 노드를 다시 선택할 수 없습니다. 다른 노드를 선택해주세요.');\n            return;\n          }\n\n          setDisconnectSecondNodeId(clickedNode._id);\n          setDisconnectStep('idle'); // 연결 해제 단계 종료\n          resetCursor();\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n\n        return;\n      }\n\n      if (selectionMode === 'selectingNode1') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10;\n        });\n\n        if (clickedNode) {\n          setConnectionData(prev => ({ ...prev, node1: clickedNode }));\n          setSelectionMode('selectingNode2');\n          alert(`노드 1 \"${clickedNode.name}\"이 선택되었습니다. 노드 2를 선택하세요.`);\n          document.body.style.cursor = 'pointer';\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      if (selectionMode === 'selectingNode2') {\n        const clickedNode = nodes.find(node => {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          return distance < 10;\n        });\n\n        if (clickedNode) {\n          if (clickedNode._id === connectionData.node1._id) {\n            alert('같은 노드를 선택했습니다. 다른 노드를 선택해주세요.');\n            return;\n          }\n          setConnectionData(prev => ({ ...prev, node2: clickedNode }));\n          setSelectionMode('selectingWaypoint');\n          alert(`노드 2 \"${clickedNode.name}\"이 선택되었습니다. 웨이포인트를 추가하세요.`);\n          document.body.style.cursor = 'crosshair';\n        } else {\n          alert('유효한 노드를 클릭해주세요.');\n        }\n        return;\n      }\n\n      if (selectionMode === 'selectingWaypoint') {\n        const newWaypoint = { x, y };\n        setConnectionData(prev => ({\n          ...prev,\n          waypoints: [...prev.waypoints, newWaypoint]\n        }));\n        alert(`웨이포인트가 추가되었습니다: X=${x.toFixed(2)}, Y=${y.toFixed(2)}`);\n        // 선택 모드를 유지하여 추가적인 웨이포인트를 추가할 수 있도록 함\n      }\n\n      if (isDeletingNoGoZone) {\n        const clickedZone = noGoZones.find(zone => {\n          const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n          const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n          return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n        });\n\n        if (clickedZone) {\n          handleDeleteNoGoZone(clickedZone._id);\n        } else {\n          alert('금지 구역을 클릭해주세요.');\n        }\n\n        return;\n      }\n\n      if (isNodeConnectionPopupOpen) {\n        // NodeConnectionPopup이 열려 있는 동안 맵 클릭을 처리하지 않음\n        return;\n      }\n\n      if (isCreatingNode) {\n        setNodeX(x);\n        setNodeY(y);\n        setIsCreatingNode(false);\n        setIsNodePopupOpen(true);\n        resetCursor();\n      } else if (isDeletingNode) {\n        let nodeToDelete = null;\n        for (let node of nodes) {\n          const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n          if (distance < 10) { // 반경을 10px로 설정\n            nodeToDelete = node;\n            break;\n          }\n        }\n      \n        if (nodeToDelete) {\n          const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n          if (confirmDelete) {\n            try {\n              const token = localStorage.getItem('token');\n              await axios.delete(`http://172.30.1.33:5557/map/node/${nodeToDelete._id}`, {\n                headers: { Authorization: `Bearer ${token}` },\n              });\n              alert('노드가 성공적으로 삭제되었습니다.');\n      \n              await fetchNodes(selectedMap._id);\n              drawAll();\n      \n              setIsDeletingNode(false);\n            } catch (error) {\n              console.error('노드 삭제 중 오류 발생:', error);\n              alert('노드 삭제에 실패했습니다.');\n            }\n          }\n        } else {\n          alert('해당 위치에 노드를 찾을 수 없습니다.');\n        }\n      }\n    } catch (error) {\n      console.error('맵 클릭 처리 중 오류 발생:', error);\n      alert('맵 클릭 처리 중 오류가 발생했습니다.');\n    } finally {\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    }\n  };\n\n  // 노드 간 총 꺾인 경로 거리 계산 함수\n  const calculateTotalDistance = (node1Id, node2Id, waypoints) => {\n    const node1 = nodes.find(n => n._id === node1Id);\n    const node2 = nodes.find(n => n._id === node2Id);\n    if (!node1 || !node2) return 0;\n\n    let totalDistance = 0;\n\n    // 거리 계산 함수 (직선 거리)\n    const distance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n    if (waypoints.length > 0) {\n      totalDistance += distance(node1.x, node1.y, waypoints[0].x, waypoints[0].y);\n\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        totalDistance += distance(waypoints[i].x, waypoints[i].y, waypoints[i + 1].x, waypoints[i + 1].y);\n      }\n\n      totalDistance += distance(waypoints[waypoints.length - 1].x, waypoints[waypoints.length - 1].y, node2.x, node2.y);\n    } else {\n      totalDistance += distance(node1.x, node1.y, node2.x, node2.y);\n    }\n\n    return totalDistance;\n  };\n\n  // 노드 생성을 제출하는 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    if (nodeName.trim().length === 0) {\n      alert('노드 이름을 입력해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id,\n      }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('노드가 성공적으로 생성되었습니다.');\n      setIsNodePopupOpen(false);\n      setNodeName('');\n      setNodeX(null);\n      setNodeY(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 생성 중 오류 발생:', error);\n      alert('노드 생성에 실패했습니다.');\n    }\n  };\n\n  // 맵 삭제하는 함수\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('이 맵을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('맵이 성공적으로 삭제되었습니다.');\n      await fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n        setMapImage(null);\n        setNodes([]);\n        setNoGoZones([]);\n      }\n    } catch (error) {\n      console.error('맵 삭제 중 오류 발생:', error);\n      alert('맵 삭제에 실패했습니다.');\n    }\n  };\n\n  // 맵 파일 변경 시 호출되는 함수\n  const handleFileChange = (e) => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 시 호출되는 함수\n  const handleYamlFileChange = (e) => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 맵 업데이트를 처리하는 함수\n  const handleUpdateMap = async (e) => {\n    e.preventDefault();\n\n    if (editName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 성공적으로 업데이트되었습니다.');\n      setIsEditPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업데이트 중 오류 발생:', error);\n      alert(`맵 업데이트 중 오류 발생: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  // 맵 업로드를 처리하는 함수\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n\n    if (uploadName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('맵이 성공적으로 업로드되었습니다.');\n      setIsUploadPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업로드 중 오류 발생:', error);\n      alert('맵 업로드에 실패했습니다.');\n    }\n  };\n\n  // 맵 수정 팝업을 여는 함수\n  const openEditPopup = (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    setIsEditPopupOpen(true);\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNode(true);\n    setIsDeletingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // URL 객체 해제를 위한 useEffect\n  useEffect(() => {\n    return () => {\n      if (mapImage) {\n        URL.revokeObjectURL(mapImage);\n      }\n    };\n  }, [mapImage]);\n\n  // 노드 삭제 모드를 활성화하는 함수\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    setIsDeletingNoGoZone(false);\n    setIsCreatingNoGoZone(false);\n    setSelectionMode('none');\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  // Send to Robots 버튼과 관련된 함수\n  const handleSendMap = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5559/robot/send_map', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 로봇에게 성공적으로 전송되었습니다.');\n    } catch (error) {\n      console.error('맵을 로봇에게 전송하는 중 오류 발생:', error);\n      alert(`맵을 로봇에게 전송하는 중 오류 발생: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  // 맵 패치를 처리하는 함수 (기존 경로 삭제 후 재계산)\n  const handlePatchMap = async () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmPatch = window.confirm('선택한 맵의 모든 노드 간의 최단 경로를 계산하고 저장하시겠습니까?');\n    if (!confirmPatch) return;\n\n    setIsPatchingMap(true);\n\n    try {\n      // Step 1: 기존 경로 데이터 삭제\n      await axios.delete(`http://172.30.1.33:5557/map/shortpaths/map/${selectedMap._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log('기존 ShortPath 데이터가 삭제되었습니다.');\n\n      // Step 2: 새로운 경로 계산 및 저장\n      const response = await axios.post('http://172.30.1.33:5557/map/calculate-paths', {\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        alert('맵 패치가 성공적으로 완료되었습니다.');\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      } else {\n        alert('맵 패치에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('맵 패치 중 오류 발생:', error);\n      alert(`맵 패치 중 오류 발생: ${error.response?.data?.error || error.message}`);\n    } finally {\n      setIsPatchingMap(false);\n    }\n  };\n\n  // 노드 연결을 생성하는 함수\n  const handleNodeConnectionCreate = async ({ node1, node2, waypoints }) => {\n    if (!node1 || !node2) {\n      alert('노드 1과 노드 2를 모두 선택해주세요.');\n      return;\n    }\n\n    try {\n      const totalDistance = calculateTotalDistance(node1._id, node2._id, waypoints);\n\n      const token = localStorage.getItem('token');\n      await axios.post(`http://172.30.1.33:5557/map/node/connect`, {\n        node1: node1._id,\n        node2: node2._id,\n        waypoints: waypoints, // 웨이포인트는 좌표값으로 전달\n        distance: totalDistance,\n      }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      alert(`노드가 성공적으로 연결되었습니다. 전체 꺾인 경로의 가중치: ${totalDistance.toFixed(2)}`);\n\n      setIsNodeConnectionPopupOpen(false);\n      setConnectionData({ node1: null, node2: null, waypoints: [] });\n      await fetchNodes(selectedMap._id);\n      drawAll();\n\n      // 상태 초기화 및 커서 복구\n      setSelectionMode('none');\n      resetCursor();\n    } catch (error) {\n      console.error('노드 연결 중 오류 발생:', error);\n      alert('노드 연결에 실패했습니다.');\n      // 오류 발생 시에도 상태를 초기화하고 커서를 복구\n      setSelectionMode('none');\n      resetCursor();\n    }\n  };\n\n  // 노드 연결 해제 성공 시 처리하는 함수\n  const handleDisconnectSuccess = async (isDeleted) => {\n    if (isDeleted) {\n      alert('노드 간의 연결이 성공적으로 해제되었습니다.');\n      setDisconnectFirstNodeId(null);\n      setDisconnectSecondNodeId(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } else {\n      alert('노드 간의 연결 해제에 실패했습니다.');\n    }\n    // 상태 초기화 및 커서 복구\n    setSelectionMode('none');\n    resetCursor();\n  };\n\n  // NodeConnectionPopup에서 노드 선택 시작 함수\n  const startSelectingNode1 = () => {\n    setSelectionMode('selectingNode1');\n    alert('노드 1을 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n\n  const startSelectingNode2 = () => {\n    setSelectionMode('selectingNode2');\n    alert('노드 2를 선택하세요.');\n    document.body.style.cursor = 'pointer';\n  };\n\n  const startSelectingWaypoint = () => {\n    setSelectionMode('selectingWaypoint');\n    alert('웨이포인트를 선택하세요.');\n    document.body.style.cursor = 'crosshair';\n  };\n\n  return (\n    <div className=\"map-management-page\">\n      {/* 상단 네비게이션 바 */}\n      <header className=\"map-management-header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      {/* 툴바: 네비게이션 아래에 위치 */}\n      <div className=\"toolbar\">\n        <button onClick={handleCreateNodeMode} className=\"create-node-button\">\n          <FontAwesomeIcon icon={faPlus} /> 노드 생성\n        </button>\n        <button onClick={handleDeleteNodeMode} className=\"delete-node-button\">\n          <FontAwesomeIcon icon={faEdit} /> 노드 삭제\n        </button>\n        <button onClick={handleConnectNodeMode} className=\"connect-node-button\">\n          <FontAwesomeIcon icon={faLink} /> 노드 연결\n        </button>\n        <button onClick={handleDisconnectNodeMode} className=\"disconnect-node-button\">\n          <FontAwesomeIcon icon={faUnlink} /> 연결 해제\n        </button>\n        <button\n          onClick={handleCreateNoGoZone}\n          className=\"create-nogozone-button\"\n        >\n          금지 구역 생성\n        </button>\n        <button\n          onClick={handleDeleteNoGoZoneMode}\n          className=\"delete-nogozone-button\"\n        >\n          금지 구역 해제\n        </button>\n      </div>\n\n      {/* 맵 리스트와 이미지 컨텐츠 */}\n      <div className=\"map-management-content\">\n        {/* 맵 리스트 컨테이너 */}\n        <div className=\"map-list-container\">\n          <h2 className=\"map-list-header\">\n            맵 리스트\n            <button\n              onClick={() => setIsUploadPopupOpen(true)}\n              className=\"add-map-button\"\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </h2>\n          <ul className=\"map-list\">\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={`map-list-item ${selectedMap?._id === map._id ? 'selected-map' : ''}`}\n              >\n                <span\n                  onClick={() => handleSelectMap(map)}\n                  className=\"map-list-item-name\"\n                >\n                  {map.name}\n                </span>\n                <button\n                  onClick={() => openEditPopup(map)}\n                  className=\"edit-map-button\"\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button\n                  onClick={() => handleDeleteMap(map._id)}\n                  className=\"delete-map-button\"\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {selectedMap && (\n            <div className=\"map-description\">\n              <h3>맵 설명</h3>\n              <p>{selectedMap.description}</p>\n            </div>\n          )}\n        </div>\n\n        {/* 지도 이미지와 노드 렌더링 및 노드 리스트 영역 */}\n        <div className=\"map-image-and-node-list\">\n          {/* 지도 이미지와 노드 렌더링 영역 */}\n          <div\n            className=\"map-image-container\"\n            style={{ position: 'relative' }}\n          >\n            {mapImage ? (\n              <canvas\n                ref={canvasRef}\n                className=\"map-canvas\"\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleMapClick} // 맵 클릭 이벤트 추가\n                style={{\n                  cursor:\n                    isCreatingNode\n                      ? 'crosshair'\n                      : isCreatingNoGoZone\n                      ? 'crosshair'\n                      : isDeletingNoGoZone\n                      ? 'not-allowed'\n                      : selectionMode !== 'none'\n                      ? 'crosshair'\n                      : 'default',\n                }} // 커서 스타일 수정\n              />\n            ) : (\n              <p>맵을 선택하여 이미지를 확인하세요.</p>\n            )}\n\n            {/* 플로팅 Send to Robots 버튼과 Map Patch 버튼 추가 */}\n            {selectedMap && (\n              <div className=\"floating-buttons\">\n                <button\n                  className=\"send-to-robots-button\"\n                  onClick={handleSendMap}\n                >\n                  로봇에게 전송\n                </button>\n                <button\n                  className=\"map-patch-button\"\n                  onClick={handlePatchMap}\n                  disabled={isPatchingMap}\n                >\n                  {isPatchingMap ? '맵 패치 중...' : '맵 패치'}\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* 오른쪽에 노드 목록 표시 */}\n          <NodeList mapId={selectedMap?._id} />\n        </div>\n      </div>\n\n      {/* Node 생성 팝업 */}\n      {isNodePopupOpen && (\n        <div className=\"popup-container\">\n          <div className=\"node-popup\">\n            <h3>노드 생성</h3>\n            <p>X: {nodeX.toFixed(2)}, Y: {nodeY.toFixed(2)}</p>\n            <input\n              type=\"text\"\n              value={nodeName}\n              onChange={(e) => setNodeName(e.target.value)}\n              placeholder=\"노드 이름 입력\"\n              className=\"popup-input\"\n            />\n            <div className=\"popup-button-container\">\n              <button onClick={handleSubmitNode} className=\"popup-submit-button\">\n                생성\n              </button>\n              <button\n                onClick={() => setIsNodePopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                취소\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Map Upload Popup */}\n      {isUploadPopupOpen && (\n        <div className=\"popup-container\">\n          <div className=\"upload-popup\">\n            <h3>맵 업로드</h3>\n            <form onSubmit={handleUploadMap}>\n              <input\n                type=\"text\"\n                value={uploadName}\n                onChange={(e) => setUploadName(e.target.value)}\n                placeholder=\"맵 이름\"\n                required\n                className=\"popup-input\"\n              />\n              <textarea\n                value={uploadDescription}\n                onChange={(e) => setUploadDescription(e.target.value)}\n                placeholder=\"맵 설명\"\n                required\n                className=\"popup-textarea\"\n              />\n              <label>맵 파일 (.pgm, .png, .jpg)</label>\n              <input\n                type=\"file\"\n                accept=\".pgm,.png,.jpg\"\n                onChange={handleFileChange}\n                required\n                className=\"popup-file-input\"\n              />\n              <label>YAML 파일 (.yaml)</label>\n              <input\n                type=\"file\"\n                accept=\".yaml\"\n                onChange={handleYamlFileChange}\n                required\n                className=\"popup-file-input\"\n              />\n              <div className=\"popup-button-container\">\n                <button type=\"submit\" className=\"popup-submit-button\">\n                  업로드\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setIsUploadPopupOpen(false)}\n                  className=\"popup-cancel-button\"\n                >\n                  취소\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Map Popup */}\n      {isEditPopupOpen && (\n        <div className=\"popup-container\">\n          <div className=\"edit-popup\">\n            <h3>맵 수정</h3>\n            <form onSubmit={handleUpdateMap}>\n              <input\n                type=\"text\"\n                value={editName}\n                onChange={(e) => setEditName(e.target.value)}\n                placeholder=\"맵 이름\"\n                required\n                className=\"popup-input\"\n              />\n              <textarea\n                value={editDescription}\n                onChange={(e) => setEditDescription(e.target.value)}\n                placeholder=\"맵 설명\"\n                required\n                className=\"popup-textarea\"\n              />\n              <label style={{ marginTop: '10px', color: '#333' }}>\n                <input\n                  type=\"checkbox\"\n                  checked={isMonitored}\n                  onChange={(e) => setIsMonitored(e.target.checked)}\n                  style={{ marginRight: '10px' }}\n                />\n                모니터링 맵으로 설정\n              </label>\n              <div className=\"popup-button-container\">\n                <button type=\"submit\" className=\"popup-submit-button\">\n                  업데이트\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setIsEditPopupOpen(false)}\n                  className=\"popup-cancel-button\"\n                >\n                  취소\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Hover Tooltip */}\n      {hoveredNode && (\n        <div\n          className=\"tooltip\"\n          style={{\n            position: 'fixed',\n            top: `${tooltipPosition.y + 10}px`,\n            left: `${tooltipPosition.x + 10}px`,\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            pointerEvents: 'none',\n            zIndex: 1000,\n            fontSize: '12px',\n          }}\n        >\n          {hoveredNode.name}\n        </div>\n      )}\n\n      {/* NodeDisconnect 컴포넌트를 조건부로 렌더링 */}\n      {disconnectFirstNodeId && disconnectSecondNodeId && (\n        <NodeDisconnect\n          firstNodeId={disconnectFirstNodeId}\n          secondNodeId={disconnectSecondNodeId}\n          onDisconnectSuccess={handleDisconnectSuccess}\n        />\n      )}\n\n      {/* NodeConnectionPopup 컴포넌트 */}\n      {isNodeConnectionPopupOpen && (\n        <NodeConnectionPopup\n          connectionData={connectionData}\n          onClose={() => {\n            setIsNodeConnectionPopupOpen(false);\n            setSelectionMode('none'); // 선택 모드 초기화\n            resetCursor(); // 커서 복구\n          }}\n          onCreate={handleNodeConnectionCreate}\n          setSelectionMode={setSelectionMode}\n          startSelectingNode1={startSelectingNode1}\n          startSelectingNode2={startSelectingNode2}\n          startSelectingWaypoint={startSelectingWaypoint}\n        />\n      )}\n\n      {/* 로딩 인디케이터 추가 */}\n      {isPatchingMap && (\n        <div className=\"loading-overlay\">\n          <div className=\"spinner\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Mapmanage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}