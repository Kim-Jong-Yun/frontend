{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js\";\nimport React, { useState } from 'react';\nimport './TaskFlow.css'; // 스타일 파일 임포트\nimport CreateTaskFlow from './CreateTaskFlow';\nfunction TaskFlow() {\n  const [taskFlows, setTaskFlows] = useState([]); // 추가된 작업 플로우 목록\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [stepName, setStepName] = useState(''); // 단계 이름\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const handleAddTaskFlow = () => {\n    if (nodeName.trim() === '' || stepName.trim() === '') return; // 빈 값일 경우 추가하지 않음\n    setTaskFlows([...taskFlows, {\n      node: nodeName,\n      step: stepName\n    }]); // 새로운 플로우 추가\n    setNodeName(''); // 입력 필드 초기화\n    setStepName(''); // 입력 필드 초기화\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, taskFlows.map((flow, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"task-flow-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 34\n    }\n  }, \"\\uB178\\uB4DC:\"), \" \", flow.node), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 34\n    }\n  }, \"\\uB2E8\\uACC4:\"), \" \", flow.step))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"\\uB178\\uB4DC \\uC774\\uB984 \\uC785\\uB825\",\n    className: \"task-flow-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: stepName,\n    onChange: e => setStepName(e.target.value),\n    placeholder: \"\\uB2E8\\uACC4 \\uC774\\uB984 \\uC785\\uB825\",\n    className: \"task-flow-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddTaskFlow,\n    className: \"task-flow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"+\")))), isPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CreateTaskFlow, {\n    onClose: togglePopup,\n    onTaskFlowAdd: handleAddTaskFlow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }))));\n}\nexport default TaskFlow;","map":{"version":3,"names":["React","useState","CreateTaskFlow","TaskFlow","taskFlows","setTaskFlows","nodeName","setNodeName","stepName","setStepName","isPopupOpen","setIsPopupOpen","handleAddTaskFlow","trim","node","step","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","flow","index","key","type","value","onChange","e","target","placeholder","onClick","onClose","togglePopup","onTaskFlowAdd"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskFlow.css'; // 스타일 파일 임포트\nimport CreateTaskFlow from './CreateTaskFlow';\n\nfunction TaskFlow() {\n    const [taskFlows, setTaskFlows] = useState([]); // 추가된 작업 플로우 목록\n    const [nodeName, setNodeName] = useState(''); // 노드 이름\n    const [stepName, setStepName] = useState(''); // 단계 이름\n    const [isPopupOpen, setIsPopupOpen] = useState(false); \n\n    const handleAddTaskFlow = () => {\n        if (nodeName.trim() === '' || stepName.trim() === '') return; // 빈 값일 경우 추가하지 않음\n        setTaskFlows([...taskFlows, { node: nodeName, step: stepName }]); // 새로운 플로우 추가\n        setNodeName(''); // 입력 필드 초기화\n        setStepName(''); // 입력 필드 초기화\n    };\n\n    return (\n        <div className=\"task-flow-container\">\n            <div className=\"task-flow-background\">\n                <div className=\"task-flow-list\">\n                    {taskFlows.map((flow, index) => (\n                        <div key={index} className=\"task-flow-item\">\n                            <div><strong>노드:</strong> {flow.node}</div>\n                            <div><strong>단계:</strong> {flow.step}</div>\n                        </div>\n                    ))}\n                    {/* 마지막에 + 버튼이 있는 큰 둥근 사각형 */}\n                    <div className=\"task-flow-add\">\n                        <input \n                            type=\"text\" \n                            value={nodeName} \n                            onChange={(e) => setNodeName(e.target.value)} \n                            placeholder=\"노드 이름 입력\"\n                            className=\"task-flow-input\"\n                        />\n                        <input \n                            type=\"text\" \n                            value={stepName} \n                            onChange={(e) => setStepName(e.target.value)} \n                            placeholder=\"단계 이름 입력\"\n                            className=\"task-flow-input\"\n                        />\n                        <button onClick={handleAddTaskFlow} className=\"task-flow-button\">+</button>\n                    </div>\n                </div>\n            </div>\n            {/* 팝업 창 - CreateTaskFlow */}\n            {isPopupOpen && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup-content\">\n                        <CreateTaskFlow onClose={togglePopup} onTaskFlowAdd={handleAddTaskFlow} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default TaskFlow;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB,CAAC,CAAC;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIN,QAAQ,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;IAC9DR,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;MAAEU,IAAI,EAAER,QAAQ;MAAES,IAAI,EAAEP;IAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAClED,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACjBE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACIT,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1BnB,SAAS,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvB1B,KAAA,CAAAgB,aAAA;IAAKW,GAAG,EAAED,KAAM;IAACT,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAKvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,eAAW,CAAC,KAAC,EAACE,IAAI,CAACX,IAAU,CAAC,eAC3Cd,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAKvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,eAAW,CAAC,KAAC,EAACE,IAAI,CAACV,IAAU,CACzC,CACR,CAAC,eAEFf,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BvB,KAAA,CAAAgB,aAAA;IACIY,IAAI,EAAC,MAAM;IACXC,KAAK,EAAEvB,QAAS;IAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC7CI,WAAW,EAAC,wCAAU;IACtBhB,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,eACFvB,KAAA,CAAAgB,aAAA;IACIY,IAAI,EAAC,MAAM;IACXC,KAAK,EAAErB,QAAS;IAChBsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC7CI,WAAW,EAAC,wCAAU;IACtBhB,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,eACFvB,KAAA,CAAAgB,aAAA;IAAQkB,OAAO,EAAEtB,iBAAkB;IAACK,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CACzE,CACJ,CACJ,CAAC,EAELb,WAAW,iBACRV,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BvB,KAAA,CAAAgB,aAAA,CAACd,cAAc;IAACiC,OAAO,EAAEC,WAAY;IAACC,aAAa,EAAEzB,iBAAkB;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACxE,CACJ,CAER,CAAC;AAEd;AAEA,eAAepB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}