{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js\";\nimport React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nconst WebcamStream = () => {\n  const videoRef = useRef(null);\n  const socketRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  useEffect(() => {\n    const startWebRTC = async () => {\n      console.log('Setting up WebRTC...');\n      const socket = io('http://localhost:7001');\n      socketRef.current = socket;\n      const peerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      });\n      peerConnectionRef.current = peerConnection;\n      peerConnection.onicecandidate = event => {\n        if (event.candidate) {\n          console.log('New ICE candidate:', event.candidate);\n          socket.emit('candidate', event.candidate);\n        }\n      };\n      peerConnection.oniceconnectionstatechange = () => {\n        console.log('ICE Connection State Change:', peerConnection.iceConnectionState);\n      };\n      peerConnection.onconnectionstatechange = () => {\n        console.log('Connection State Change:', peerConnection.connectionState);\n      };\n      peerConnection.ontrack = event => {\n        console.log('Track received:', event.track);\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n          console.log('Video srcObject set:', videoRef.current.srcObject);\n        }\n      };\n      socket.on('signal', async data => {\n        console.log('Received signal:', data);\n        if (data.type === 'offer') {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n          const answer = await peerConnection.createAnswer();\n          await peerConnection.setLocalDescription(answer);\n          socket.emit('signal', peerConnection.localDescription);\n        } else if (data.type === 'answer') {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n        }\n      });\n      socket.on('candidate', async candidate => {\n        try {\n          await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n          console.log('Added ICE candidate:', candidate);\n        } catch (error) {\n          console.error('Error adding received ICE candidate', error);\n        }\n      });\n      socket.on('connect', () => {\n        console.log('Connected to signaling server');\n        socket.emit('join');\n      });\n      socket.on('disconnect', () => {\n        console.log('Disconnected from signaling server');\n      });\n      socket.on('error', error => {\n        console.error('Socket error:', error);\n      });\n    };\n    startWebRTC();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (peerConnectionRef.current) {\n        peerConnectionRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Webcam Stream\"), /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\nexport default WebcamStream;","map":{"version":3,"names":["React","useEffect","useRef","io","WebcamStream","videoRef","socketRef","peerConnectionRef","startWebRTC","console","log","socket","current","peerConnection","RTCPeerConnection","iceServers","urls","onicecandidate","event","candidate","emit","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","connectionState","ontrack","track","srcObject","streams","on","data","type","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","localDescription","addIceCandidate","RTCIceCandidate","error","disconnect","close","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","width"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst WebcamStream = () => {\n  const videoRef = useRef(null);\n  const socketRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n\n  useEffect(() => {\n    const startWebRTC = async () => {\n      console.log('Setting up WebRTC...');\n      const socket = io('http://localhost:7001');\n      socketRef.current = socket;\n\n      const peerConnection = new RTCPeerConnection({\n        iceServers: [\n          { urls: 'stun:stun.l.google.com:19302' },\n          { urls: 'stun:stun1.l.google.com:19302' }\n        ]\n      });\n      peerConnectionRef.current = peerConnection;\n\n      peerConnection.onicecandidate = (event) => {\n        if (event.candidate) {\n          console.log('New ICE candidate:', event.candidate);\n          socket.emit('candidate', event.candidate);\n        }\n      };\n\n      peerConnection.oniceconnectionstatechange = () => {\n        console.log('ICE Connection State Change:', peerConnection.iceConnectionState);\n      };\n\n      peerConnection.onconnectionstatechange = () => {\n        console.log('Connection State Change:', peerConnection.connectionState);\n      };\n\n      peerConnection.ontrack = (event) => {\n        console.log('Track received:', event.track);\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n          console.log('Video srcObject set:', videoRef.current.srcObject);\n        }\n      };\n\n      socket.on('signal', async (data) => {\n        console.log('Received signal:', data);\n        if (data.type === 'offer') {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n          const answer = await peerConnection.createAnswer();\n          await peerConnection.setLocalDescription(answer);\n          socket.emit('signal', peerConnection.localDescription);\n        } else if (data.type === 'answer') {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n        }\n      });\n\n      socket.on('candidate', async (candidate) => {\n        try {\n          await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n          console.log('Added ICE candidate:', candidate);\n        } catch (error) {\n          console.error('Error adding received ICE candidate', error);\n        }\n      });\n\n      socket.on('connect', () => {\n        console.log('Connected to signaling server');\n        socket.emit('join');\n      });\n\n      socket.on('disconnect', () => {\n        console.log('Disconnected from signaling server');\n      });\n\n      socket.on('error', (error) => {\n        console.error('Socket error:', error);\n      });\n    };\n\n    startWebRTC();\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (peerConnectionRef.current) {\n        peerConnectionRef.current.close();\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Webcam Stream</h1>\n      <video ref={videoRef} autoPlay playsInline style={{ width: '100%' }} />\n    </div>\n  );\n};\n\nexport default WebcamStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}