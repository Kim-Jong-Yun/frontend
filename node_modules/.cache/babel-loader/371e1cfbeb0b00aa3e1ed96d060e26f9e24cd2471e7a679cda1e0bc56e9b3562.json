{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport ROSLIB from 'roslib';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://172.30.1.40:7000', {\n  transports: ['websocket'],\n  upgrade: true,\n  forceNew: true,\n  withCredentials: true,\n  extraHeaders: {\n    \"my-custom-header\": \"abcd\"\n  }\n});\nfunction MapCreatePage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const videoRef = useRef();\n  const peerRef = useRef(null);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedRobot) {\n      // WebRTC 설정\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: false\n        }).then(stream => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n          const peer = new SimplePeer({\n            initiator: true,\n            trickle: false,\n            stream: stream\n          });\n          peer.on('signal', data => {\n            socket.emit('signal', {\n              signal: data,\n              robot_id: selectedRobot\n            });\n          });\n          peer.on('stream', stream => {\n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          });\n          peerRef.current = peer;\n          socket.on('signal', data => {\n            peer.signal(data.signal);\n          });\n        }).catch(error => console.error('Error accessing media devices.', error));\n      } else {\n        console.error('MediaDevices API not supported.');\n      }\n\n      // ROS 연결 설정\n      const ros = new ROSLIB.Ros({\n        url: 'ws://172.30.1.40:9090'\n      });\n      ros.on('connection', () => {\n        console.log('Connected to websocket server.');\n      });\n      ros.on('error', error => {\n        console.log('Error connecting to websocket server: ', error);\n      });\n      ros.on('close', () => {\n        console.log('Connection to websocket server closed.');\n      });\n\n      // SLAM 데이터를 수신하여 화면에 표시\n      const mapTopic = new ROSLIB.Topic({\n        ros: ros,\n        name: '/map',\n        messageType: 'nav_msgs/OccupancyGrid'\n      });\n      mapTopic.subscribe(message => {\n        console.log('Received message on /map: ', message);\n        if (mapRef.current) {\n          const canvas = mapRef.current;\n          const ctx = canvas.getContext('2d');\n          const width = message.info.width;\n          const height = message.info.height;\n          const imageData = ctx.createImageData(width, height);\n          for (let i = 0; i < message.data.length; i++) {\n            const value = message.data[i];\n            const color = value === -1 ? 255 : 255 - value;\n            imageData.data[i * 4] = color;\n            imageData.data[i * 4 + 1] = color;\n            imageData.data[i * 4 + 2] = color;\n            imageData.data[i * 4 + 3] = 255;\n          }\n          ctx.putImageData(imageData, 0, 0);\n        }\n      });\n      return () => {\n        ros.close();\n      };\n    }\n  }, [selectedRobot]);\n  const handleKeyDown = useCallback(e => {\n    const velocityCommands = {\n      w: {\n        linear: 0.1,\n        angular: 0\n      },\n      a: {\n        linear: 0,\n        angular: 0.1\n      },\n      s: {\n        linear: -0.1,\n        angular: 0\n      },\n      d: {\n        linear: 0,\n        angular: -0.1\n      },\n      ' ': {\n        linear: 0,\n        angular: 0\n      }\n    };\n    if (velocityCommands[e.key]) {\n      socket.emit('key_press', {\n        robot_id: selectedRobot,\n        velocity: velocityCommands[e.key]\n      });\n    }\n  }, [selectedRobot]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedRobot, handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SLAM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRobot(e.target.value),\n        value: selectedRobot,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: robot._id,\n          children: robot.name\n        }, robot._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SLAM \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: mapRef,\n          width: \"384\",\n          height: \"384\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"WebCam \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s(MapCreatePage, \"lFXSwbqffOYty/iht+vTPXgyML0=\");\n_c = MapCreatePage;\nexport default MapCreatePage;\nvar _c;\n$RefreshReg$(_c, \"MapCreatePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Navbar","LogoutButton","UserInfo","axios","ROSLIB","io","SimplePeer","jsxDEV","_jsxDEV","socket","connect","transports","upgrade","forceNew","withCredentials","extraHeaders","MapCreatePage","_s","robots","setRobots","selectedRobot","setSelectedRobot","videoRef","peerRef","mapRef","fetchRobots","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","disconnect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","peer","initiator","trickle","on","emit","signal","robot_id","catch","ros","Ros","url","log","mapTopic","Topic","name","messageType","subscribe","message","canvas","ctx","getContext","width","info","height","imageData","createImageData","i","length","value","color","putImageData","close","handleKeyDown","e","velocityCommands","w","linear","angular","a","s","d","key","velocity","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","target","map","robot","_id","justifyContent","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport ROSLIB from 'roslib';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\n\nconst socket = io.connect('http://172.30.1.40:7000', {\n    transports: ['websocket'],\n    upgrade: true,\n    forceNew: true,\n    withCredentials: true,\n    extraHeaders: {\n        \"my-custom-header\": \"abcd\"\n    }\n});\n\nfunction MapCreatePage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n    const videoRef = useRef();\n    const peerRef = useRef(null);\n    const mapRef = useRef(null);\n\n    useEffect(() => {\n        const fetchRobots = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            // WebRTC 설정\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then(stream => {\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n\n                    const peer = new SimplePeer({\n                        initiator: true,\n                        trickle: false,\n                        stream: stream\n                    });\n\n                    peer.on('signal', data => {\n                        socket.emit('signal', { signal: data, robot_id: selectedRobot });\n                    });\n\n                    peer.on('stream', stream => {\n                        if (videoRef.current) {\n                            videoRef.current.srcObject = stream;\n                        }\n                    });\n\n                    peerRef.current = peer;\n\n                    socket.on('signal', data => {\n                        peer.signal(data.signal);\n                    });\n                }).catch(error => console.error('Error accessing media devices.', error));\n            } else {\n                console.error('MediaDevices API not supported.');\n            }\n\n            // ROS 연결 설정\n            const ros = new ROSLIB.Ros({\n                url: 'ws://172.30.1.40:9090'\n            });\n\n            ros.on('connection', () => {\n                console.log('Connected to websocket server.');\n            });\n\n            ros.on('error', (error) => {\n                console.log('Error connecting to websocket server: ', error);\n            });\n\n            ros.on('close', () => {\n                console.log('Connection to websocket server closed.');\n            });\n\n            // SLAM 데이터를 수신하여 화면에 표시\n            const mapTopic = new ROSLIB.Topic({\n                ros: ros,\n                name: '/map',\n                messageType: 'nav_msgs/OccupancyGrid'\n            });\n\n            mapTopic.subscribe((message) => {\n                console.log('Received message on /map: ', message);\n                if (mapRef.current) {\n                    const canvas = mapRef.current;\n                    const ctx = canvas.getContext('2d');\n                    const width = message.info.width;\n                    const height = message.info.height;\n                    const imageData = ctx.createImageData(width, height);\n\n                    for (let i = 0; i < message.data.length; i++) {\n                        const value = message.data[i];\n                        const color = value === -1 ? 255 : 255 - value;\n                        imageData.data[i * 4] = color;\n                        imageData.data[i * 4 + 1] = color;\n                        imageData.data[i * 4 + 2] = color;\n                        imageData.data[i * 4 + 3] = 255;\n                    }\n\n                    ctx.putImageData(imageData, 0, 0);\n                }\n            });\n\n            return () => {\n                ros.close();\n            };\n        }\n    }, [selectedRobot]);\n\n    const handleKeyDown = useCallback((e) => {\n        const velocityCommands = {\n            w: { linear: 0.1, angular: 0 },\n            a: { linear: 0, angular: 0.1 },\n            s: { linear: -0.1, angular: 0 },\n            d: { linear: 0, angular: -0.1 },\n            ' ': { linear: 0, angular: 0 }\n        };\n        if (velocityCommands[e.key]) {\n            socket.emit('key_press', { robot_id: selectedRobot, velocity: velocityCommands[e.key] });\n        }\n    }, [selectedRobot]);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [selectedRobot, handleKeyDown]);\n\n    return (\n        <div>\n            <header>\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div style={{ display: 'flex' }}>\n                <Navbar />\n            </div>\n            <h2>SLAM Control</h2>\n            <div>\n                <label>로봇 선택:</label>\n                <select onChange={(e) => setSelectedRobot(e.target.value)} value={selectedRobot}>\n                    <option value=\"\">로봇을 선택하세요</option>\n                    {robots.map(robot => (\n                        <option key={robot._id} value={robot._id}>{robot.name}</option>\n                    ))}\n                </select>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div style={{ width: '50%' }}>\n                    <h3>SLAM 화면</h3>\n                    <canvas ref={mapRef} width=\"384\" height=\"384\" />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <h3>WebCam 화면</h3>\n                    <video ref={videoRef} autoPlay playsInline />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MapCreatePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}