{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/CreateTask.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './CreateTask.css'; // 스타일을 위한 CSS 파일을 임포트\n\nfunction CreateTask({\n  onClose,\n  onTaskCreated\n}) {\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState(''); // 작업 설명 상태 추가\n\n  // JWT 토큰을 localStorage에서 가져옴\n  const token = localStorage.getItem('token');\n\n  // 작업 생성 핸들러\n  const handleCreateTask = async () => {\n    if (!taskName) {\n      alert('작업 이름을 입력해주세요.');\n      return;\n    }\n    try {\n      // 작업 생성 API 요청\n      const response = await axios.post('http://172.30.1.30:8080/task/tasks', {\n        name: taskName,\n        description: taskDescription // 작업 설명 추가\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // 토큰을 Authorization 헤더에 추가\n      });\n      onTaskCreated(response.data); // 새로운 작업을 부모 컴포넌트로 전달\n      onClose(); // 팝업 닫기\n    } catch (error) {\n      console.error('작업 생성 중 오류가 발생했습니다.', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"\\uC0C8 \\uC791\\uC5C5 \\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uC791\\uC5C5 \\uC774\\uB984\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"\\uC791\\uC5C5 \\uC124\\uBA85\",\n    value: taskDescription,\n    onChange: e => setTaskDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"\\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"\\uCDE8\\uC18C\"))));\n}\nexport default CreateTask;","map":{"version":3,"names":["React","useState","axios","CreateTask","onClose","onTaskCreated","taskName","setTaskName","taskDescription","setTaskDescription","token","localStorage","getItem","handleCreateTask","alert","response","post","name","description","headers","Authorization","data","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/CreateTask.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './CreateTask.css'; // 스타일을 위한 CSS 파일을 임포트\n\nfunction CreateTask({ onClose, onTaskCreated }) {\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState(''); // 작업 설명 상태 추가\n\n    // JWT 토큰을 localStorage에서 가져옴\n    const token = localStorage.getItem('token');\n\n    // 작업 생성 핸들러\n    const handleCreateTask = async () => {\n        if (!taskName) {\n            alert('작업 이름을 입력해주세요.');\n            return;\n        }\n\n        try {\n            // 작업 생성 API 요청\n            const response = await axios.post('http://172.30.1.30:8080/task/tasks', {\n                name: taskName,\n                description: taskDescription, // 작업 설명 추가\n            }, {\n                headers: { Authorization: `Bearer ${token}` }, // 토큰을 Authorization 헤더에 추가\n            });\n\n            onTaskCreated(response.data); // 새로운 작업을 부모 컴포넌트로 전달\n            onClose(); // 팝업 닫기\n        } catch (error) {\n            console.error('작업 생성 중 오류가 발생했습니다.', error);\n        }\n    };\n\n    return (\n        <div className=\"create-task-popup\">\n            <div className=\"create-task-content\">\n                <h3>새 작업 추가</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"작업 이름\"\n                    value={taskName}\n                    onChange={(e) => setTaskName(e.target.value)}\n                />\n                <textarea\n                    placeholder=\"작업 설명\"\n                    value={taskDescription}\n                    onChange={(e) => setTaskDescription(e.target.value)}\n                />\n                <div className=\"buttons\">\n                    <button onClick={handleCreateTask}>생성</button>\n                    <button onClick={onClose}>취소</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}