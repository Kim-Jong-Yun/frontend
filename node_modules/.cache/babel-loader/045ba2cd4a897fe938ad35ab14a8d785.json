{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotRegisterPage.js\";\nimport React, { useState } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nfunction RobotRegisterPage() {\n  const [name, setName] = useState('');\n  const [ip, setIp] = useState('');\n  const [model, setModel] = useState('');\n  const [sshUser, setSshUser] = useState(''); // sshUser 상태 추가\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (name.length < 2) {\n      alert('Robot name must be at least 2 characters long');\n      return;\n    }\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.14:5559/robot/register', {\n        name,\n        ip,\n        model,\n        sshUser\n      }, {\n        // sshUser 추가\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Robot registered successfully');\n      setName('');\n      setIp('');\n      setModel('');\n      setSshUser(''); // sshUser 상태 초기화\n    } catch (error) {\n      console.error('Error registering robot:', error);\n      alert('Failed to register robot');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Robot Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot IP\",\n    value: ip,\n    onChange: e => setIp(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot Model\",\n    value: model,\n    onChange: e => setModel(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"SSH Username\",\n    value: sshUser,\n    onChange: e => setSshUser(e.target.value) // sshUser 상태 업데이트\n    ,\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      padding: '10px 20px',\n      margin: '20px 0',\n      borderRadius: '5px',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Register Robot\")));\n}\nexport default RobotRegisterPage;","map":{"version":3,"names":["React","useState","Navbar","LogoutButton","UserInfo","axios","RobotRegisterPage","name","setName","ip","setIp","model","setModel","sshUser","setSshUser","handleRegister","e","preventDefault","token","localStorage","getItem","length","alert","post","headers","error","console","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","onSubmit","flexDirection","alignItems","type","placeholder","value","onChange","target","required","width","padding","borderRadius","border","backgroundColor","color","cursor"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotRegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction RobotRegisterPage() {\n  const [name, setName] = useState('');\n  const [ip, setIp] = useState('');\n  const [model, setModel] = useState('');\n  const [sshUser, setSshUser] = useState(''); // sshUser 상태 추가\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    \n    if (name.length < 2) {\n      alert('Robot name must be at least 2 characters long');\n      return;\n    }\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.14:5559/robot/register', { name, ip, model, sshUser }, { // sshUser 추가\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Robot registered successfully');\n      setName('');\n      setIp('');\n      setModel('');\n      setSshUser(''); // sshUser 상태 초기화\n    } catch (error) {\n      console.error('Error registering robot:', error);\n      alert('Failed to register robot');\n    }\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <div style={{ display: 'flex' }}>\n        <Navbar />\n      </div>\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Robot Register</h2>\n      <form onSubmit={handleRegister} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Robot Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Robot IP\"\n          value={ip}\n          onChange={(e) => setIp(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Robot Model\"\n          value={model}\n          onChange={(e) => setModel(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"SSH Username\"\n          value={sshUser}\n          onChange={(e) => setSshUser(e.target.value)} // sshUser 상태 업데이트\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <button type=\"submit\" style={{ padding: '10px 20px', margin: '20px 0', borderRadius: '5px', backgroundColor: '#4CAF50', color: '#fff', border: 'none', cursor: 'pointer' }}>\n          Register Robot\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default RobotRegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}