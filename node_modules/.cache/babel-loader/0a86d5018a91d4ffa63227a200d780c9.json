{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css';\nimport RobotRegisterPage from './RobotRegisterPage';\nfunction RobotEditPage() {\n  var _selectedRobot$status, _selectedRobot$status2;\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [ip, setIp] = useState(''); // IP 주소 상태 추가\n  const [active, setActive] = useState(1);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [workflowQueue, setWorkflowQueue] = useState([]); // 작업 큐 상태 추가\n  const [currentWorkflow, setCurrentWorkflow] = useState(null); // currentWorkflow 상태 추가\n  const [selectedRobotId, setSelectedRobotId] = useState(null); // 선택한 로봇의 _id 상태 추가\n  const [pendingWorkflowDeletions, setPendingWorkflowDeletions] = useState([]); // 워크플로우 삭제 대기 목록\n  const [isSaving, setIsSaving] = useState(false); // Save 버튼 상태 관리\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n  const fetchRobots = async (preserveSelectedRobotId = null) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.33:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n      if (preserveSelectedRobotId) {\n        const selected = response.data.find(robot => robot._id === preserveSelectedRobotId);\n        if (selected) {\n          setSelectedRobot(selected);\n          setSelectedRobotId(selected._id); // 선택한 로봇의 _id 저장\n          setName(selected.name);\n          setDescription(selected.description);\n          setIp(selected.ip); // IP 주소 상태 설정\n          setActive(selected.active);\n          fetchWorkflowQueue(selected._id); // 작업 큐 불러오기\n        }\n      } else if (response.data.length > 0) {\n        const firstRobot = response.data[0];\n        setSelectedRobot(firstRobot);\n        setSelectedRobotId(firstRobot._id); // 첫 번째 로봇의 _id 저장\n        setName(firstRobot.name);\n        setDescription(firstRobot.description);\n        setIp(firstRobot.ip); // IP 주소 상태 설정\n        setActive(firstRobot.active);\n        fetchWorkflowQueue(firstRobot._id); // 작업 큐 불러오기\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n      alert('Error fetching robots.');\n    }\n  };\n\n  // 특정 robotId에 해당하는 작업 큐 불러오기\n  const fetchWorkflowQueue = async robotId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5559/robot/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setCurrentWorkflow(response.data.currentWorkflow || null); // currentWorkflow 설정\n      setWorkflowQueue(response.data.workflows || []); // 작업 큐의 workflows 배열 저장\n    } catch (error) {\n      console.error('Error fetching workflow queue:', error);\n      alert('Error fetching workflow queue.');\n    }\n  };\n  const handleSelectRobot = robot => {\n    setSelectedRobot(robot);\n    setSelectedRobotId(robot._id); // 선택한 로봇의 _id 저장\n    setName(robot.name);\n    setDescription(robot.description);\n    setIp(robot.ip); // IP 주소 상태 설정\n    setActive(robot.active);\n    fetchWorkflowQueue(robot._id); // 작업 큐 불러오기\n    setCurrentWorkflow(robot.currentWorkflow || null); // 새로운 로봇 선택 시 currentWorkflow 설정\n    setPendingWorkflowDeletions([]); // 새로운 로봇 선택 시 이전 삭제 요청 초기화\n  };\n  const handleToggleActive = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.33:5559/robot/toggleActive/${selectedRobot._id}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('Error toggling active status:', error);\n      alert('Error toggling active status.');\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    // IP 주소 유효성 검사 (간단한 예제)\n    const ipRegex = /^(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)$/;\n    if (!ipRegex.test(ip)) {\n      alert('유효한 IP 주소를 입력해주세요.');\n      return;\n    }\n    setIsSaving(true); // Save 시작\n\n    try {\n      // 로봇 정보 업데이트\n      await axios.put(`http://172.30.1.33:5559/robot/update/${selectedRobot._id}`, {\n        name,\n        description,\n        ip // IP 주소 포함\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // 워크플로우 삭제 요청\n      if (pendingWorkflowDeletions.length > 0) {\n        const deleteWorkflowPromises = pendingWorkflowDeletions.map(workflowId => axios.delete(`http://172.30.1.33:5559/robot/${selectedRobotId}/workflows/${workflowId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }));\n        await Promise.all(deleteWorkflowPromises);\n      }\n\n      // 성공적으로 업데이트 및 삭제 후 데이터 재조회\n      fetchRobots(selectedRobot._id);\n      alert('Robot updated successfully.');\n      setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating robot:', error);\n      alert(`Error updating robot: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setIsSaving(false); // Save 종료\n    }\n  };\n\n  // 플로팅 Delete 버튼 핸들러 (즉시 삭제)\n  const handleDelete = async () => {\n    if (selectedRobot) {\n      const confirmDelete = window.confirm(`Are you sure you want to delete robot \"${selectedRobot.name}\"? This action cannot be undone.`);\n      if (!confirmDelete) return;\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('No token found, please log in again.');\n        return;\n      }\n      setIsSaving(true); // 삭제 진행 중 표시\n\n      try {\n        await axios.put(`http://172.30.1.33:5559/robot/unregister/${selectedRobot._id}`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        alert('Robot deleted successfully.');\n        // 로봇 목록에서 삭제된 로봇 제거\n        setRobots(prevRobots => prevRobots.filter(robot => robot._id !== selectedRobot._id));\n        // 선택된 로봇 초기화\n        setSelectedRobot(null);\n        setSelectedRobotId(null);\n        setName('');\n        setDescription('');\n        setIp('');\n        setActive(1);\n        setWorkflowQueue([]);\n        setCurrentWorkflow(null); // currentWorkflow 초기화\n        setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error deleting robot:', error);\n        alert(`Error deleting robot: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n      } finally {\n        setIsSaving(false); // 삭제 종료\n      }\n    }\n  };\n\n  // 워크플로우 삭제 핸들러 (프론트엔드에서만 삭제하고 임시 저장)\n  const handleDeleteWorkflow = workflowId => {\n    if (window.confirm('임시로 삭제하시겠습니까? 저장 시 최종 반영됩니다.')) {\n      // 워크플로우를 workflowQueue에서 제거\n      setWorkflowQueue(prevQueue => prevQueue.filter(workflow => workflow._id !== workflowId));\n      // 삭제 대기 목록에 워크플로우 ID 추가\n      setPendingWorkflowDeletions(prev => [...prev, workflowId]);\n    }\n  };\n  const totalRobots = robots.length;\n  const activeRobots = robots.filter(robot => robot.active === 1).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"AMR\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '18px',\n      color: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, activeRobots, \"/\", totalRobots, \" Act\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowRegisterModal(true),\n    style: {\n      padding: '5px 10px',\n      borderRadius: '50%',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginLeft: 'auto'\n    },\n    \"aria-label\": \"Register New Robot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"robot-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    onClick: () => handleSelectRobot(robot),\n    className: selectedRobotId === robot._id ? 'selected' : '',\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, robot.name, \" - \", robot.ip), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray',\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, robot.active === 1 ? 'Act' : 'Inact'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, selectedRobot ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"robot-form\",\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 39\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    className: \"input-field\",\n    placeholder: \"Enter robot name\",\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '20px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, \"\\uBC30\\uD130\\uB9AC \", ((_selectedRobot$status = selectedRobot.status) === null || _selectedRobot$status === void 0 ? void 0 : _selectedRobot$status.battery) || 0, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 46\n    }\n  }, \"\\uC124\\uBA85\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    rows: \"4\",\n    className: \"input-field\",\n    placeholder: \"Enter robot description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 37\n    }\n  }, \"IP \\uC8FC\\uC18C\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"ip\",\n    type: \"text\",\n    value: ip,\n    onChange: e => setIp(e.target.value),\n    required: true,\n    className: \"input-field\",\n    placeholder: \"Enter robot IP address\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 22\n    }\n  }, \"\\uBAA8\\uB378\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }, selectedRobot.model)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 22\n    }\n  }, \"\\uC0C1\\uD0DC\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, ((_selectedRobot$status2 = selectedRobot.status) === null || _selectedRobot$status2 === void 0 ? void 0 : _selectedRobot$status2.state) || 'Unknown')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 22\n    }\n  }, \"\\uB4F1\\uB85D\\uC77C\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }, new Date(selectedRobot.createdAt).toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 24\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: active === 1,\n    onChange: handleToggleActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `robot-flow-item current-workflow ${currentWorkflow ? 'active' : 'inactive'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workflow-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }, (currentWorkflow === null || currentWorkflow === void 0 ? void 0 : currentWorkflow.node) || 'N/A'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, (currentWorkflow === null || currentWorkflow === void 0 ? void 0 : currentWorkflow.step) || 'N/A'), /*#__PURE__*/React.createElement(\"div\", {\n    className: `workflow-status-${(currentWorkflow === null || currentWorkflow === void 0 ? void 0 : currentWorkflow.status.replace(' ', '-').toLowerCase()) || 'none'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 25\n    }\n  }, (currentWorkflow === null || currentWorkflow === void 0 ? void 0 : currentWorkflow.status) || 'None'))), workflowQueue.length > 0 ? workflowQueue.map(workflow => /*#__PURE__*/React.createElement(\"div\", {\n    key: workflow._id,\n    className: \"robot-flow-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteWorkflow(workflow._id),\n    className: \"delete-button\",\n    title: \"Delete Workflow\",\n    \"aria-label\": `Delete workflow ${workflow.node} - ${workflow.step}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 27\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workflow-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 29\n    }\n  }, workflow.node), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 29\n    }\n  }, workflow.step), /*#__PURE__*/React.createElement(\"div\", {\n    className: `workflow-status-${workflow.status.replace(' ', '-').toLowerCase()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 29\n    }\n  }, workflow.status)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 23\n    }\n  }, \"No workflow steps assigned.\"))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, \"Please select a robot to view and edit details\"))), showRegisterModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowRegisterModal(false),\n    style: {\n      position: 'absolute',\n      top: '10px',\n      right: '10px',\n      background: 'transparent',\n      border: 'none',\n      fontSize: '18px',\n      cursor: 'pointer'\n    },\n    \"aria-label\": \"Close Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(RobotRegisterPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }))), selectedRobot ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-delete-button\",\n    onClick: handleDelete,\n    disabled: isSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, isSaving ? 'Deleting...' : 'DELETE'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-save-button\",\n    onClick: handleUpdate,\n    disabled: isSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, isSaving ? 'Saving...' : 'SAVE')) : null);\n}\nexport default RobotEditPage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","RobotRegisterPage","RobotEditPage","_selectedRobot$status","_selectedRobot$status2","robots","setRobots","selectedRobot","setSelectedRobot","name","setName","description","setDescription","ip","setIp","active","setActive","showRegisterModal","setShowRegisterModal","workflowQueue","setWorkflowQueue","currentWorkflow","setCurrentWorkflow","selectedRobotId","setSelectedRobotId","pendingWorkflowDeletions","setPendingWorkflowDeletions","isSaving","setIsSaving","fetchRobots","preserveSelectedRobotId","token","localStorage","getItem","alert","response","get","headers","data","selected","find","robot","_id","fetchWorkflowQueue","length","firstRobot","error","console","robotId","workflows","handleSelectRobot","handleToggleActive","put","handleUpdate","e","preventDefault","ipRegex","test","deleteWorkflowPromises","map","workflowId","delete","Promise","all","_error$response","_error$response$data","message","handleDelete","confirmDelete","window","confirm","prevRobots","filter","_error$response2","_error$response2$data","handleDeleteWorkflow","prevQueue","workflow","prev","totalRobots","activeRobots","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","marginRight","fontSize","color","onClick","padding","borderRadius","backgroundColor","border","cursor","marginLeft","key","justifyContent","onSubmit","htmlFor","id","type","value","onChange","target","required","placeholder","width","fontWeight","status","battery","rows","model","state","Date","createdAt","toLocaleString","marginTop","checked","node","step","replace","toLowerCase","title","position","top","right","background","disabled"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css';\nimport RobotRegisterPage from './RobotRegisterPage';\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [ip, setIp] = useState(''); // IP 주소 상태 추가\n  const [active, setActive] = useState(1);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [workflowQueue, setWorkflowQueue] = useState([]); // 작업 큐 상태 추가\n  const [currentWorkflow, setCurrentWorkflow] = useState(null); // currentWorkflow 상태 추가\n  const [selectedRobotId, setSelectedRobotId] = useState(null); // 선택한 로봇의 _id 상태 추가\n  const [pendingWorkflowDeletions, setPendingWorkflowDeletions] = useState([]); // 워크플로우 삭제 대기 목록\n  const [isSaving, setIsSaving] = useState(false); // Save 버튼 상태 관리\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n\n  const fetchRobots = async (preserveSelectedRobotId = null) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.33:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      if (preserveSelectedRobotId) {\n        const selected = response.data.find(robot => robot._id === preserveSelectedRobotId);\n        if (selected) {\n          setSelectedRobot(selected);\n          setSelectedRobotId(selected._id); // 선택한 로봇의 _id 저장\n          setName(selected.name);\n          setDescription(selected.description);\n          setIp(selected.ip); // IP 주소 상태 설정\n          setActive(selected.active);\n          fetchWorkflowQueue(selected._id); // 작업 큐 불러오기\n        }\n      } else if (response.data.length > 0) {\n        const firstRobot = response.data[0];\n        setSelectedRobot(firstRobot);\n        setSelectedRobotId(firstRobot._id); // 첫 번째 로봇의 _id 저장\n        setName(firstRobot.name);\n        setDescription(firstRobot.description);\n        setIp(firstRobot.ip); // IP 주소 상태 설정\n        setActive(firstRobot.active);\n        fetchWorkflowQueue(firstRobot._id); // 작업 큐 불러오기\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n      alert('Error fetching robots.');\n    }\n  };\n\n  // 특정 robotId에 해당하는 작업 큐 불러오기\n  const fetchWorkflowQueue = async (robotId) => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`http://172.30.1.33:5559/robot/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setCurrentWorkflow(response.data.currentWorkflow || null); // currentWorkflow 설정\n      setWorkflowQueue(response.data.workflows || []); // 작업 큐의 workflows 배열 저장\n    } catch (error) {\n      console.error('Error fetching workflow queue:', error);\n      alert('Error fetching workflow queue.');\n    }\n  };\n\n  const handleSelectRobot = (robot) => {\n    setSelectedRobot(robot);\n    setSelectedRobotId(robot._id); // 선택한 로봇의 _id 저장\n    setName(robot.name);\n    setDescription(robot.description);\n    setIp(robot.ip); // IP 주소 상태 설정\n    setActive(robot.active);\n    fetchWorkflowQueue(robot._id); // 작업 큐 불러오기\n    setCurrentWorkflow(robot.currentWorkflow || null); // 새로운 로봇 선택 시 currentWorkflow 설정\n    setPendingWorkflowDeletions([]); // 새로운 로봇 선택 시 이전 삭제 요청 초기화\n  };\n\n  const handleToggleActive = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.put(\n        `http://172.30.1.33:5559/robot/toggleActive/${selectedRobot._id}`,\n        {},\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('Error toggling active status:', error);\n      alert('Error toggling active status.');\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    // IP 주소 유효성 검사 (간단한 예제)\n    const ipRegex = /^(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)$/;\n    if (!ipRegex.test(ip)) {\n      alert('유효한 IP 주소를 입력해주세요.');\n      return;\n    }\n\n    setIsSaving(true); // Save 시작\n\n    try {\n      // 로봇 정보 업데이트\n      await axios.put(`http://172.30.1.33:5559/robot/update/${selectedRobot._id}`, {\n        name,\n        description,\n        ip // IP 주소 포함\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // 워크플로우 삭제 요청\n      if (pendingWorkflowDeletions.length > 0) {\n        const deleteWorkflowPromises = pendingWorkflowDeletions.map(workflowId =>\n          axios.delete(`http://172.30.1.33:5559/robot/${selectedRobotId}/workflows/${workflowId}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n        );\n\n        await Promise.all(deleteWorkflowPromises);\n      }\n\n      // 성공적으로 업데이트 및 삭제 후 데이터 재조회\n      fetchRobots(selectedRobot._id);\n      alert('Robot updated successfully.');\n      setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n    } catch (error) {\n      console.error('Error updating robot:', error);\n      alert(`Error updating robot: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setIsSaving(false); // Save 종료\n    }\n  };\n\n  // 플로팅 Delete 버튼 핸들러 (즉시 삭제)\n  const handleDelete = async () => {\n    if (selectedRobot) {\n      const confirmDelete = window.confirm(`Are you sure you want to delete robot \"${selectedRobot.name}\"? This action cannot be undone.`);\n      if (!confirmDelete) return;\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('No token found, please log in again.');\n        return;\n      }\n\n      setIsSaving(true); // 삭제 진행 중 표시\n\n      try {\n        await axios.put(`http://172.30.1.33:5559/robot/unregister/${selectedRobot._id}`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        alert('Robot deleted successfully.');\n        // 로봇 목록에서 삭제된 로봇 제거\n        setRobots(prevRobots => prevRobots.filter(robot => robot._id !== selectedRobot._id));\n        // 선택된 로봇 초기화\n        setSelectedRobot(null);\n        setSelectedRobotId(null);\n        setName('');\n        setDescription('');\n        setIp('');\n        setActive(1);\n        setWorkflowQueue([]);\n        setCurrentWorkflow(null); // currentWorkflow 초기화\n        setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n      } catch (error) {\n        console.error('Error deleting robot:', error);\n        alert(`Error deleting robot: ${error.response?.data?.message || error.message}`);\n      } finally {\n        setIsSaving(false); // 삭제 종료\n      }\n    }\n  };\n\n  // 워크플로우 삭제 핸들러 (프론트엔드에서만 삭제하고 임시 저장)\n  const handleDeleteWorkflow = (workflowId) => {\n    if (window.confirm('임시로 삭제하시겠습니까? 저장 시 최종 반영됩니다.')) {\n      // 워크플로우를 workflowQueue에서 제거\n      setWorkflowQueue(prevQueue => prevQueue.filter(workflow => workflow._id !== workflowId));\n      // 삭제 대기 목록에 워크플로우 ID 추가\n      setPendingWorkflowDeletions(prev => [...prev, workflowId]);\n    }\n  };\n\n  const totalRobots = robots.length;\n  const activeRobots = robots.filter(robot => robot.active === 1).length;\n\n  return (\n    <div className=\"robot-edit-page\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"robot-list-container\">\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <h3 style={{ marginRight: '10px' }}>AMR</h3>\n            <span style={{ fontSize: '18px', color: 'gray' }}>\n              {activeRobots}/{totalRobots} Act\n            </span>\n            <button\n              onClick={() => setShowRegisterModal(true)}\n              style={{\n                padding: '5px 10px',\n                borderRadius: '50%',\n                backgroundColor: '#4CAF50',\n                color: '#fff',\n                border: 'none',\n                cursor: 'pointer',\n                fontSize: '16px',\n                marginLeft: 'auto'\n              }}\n              aria-label=\"Register New Robot\"\n            >\n              +\n            </button>\n          </div>\n          <ul className=\"robot-list\">\n            {robots.map((robot) => (\n              <li\n                key={robot._id}\n                onClick={() => handleSelectRobot(robot)}\n                className={selectedRobotId === robot._id ? 'selected' : ''}\n                style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n              >\n                <span>\n                  {robot.name} - {robot.ip}\n                </span>\n                <span style={{ color: 'gray', marginLeft: '10px' }}>\n                  {robot.active === 1 ? 'Act' : 'Inact'}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"robot-details-container\">\n          {selectedRobot ? (\n            <form className=\"robot-form\" onSubmit={handleUpdate}>\n              <div className=\"robot-field\">\n                <label htmlFor=\"name\"><strong>Name</strong></label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                  className=\"input-field\"\n                  placeholder=\"Enter robot name\"\n                  style={{ width: '50%' }}\n                />\n                <span style={{ marginLeft: '20px', fontWeight: 'bold' }}>\n                  배터리 {selectedRobot.status?.battery || 0}%\n                </span>\n              </div>\n              <div className=\"robot-field\">\n                <label htmlFor=\"description\"><strong>설명</strong></label>\n                <textarea\n                  id=\"description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  rows=\"4\"\n                  className=\"input-field\"\n                  placeholder=\"Enter robot description\"\n                />\n              </div>\n              <div className=\"robot-field\">\n                <label htmlFor=\"ip\"><strong>IP 주소</strong></label>\n                <input\n                  id=\"ip\"\n                  type=\"text\"\n                  value={ip}\n                  onChange={(e) => setIp(e.target.value)}\n                  required\n                  className=\"input-field\"\n                  placeholder=\"Enter robot IP address\"\n                  style={{ width: '10%' }}\n                />\n              </div>\n\n              <div className=\"robot-info\">\n                <div>\n                  <p><strong>모델</strong></p>\n                  <p>{selectedRobot.model}</p>\n                </div>\n                <div>\n                  <p><strong>상태</strong></p>\n                  <p>{selectedRobot.status?.state || 'Unknown'}</p>\n                </div>\n                <div>\n                  <p><strong>등록일</strong></p>\n                  <p>{new Date(selectedRobot.createdAt).toLocaleString()}</p>\n                </div>\n              </div>\n\n              <div className=\"robot-field\">\n                <label><strong>Active</strong></label>\n                <div style={{ marginTop: '10px' }}>\n                  <label className=\"switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={active === 1}\n                      onChange={handleToggleActive}\n                    />\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n\n              {/* 작업 플로우 디자인에 currentWorkflow를 첫 번째로 표시 */}\n              <div className=\"robot-flow-container\">\n                <div className=\"robot-flow-background\">\n                  <div className=\"robot-flow-list\">\n                    {/* currentWorkflow 항목 */}\n                    <div className={`robot-flow-item current-workflow ${currentWorkflow ? 'active' : 'inactive'}`}>\n                      {/* 삭제 버튼 제거 */}\n                      <div className=\"workflow-details\">\n                        <strong>{currentWorkflow?.node || 'N/A'}</strong>\n                        <div>{currentWorkflow?.step || 'N/A'}</div>\n                        <div className={`workflow-status-${currentWorkflow?.status.replace(' ', '-').toLowerCase() || 'none'}`}>\n                          {currentWorkflow?.status || 'None'}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* 나머지 workflowQueue 항목 */}\n                    {workflowQueue.length > 0 ? (\n                      workflowQueue.map((workflow) => (\n                        <div key={workflow._id} className=\"robot-flow-item\">\n                          {/* 삭제 버튼 (x 아이콘) 추가 */}\n                          <button\n                            onClick={() => handleDeleteWorkflow(workflow._id)}\n                            className=\"delete-button\"\n                            title=\"Delete Workflow\"\n                            aria-label={`Delete workflow ${workflow.node} - ${workflow.step}`}\n                          >\n                            ×\n                          </button>\n                          <div className=\"workflow-details\">\n                            <strong>{workflow.node}</strong>\n                            <div>{workflow.step}</div>\n                            <div className={`workflow-status-${workflow.status.replace(' ', '-').toLowerCase()}`}>\n                              {workflow.status}\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <p>No workflow steps assigned.</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* 추가적인 작업 플로우 기능을 원할 경우 여기에 구현 */}\n            </form>\n          ) : (\n            <p>Please select a robot to view and edit details</p>\n          )}\n        </div>\n      </div>\n\n      {showRegisterModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <button\n              onClick={() => setShowRegisterModal(false)}\n              style={{ position: 'absolute', top: '10px', right: '10px', background: 'transparent', border: 'none', fontSize: '18px', cursor: 'pointer' }}\n              aria-label=\"Close Modal\"\n            >\n              &times;\n            </button>\n            <RobotRegisterPage />\n          </div>\n        </div>\n      )}\n\n      {selectedRobot ? (\n        <div className=\"floating-buttons\">\n          <button\n            className=\"floating-delete-button\"\n            onClick={handleDelete}\n            disabled={isSaving}\n          >\n            {isSaving ? 'Deleting...' : 'DELETE'}\n          </button>\n          <button\n            className=\"floating-save-button\"\n            onClick={handleUpdate}\n            disabled={isSaving}\n          >\n            {isSaving ? 'Saving...' : 'SAVE'}\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default RobotEditPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}