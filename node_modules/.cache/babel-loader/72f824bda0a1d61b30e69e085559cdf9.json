{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js\";\nimport React, { useState } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nconst TaskFormPage = () => {\n  // 입력 필드를 위한 상태 관리\n  const [name, setName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [robotId, setRobotId] = useState('');\n  const [status, setStatus] = useState('Pending'); // 기본값 'Pending'\n  const [message, setMessage] = useState('');\n\n  // 작업 생성 API 요청\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token'); // 인증 토큰 가져오기\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const taskData = {\n      name,\n      taskType,\n      robotId,\n      status\n    };\n    try {\n      // API 호출을 통해 작업 생성 요청\n      const response = await axios.post('http://172.30.1.28:5559/api/tasks/create', taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage('Task created successfully!');\n      setName('');\n      setTaskType('');\n      setRobotId('');\n      setStatus('Pending'); // 기본 상태로 리셋\n    } catch (error) {\n      setMessage('Failed to create task.');\n      console.error('Error creating task:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Type\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot ID\",\n    value: robotId,\n    onChange: e => setRobotId(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: status,\n    onChange: e => setStatus(e.target.value),\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"In Progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Failed\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      padding: '10px 20px',\n      borderRadius: '5px',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Create Task\")), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, message));\n};\nexport default TaskFormPage;","map":{"version":3,"names":["React","useState","Navbar","LogoutButton","UserInfo","axios","TaskFormPage","name","setName","taskType","setTaskType","robotId","setRobotId","status","setStatus","message","setMessage","handleSubmit","e","preventDefault","token","localStorage","getItem","alert","taskData","response","post","headers","error","console","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","onSubmit","flexDirection","alignItems","type","placeholder","value","onChange","target","required","width","padding","borderRadius","border","backgroundColor","color","cursor"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nconst TaskFormPage = () => {\n  // 입력 필드를 위한 상태 관리\n  const [name, setName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [robotId, setRobotId] = useState('');\n  const [status, setStatus] = useState('Pending'); // 기본값 'Pending'\n  const [message, setMessage] = useState('');\n\n  // 작업 생성 API 요청\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('token'); // 인증 토큰 가져오기\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    const taskData = {\n      name,\n      taskType,\n      robotId,\n      status\n    };\n\n    try {\n      // API 호출을 통해 작업 생성 요청\n      const response = await axios.post('http://172.30.1.28:5559/api/tasks/create', taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage('Task created successfully!');\n      setName('');\n      setTaskType('');\n      setRobotId('');\n      setStatus('Pending'); // 기본 상태로 리셋\n    } catch (error) {\n      setMessage('Failed to create task.');\n      console.error('Error creating task:', error);\n    }\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <div style={{ display: 'flex' }}>\n        <Navbar />\n      </div>\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Create New Task</h2>\n      <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Task Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Task Type\"\n          value={taskType}\n          onChange={(e) => setTaskType(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Robot ID\"\n          value={robotId}\n          onChange={(e) => setRobotId(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <select value={status} onChange={(e) => setStatus(e.target.value)} style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}>\n          <option value=\"Pending\">Pending</option>\n          <option value=\"In Progress\">In Progress</option>\n          <option value=\"Completed\">Completed</option>\n          <option value=\"Failed\">Failed</option>\n        </select>\n        <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '5px', backgroundColor: '#4CAF50', color: '#fff', border: 'none', cursor: 'pointer' }}>\n          Create Task\n        </button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default TaskFormPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}