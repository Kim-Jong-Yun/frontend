{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './TestPage.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [selectedTask, setSelectedTask] = useState('');\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']);\n  const mapCanvasRef = useRef(null); // 지도 캔버스 레퍼런스\n  const robotsCanvasRef = useRef(null); // 로봇 캔버스 레퍼런스\n  const [mapImage, setMapImage] = useState(null);\n  const [mapResolution, setMapResolution] = useState(0.05);\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [lastMousePos, setLastMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [expandedRobotId, setExpandedRobotId] = useState(null);\n\n  // 데이터 초기화 및 WebSocket 설정\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      fetchRobots();\n      fetchAllTasks();\n    };\n    fetchData();\n    const socket = new WebSocket('ws://your-websocket-url'); // 실제 WebSocket URL로 변경\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n    socket.onmessage = event => {\n      console.log('WebSocket 메시지 수신:', event.data); // 디버깅용\n      try {\n        const updatedRobots = JSON.parse(event.data);\n        setRobots(updatedRobots);\n        // 로봇 그리기만 호출\n        drawRobots();\n      } catch (err) {\n        console.error('로봇 데이터 파싱 오류:', err);\n      }\n    };\n    socket.onerror = error => {\n      console.error('WebSocket 오류:', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n    return () => {\n      socket.close();\n    };\n  }, [mapImage, dragOffset.x, dragOffset.y]);\n\n  // 지도 그리기 useEffect\n  useEffect(() => {\n    drawMap();\n  }, [mapUrl, mapDimensions, dragOffset]);\n\n  // 로봇 그리기 useEffect\n  useEffect(() => {\n    drawRobots();\n  }, [robots, dragOffset]);\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login';\n      return null;\n    }\n    return token;\n  };\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      console.log('지도 메타데이터:', metadata); // 디버깅용\n\n      // metadata가 객체인지 문자열인지 확인\n      let resolution;\n      if (typeof metadata === 'object' && metadata.resolution) {\n        resolution = parseFloat(metadata.resolution);\n      } else if (typeof metadata === 'string') {\n        const match = metadata.match(/resolution:\\s*(\\d+(\\.\\d+)?)/);\n        if (match && match[1]) {\n          resolution = parseFloat(match[1]);\n        }\n      }\n      if (resolution) {\n        console.log('지도 해상도:', resolution); // 디버깅용\n        setMapResolution(resolution);\n      } else {\n        console.error('지도 해상도 정보를 찾을 수 없습니다.');\n      }\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      console.log('지도 URL:', url); // 디버깅용\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        console.log('지도 이미지 로드 완료'); // 디버깅용\n        setMapImage(img);\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n        drawMap(); // 지도 캔버스만 그리기\n        drawRobots(); // 초기 로봇 위치 그리기\n      };\n      img.onerror = err => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n  const fetchAllTasks = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n  const fetchRobots = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n      // drawRobots(); // 이미 useEffect에서 호출됨\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n  const toggleExpand = robotId => {\n    if (expandedRobotId === robotId) {\n      setExpandedRobotId(null);\n    } else {\n      setExpandedRobotId(robotId);\n    }\n  };\n  const openPopup = robot => {\n    setSelectedRobot(robot);\n    setIsPopupOpen(true);\n  };\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  const handleTaskChange = event => {\n    setSelectedTask(event.target.value);\n  };\n  const formatDate = date => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n  const drawMap = () => {\n    const mapCanvas = mapCanvasRef.current;\n    if (!mapCanvas) {\n      console.error('mapCanvasRef가 참조되지 않습니다.');\n      return;\n    }\n    const ctx = mapCanvas.getContext('2d');\n    ctx.clearRect(0, 0, mapCanvas.width, mapCanvas.height);\n    if (mapImage) {\n      ctx.drawImage(mapImage, dragOffset.x, dragOffset.y, mapImage.width, mapImage.height);\n      console.log('지도 그리기 완료'); // 디버깅용\n    } else {\n      console.warn('mapImage가 존재하지 않습니다.');\n    }\n  };\n  const drawRobots = () => {\n    const robotsCanvas = robotsCanvasRef.current;\n    if (!robotsCanvas) {\n      console.error('robotsCanvasRef가 참조되지 않습니다.');\n      return;\n    }\n    const ctx = robotsCanvas.getContext('2d');\n    ctx.clearRect(0, 0, robotsCanvas.width, robotsCanvas.height);\n    robots.forEach(robot => {\n      var _robot$status, _robot$status2, _robot$status3;\n      const {\n        x,\n        y\n      } = robot.location;\n      const {\n        mapX,\n        mapY\n      } = worldToMap(x, y, mapCanvasRef.current.width, mapCanvasRef.current.height, dragOffset.x, dragOffset.y, mapImage.width, mapImage.height, mapResolution);\n      if (isNaN(mapX) || isNaN(mapY)) {\n        console.warn(`로봇 ${robot.name}의 좌표가 유효하지 않습니다: x=${x}, y=${y}`);\n        return;\n      }\n      let robotColor = 'gray';\n      if (((_robot$status = robot.status) === null || _robot$status === void 0 ? void 0 : _robot$status.state) === 'Tasking') {\n        robotColor = 'blue';\n      } else if (((_robot$status2 = robot.status) === null || _robot$status2 === void 0 ? void 0 : _robot$status2.state) === 'Waiting') {\n        robotColor = 'yellow';\n      } else if (((_robot$status3 = robot.status) === null || _robot$status3 === void 0 ? void 0 : _robot$status3.state) === 'Error') {\n        robotColor = 'red';\n      }\n      ctx.fillStyle = robotColor;\n      ctx.beginPath();\n      ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n    console.log('로봇 그리기 완료'); // 디버깅용\n  };\n  const worldToMap = (x, y, mapWidth, mapHeight, offsetX, offsetY, imgWidth, imgHeight, resolution) => {\n    console.log('좌표 변환:', {\n      x,\n      y,\n      resolution\n    }); // 디버깅용\n    const mapX = x / resolution + mapWidth / 2 + offsetX;\n    const mapY = mapHeight - (y / resolution + mapHeight / 2) + offsetY;\n    console.log('변환된 좌표:', {\n      mapX,\n      mapY\n    }); // 디버깅용\n    return {\n      mapX,\n      mapY\n    };\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleMouseMove = e => {\n    if (dragging && mapImage) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n      let newOffsetX = dragOffset.x + deltaX;\n      let newOffsetY = dragOffset.y + deltaY;\n\n      // 지도 이동 제한\n      newOffsetX = Math.min(0, Math.max(mapCanvasRef.current.width - mapImage.width, newOffsetX));\n      newOffsetY = Math.min(0, Math.max(mapCanvasRef.current.height - mapImage.height, newOffsetY));\n      setDragOffset({\n        x: newOffsetX,\n        y: newOffsetY\n      });\n      setLastMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n      // 지도와 로봇을 다시 그립니다.\n      drawMap();\n      drawRobots();\n    }\n  };\n  const handleMouseUp = () => setDragging(false);\n  const handleMouseLeave = () => setDragging(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: mapCanvasRef,\n    width: \"800\",\n    height: \"600\",\n    className: \"map-canvas\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: robotsCanvasRef,\n    width: \"800\",\n    height: \"600\",\n    className: \"robots-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, \"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uBD07 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, robots.length > 0 ? robots.map(robot => {\n    var _robot$status4, _robot$status5, _robot$status6;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: robot._id,\n      className: \"robot-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 27\n      }\n    }, \"\\uC774\\uB984:\"), \" \", robot.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 27\n      }\n    }, \"\\uC0C1\\uD0DC:\"), \" \", ((_robot$status4 = robot.status) === null || _robot$status4 === void 0 ? void 0 : _robot$status4.state) || 'Unknown'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 27\n      }\n    }, \"\\uBC30\\uD130\\uB9AC:\"), \" \", ((_robot$status5 = robot.status) === null || _robot$status5 === void 0 ? void 0 : _robot$status5.battery) || 'N/A', \"%\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => toggleExpand(robot._id),\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, expandedRobotId === robot._id ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 56\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 96\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `robot-details ${expandedRobotId === robot._id ? 'expanded' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 24\n      }\n    }, \"IP:\"), \" \", robot.ip), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 24\n      }\n    }, \"\\uC704\\uCE58:\"), \" x: \", robot.location.x, \", y: \", robot.location.y), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 24\n      }\n    }, \"\\uC18D\\uB3C4:\"), \" \", ((_robot$status6 = robot.status) === null || _robot$status6 === void 0 ? void 0 : _robot$status6.speed) || 'N/A', \" m/s\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 23\n      }\n    }, \"job\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => openPopup(robot),\n      style: {\n        background: 'none',\n        border: '1px solid #ccc',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 23\n      }\n    }, \"+\"))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, \"\\uC5F0\\uACB0\\uB41C \\uB85C\\uBD07\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))), isPopupOpen && selectedRobot && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC5C5 \\uC120\\uD0DD - \", selectedRobot.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 15\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedTask,\n    onChange: handleTaskChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, \"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"), availableTasks.map((task, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 21\n    }\n  }, task))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"popup-close-button\",\n    onClick: closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, \"\\uB2EB\\uAE30\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-log-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-log-table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"task-log-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07 IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uD0DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uC791 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, \"\\uC885\\uB8CC \\uC2DC\\uAC04\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }, task.robotIp), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, task.taskType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, formatDate(task.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, formatDate(task.endTime)))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    style: {\n      textAlign: 'center',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))))));\n}\nexport default TestPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","LogoutButton","UserInfo","axios","TestPage","mapUrl","setMapUrl","robots","setRobots","tasks","setTasks","isPopupOpen","setIsPopupOpen","selectedRobot","setSelectedRobot","selectedTask","setSelectedTask","availableTasks","setAvailableTasks","mapCanvasRef","robotsCanvasRef","mapImage","setMapImage","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","dragging","setDragging","dragOffset","setDragOffset","x","y","lastMousePos","setLastMousePos","expandedRobotId","setExpandedRobotId","fetchData","fetchMapMetadata","fetchMonitoredMap","fetchRobots","fetchAllTasks","socket","WebSocket","onopen","console","log","onmessage","event","data","updatedRobots","JSON","parse","drawRobots","err","error","onerror","onclose","close","drawMap","getToken","token","localStorage","getItem","alert","window","location","href","response","get","headers","Authorization","metadata","resolution","parseFloat","match","responseType","url","URL","createObjectURL","img","Image","src","onload","toggleExpand","robotId","openPopup","robot","closePopup","handleTaskChange","target","value","formatDate","date","parsedDate","Date","isNaN","toLocaleString","mapCanvas","current","ctx","getContext","clearRect","drawImage","warn","robotsCanvas","forEach","_robot$status","_robot$status2","_robot$status3","mapX","mapY","worldToMap","name","robotColor","status","state","fillStyle","beginPath","arc","Math","PI","fill","mapWidth","mapHeight","offsetX","offsetY","imgWidth","imgHeight","handleMouseDown","e","clientX","clientY","handleMouseMove","deltaX","deltaY","newOffsetX","newOffsetY","min","max","handleMouseUp","handleMouseLeave","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","listStyleType","padding","length","map","_robot$status4","_robot$status5","_robot$status6","key","_id","display","justifyContent","alignItems","battery","onClick","background","border","cursor","fontSize","ip","speed","stopPropagation","onChange","task","index","robotIp","taskType","startTime","endTime","colSpan","textAlign"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './TestPage.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [selectedTask, setSelectedTask] = useState('');\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']);\n  const mapCanvasRef = useRef(null); // 지도 캔버스 레퍼런스\n  const robotsCanvasRef = useRef(null); // 로봇 캔버스 레퍼런스\n  const [mapImage, setMapImage] = useState(null);\n  const [mapResolution, setMapResolution] = useState(0.05);\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n  const [dragging, setDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n  const [expandedRobotId, setExpandedRobotId] = useState(null);\n\n  // 데이터 초기화 및 WebSocket 설정\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      fetchRobots();\n      fetchAllTasks();\n    };\n    fetchData();\n\n    const socket = new WebSocket('ws://your-websocket-url'); // 실제 WebSocket URL로 변경\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n\n    socket.onmessage = (event) => {\n      console.log('WebSocket 메시지 수신:', event.data); // 디버깅용\n      try {\n        const updatedRobots = JSON.parse(event.data);\n        setRobots(updatedRobots);\n        // 로봇 그리기만 호출\n        drawRobots();\n      } catch (err) {\n        console.error('로봇 데이터 파싱 오류:', err);\n      }\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket 오류:', error);\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, [mapImage, dragOffset.x, dragOffset.y]);\n\n  // 지도 그리기 useEffect\n  useEffect(() => {\n    drawMap();\n  }, [mapUrl, mapDimensions, dragOffset]);\n\n  // 로봇 그리기 useEffect\n  useEffect(() => {\n    drawRobots();\n  }, [robots, dragOffset]);\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login';\n      return null;\n    }\n    return token;\n  };\n\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      console.log('지도 메타데이터:', metadata); // 디버깅용\n\n      // metadata가 객체인지 문자열인지 확인\n      let resolution;\n      if (typeof metadata === 'object' && metadata.resolution) {\n        resolution = parseFloat(metadata.resolution);\n      } else if (typeof metadata === 'string') {\n        const match = metadata.match(/resolution:\\s*(\\d+(\\.\\d+)?)/);\n        if (match && match[1]) {\n          resolution = parseFloat(match[1]);\n        }\n      }\n\n      if (resolution) {\n        console.log('지도 해상도:', resolution); // 디버깅용\n        setMapResolution(resolution);\n      } else {\n        console.error('지도 해상도 정보를 찾을 수 없습니다.');\n      }\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      console.log('지도 URL:', url); // 디버깅용\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        console.log('지도 이미지 로드 완료'); // 디버깅용\n        setMapImage(img);\n        setMapDimensions({ width: img.width, height: img.height });\n        drawMap(); // 지도 캔버스만 그리기\n        drawRobots(); // 초기 로봇 위치 그리기\n      };\n      img.onerror = (err) => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n\n  const fetchAllTasks = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n\n  const fetchRobots = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setRobots(response.data);\n      // drawRobots(); // 이미 useEffect에서 호출됨\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n\n  const toggleExpand = (robotId) => {\n    if (expandedRobotId === robotId) {\n      setExpandedRobotId(null);\n    } else {\n      setExpandedRobotId(robotId);\n    }\n  };\n\n  const openPopup = (robot) => {\n    setSelectedRobot(robot);\n    setIsPopupOpen(true);\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n\n  const handleTaskChange = (event) => {\n    setSelectedTask(event.target.value);\n  };\n\n  const formatDate = (date) => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n\n  const drawMap = () => {\n    const mapCanvas = mapCanvasRef.current;\n    if (!mapCanvas) {\n      console.error('mapCanvasRef가 참조되지 않습니다.');\n      return;\n    }\n    const ctx = mapCanvas.getContext('2d');\n    ctx.clearRect(0, 0, mapCanvas.width, mapCanvas.height);\n\n    if (mapImage) {\n      ctx.drawImage(mapImage, dragOffset.x, dragOffset.y, mapImage.width, mapImage.height);\n      console.log('지도 그리기 완료'); // 디버깅용\n    } else {\n      console.warn('mapImage가 존재하지 않습니다.');\n    }\n  };\n\n  const drawRobots = () => {\n    const robotsCanvas = robotsCanvasRef.current;\n    if (!robotsCanvas) {\n      console.error('robotsCanvasRef가 참조되지 않습니다.');\n      return;\n    }\n    const ctx = robotsCanvas.getContext('2d');\n    ctx.clearRect(0, 0, robotsCanvas.width, robotsCanvas.height);\n\n    robots.forEach((robot) => {\n      const { x, y } = robot.location;\n      const { mapX, mapY } = worldToMap(\n        x,\n        y,\n        mapCanvasRef.current.width,\n        mapCanvasRef.current.height,\n        dragOffset.x,\n        dragOffset.y,\n        mapImage.width,\n        mapImage.height,\n        mapResolution\n      );\n\n      if (isNaN(mapX) || isNaN(mapY)) {\n        console.warn(`로봇 ${robot.name}의 좌표가 유효하지 않습니다: x=${x}, y=${y}`);\n        return;\n      }\n\n      let robotColor = 'gray';\n      if (robot.status?.state === 'Tasking') {\n        robotColor = 'blue';\n      } else if (robot.status?.state === 'Waiting') {\n        robotColor = 'yellow';\n      } else if (robot.status?.state === 'Error') {\n        robotColor = 'red';\n      }\n\n      ctx.fillStyle = robotColor;\n      ctx.beginPath();\n      ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n\n    console.log('로봇 그리기 완료'); // 디버깅용\n  };\n\n  const worldToMap = (x, y, mapWidth, mapHeight, offsetX, offsetY, imgWidth, imgHeight, resolution) => {\n    console.log('좌표 변환:', { x, y, resolution }); // 디버깅용\n    const mapX = (x / resolution) + mapWidth / 2 + offsetX;\n    const mapY = mapHeight - ((y / resolution) + mapHeight / 2) + offsetY;\n    console.log('변환된 좌표:', { mapX, mapY }); // 디버깅용\n    return { mapX, mapY };\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging && mapImage) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n      let newOffsetX = dragOffset.x + deltaX;\n      let newOffsetY = dragOffset.y + deltaY;\n\n      // 지도 이동 제한\n      newOffsetX = Math.min(0, Math.max(mapCanvasRef.current.width - mapImage.width, newOffsetX));\n      newOffsetY = Math.min(0, Math.max(mapCanvasRef.current.height - mapImage.height, newOffsetY));\n\n      setDragOffset({ x: newOffsetX, y: newOffsetY });\n      setLastMousePos({ x: e.clientX, y: e.clientY });\n      // 지도와 로봇을 다시 그립니다.\n      drawMap();\n      drawRobots();\n    }\n  };\n\n  const handleMouseUp = () => setDragging(false);\n  const handleMouseLeave = () => setDragging(false);\n\n  return (\n    <div className=\"test-page-container\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"map-container\">\n          {mapUrl ? (\n            <>\n              {/* 지도 캔버스 */}\n              <canvas\n                ref={mapCanvasRef}\n                width=\"800\"\n                height=\"600\"\n                className=\"map-canvas\"\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                onMouseLeave={handleMouseLeave}\n              ></canvas>\n              {/* 로봇 캔버스 */}\n              <canvas\n                ref={robotsCanvasRef}\n                width=\"800\"\n                height=\"600\"\n                className=\"robots-canvas\"\n              ></canvas>\n            </>\n          ) : (\n            <p>지도를 불러오는 중...</p>\n          )}\n        </div>\n\n        <div className=\"robot-list-container\">\n          <h3>로봇 리스트</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.length > 0 ? (\n              robots.map((robot) => (\n                <li key={robot._id} className=\"robot-list-item\">\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span><strong>이름:</strong> {robot.name}</span>\n                    <span><strong>상태:</strong> {robot.status?.state || 'Unknown'}</span>\n                    <span><strong>배터리:</strong> {robot.status?.battery || 'N/A'}%</span>\n                    <button\n                      onClick={() => toggleExpand(robot._id)}\n                      style={{ background: 'none', border: 'none', cursor: 'pointer', fontSize: '16px' }}\n                    >\n                      {expandedRobotId === robot._id ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>}\n                    </button>\n                  </div>\n                  <div className={`robot-details ${expandedRobotId === robot._id ? 'expanded' : ''}`}>\n                    <p><strong>IP:</strong> {robot.ip}</p>\n                    <p><strong>위치:</strong> x: {robot.location.x}, y: {robot.location.y}</p>\n                    <p><strong>속도:</strong> {robot.status?.speed || 'N/A'} m/s</p>\n                    <p>\n                      <strong>job</strong>\n                      <button onClick={() => openPopup(robot)} style={{ background: 'none', border: '1px solid #ccc', cursor: 'pointer', fontSize: '16px' }}>+</button>\n                    </p>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <p>연결된 로봇이 없습니다.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {isPopupOpen && selectedRobot && (\n        <div className=\"popup-overlay\" onClick={closePopup}>\n          <div className=\"popup-container\" onClick={(e) => e.stopPropagation()}>\n            <h2>작업 선택 - {selectedRobot.name}</h2>\n            <div>\n              <label>\n                작업을 선택하세요:\n                <select value={selectedTask} onChange={handleTaskChange}>\n                  <option value=\"\">선택하세요</option>\n                  {availableTasks.map((task, index) => (\n                    <option key={index} value={task}>{task}</option>\n                  ))}\n                </select>\n              </label>\n            </div>\n            <button className=\"popup-close-button\" onClick={closePopup}>닫기</button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"task-log-container\">\n        <h3>작업 로그</h3>\n        <div className=\"task-log-table-wrapper\">\n          <table className=\"task-log-table\">\n            <thead>\n              <tr>\n                <th>작업 이름</th>\n                <th>로봇 IP</th>\n                <th>작업 유형</th>\n                <th>상태</th>\n                <th>시작 시간</th>\n                <th>종료 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                  <tr key={index}>\n                    <td>{task.name}</td>\n                    <td>{task.robotIp}</td>\n                    <td>{task.taskType}</td>\n                    <td>{task.status}</td>\n                    <td>{formatDate(task.startTime)}</td>\n                    <td>{formatDate(task.endTime)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" style={{ textAlign: 'center', padding: '10px' }}>작업 로그가 없습니다.</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAO,+CAA+C;AAEtD,SAASC,QAAQA,CAAA,EAAG;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACpF,MAAMsB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACnC,MAAMqB,eAAe,GAAGrB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACtC,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC;IAAE8B,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAC3E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC;IAAEoC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC;IAAEoC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAChE,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMyC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,gBAAgB,CAAC,CAAC;MACxB,MAAMC,iBAAiB,CAAC,CAAC;MACzBC,WAAW,CAAC,CAAC;MACbC,aAAa,CAAC,CAAC;IACjB,CAAC;IACDJ,SAAS,CAAC,CAAC;IAEX,MAAMK,MAAM,GAAG,IAAIC,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAAC;;IAEzDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5BH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC9C,IAAI;QACF,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACC,IAAI,CAAC;QAC5C3C,SAAS,CAAC4C,aAAa,CAAC;QACxB;QACAG,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZT,OAAO,CAACU,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;MACrC;IACF,CAAC;IAEDZ,MAAM,CAACc,OAAO,GAAID,KAAK,IAAK;MAC1BV,OAAO,CAACU,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC;IAEDb,MAAM,CAACe,OAAO,GAAG,MAAM;MACrBZ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,OAAO,MAAM;MACXJ,MAAM,CAACgB,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACvC,QAAQ,EAAEU,UAAU,CAACE,CAAC,EAAEF,UAAU,CAACG,CAAC,CAAC,CAAC;;EAE1C;EACApC,SAAS,CAAC,MAAM;IACd+D,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACxD,MAAM,EAAEoB,aAAa,EAAEM,UAAU,CAAC,CAAC;;EAEvC;EACAjC,SAAS,CAAC,MAAM;IACdyD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAAChD,MAAM,EAAEwB,UAAU,CAAC,CAAC;EAExB,MAAM+B,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,uBAAuB,CAAC;MAC9BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAO,IAAI;IACb;IACA,OAAON,KAAK;EACd,CAAC;EAED,MAAMvB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMuB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMnE,KAAK,CAACoE,GAAG,CAAC,gDAAgD,EAAE;QACjFC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,MAAMW,QAAQ,GAAGJ,QAAQ,CAACnB,IAAI;MAC9BJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE0B,QAAQ,CAAC,CAAC,CAAC;;MAEpC;MACA,IAAIC,UAAU;MACd,IAAI,OAAOD,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACC,UAAU,EAAE;QACvDA,UAAU,GAAGC,UAAU,CAACF,QAAQ,CAACC,UAAU,CAAC;MAC9C,CAAC,MAAM,IAAI,OAAOD,QAAQ,KAAK,QAAQ,EAAE;QACvC,MAAMG,KAAK,GAAGH,QAAQ,CAACG,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrBF,UAAU,GAAGC,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC;MACF;MAEA,IAAIF,UAAU,EAAE;QACd5B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE2B,UAAU,CAAC,CAAC,CAAC;QACpCnD,gBAAgB,CAACmD,UAAU,CAAC;MAC9B,CAAC,MAAM;QACL5B,OAAO,CAACU,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,MAAMhB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMsB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMnE,KAAK,CAACoE,GAAG,CAAC,4CAA4C,EAAE;QAC7EC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG,CAAC;QAC7Ce,YAAY,EAAE;MAChB,CAAC,CAAC;MACF,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACX,QAAQ,CAACnB,IAAI,CAAC;MAC9C7C,SAAS,CAACyE,GAAG,CAAC;MACdhC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+B,GAAG,CAAC,CAAC,CAAC;;MAE7B,MAAMG,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGL,GAAG;MACbG,GAAG,CAACG,MAAM,GAAG,MAAM;QACjBtC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QAC7B1B,WAAW,CAAC4D,GAAG,CAAC;QAChBxD,gBAAgB,CAAC;UAAEC,KAAK,EAAEuD,GAAG,CAACvD,KAAK;UAAEC,MAAM,EAAEsD,GAAG,CAACtD;QAAO,CAAC,CAAC;QAC1DiC,OAAO,CAAC,CAAC,CAAC,CAAC;QACXN,UAAU,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC;MACD2B,GAAG,CAACxB,OAAO,GAAIF,GAAG,IAAK;QACrBT,OAAO,CAACU,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC;MAC7C,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,MAAMd,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMoB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMnE,KAAK,CAACoE,GAAG,CAAC,kCAAkC,EAAE;QACnEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFrD,QAAQ,CAAC4D,QAAQ,CAACnB,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,MAAMf,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMqB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMnE,KAAK,CAACoE,GAAG,CAAC,sCAAsC,EAAE;QACvEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFvD,SAAS,CAAC8D,QAAQ,CAACnB,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,MAAM6B,YAAY,GAAIC,OAAO,IAAK;IAChC,IAAIlD,eAAe,KAAKkD,OAAO,EAAE;MAC/BjD,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLA,kBAAkB,CAACiD,OAAO,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3B3E,gBAAgB,CAAC2E,KAAK,CAAC;IACvB7E,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM8E,UAAU,GAAGA,CAAA,KAAM;IACvB9E,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAM+E,gBAAgB,GAAIzC,KAAK,IAAK;IAClClC,eAAe,CAACkC,KAAK,CAAC0C,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IACjC,OAAOG,KAAK,CAACF,UAAU,CAAC,GAAG,KAAK,GAAGA,UAAU,CAACG,cAAc,CAAC,CAAC;EAChE,CAAC;EAED,MAAMtC,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMuC,SAAS,GAAGjF,YAAY,CAACkF,OAAO;IACtC,IAAI,CAACD,SAAS,EAAE;MACdrD,OAAO,CAACU,KAAK,CAAC,0BAA0B,CAAC;MACzC;IACF;IACA,MAAM6C,GAAG,GAAGF,SAAS,CAACG,UAAU,CAAC,IAAI,CAAC;IACtCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,SAAS,CAACzE,KAAK,EAAEyE,SAAS,CAACxE,MAAM,CAAC;IAEtD,IAAIP,QAAQ,EAAE;MACZiF,GAAG,CAACG,SAAS,CAACpF,QAAQ,EAAEU,UAAU,CAACE,CAAC,EAAEF,UAAU,CAACG,CAAC,EAAEb,QAAQ,CAACM,KAAK,EAAEN,QAAQ,CAACO,MAAM,CAAC;MACpFmB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLD,OAAO,CAAC2D,IAAI,CAAC,sBAAsB,CAAC;IACtC;EACF,CAAC;EAED,MAAMnD,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMoD,YAAY,GAAGvF,eAAe,CAACiF,OAAO;IAC5C,IAAI,CAACM,YAAY,EAAE;MACjB5D,OAAO,CAACU,KAAK,CAAC,6BAA6B,CAAC;MAC5C;IACF;IACA,MAAM6C,GAAG,GAAGK,YAAY,CAACJ,UAAU,CAAC,IAAI,CAAC;IACzCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEG,YAAY,CAAChF,KAAK,EAAEgF,YAAY,CAAC/E,MAAM,CAAC;IAE5DrB,MAAM,CAACqG,OAAO,CAAEnB,KAAK,IAAK;MAAA,IAAAoB,aAAA,EAAAC,cAAA,EAAAC,cAAA;MACxB,MAAM;QAAE9E,CAAC;QAAEC;MAAE,CAAC,GAAGuD,KAAK,CAACrB,QAAQ;MAC/B,MAAM;QAAE4C,IAAI;QAAEC;MAAK,CAAC,GAAGC,UAAU,CAC/BjF,CAAC,EACDC,CAAC,EACDf,YAAY,CAACkF,OAAO,CAAC1E,KAAK,EAC1BR,YAAY,CAACkF,OAAO,CAACzE,MAAM,EAC3BG,UAAU,CAACE,CAAC,EACZF,UAAU,CAACG,CAAC,EACZb,QAAQ,CAACM,KAAK,EACdN,QAAQ,CAACO,MAAM,EACfL,aACF,CAAC;MAED,IAAI2E,KAAK,CAACc,IAAI,CAAC,IAAId,KAAK,CAACe,IAAI,CAAC,EAAE;QAC9BlE,OAAO,CAAC2D,IAAI,CAAC,MAAMjB,KAAK,CAAC0B,IAAI,sBAAsBlF,CAAC,OAAOC,CAAC,EAAE,CAAC;QAC/D;MACF;MAEA,IAAIkF,UAAU,GAAG,MAAM;MACvB,IAAI,EAAAP,aAAA,GAAApB,KAAK,CAAC4B,MAAM,cAAAR,aAAA,uBAAZA,aAAA,CAAcS,KAAK,MAAK,SAAS,EAAE;QACrCF,UAAU,GAAG,MAAM;MACrB,CAAC,MAAM,IAAI,EAAAN,cAAA,GAAArB,KAAK,CAAC4B,MAAM,cAAAP,cAAA,uBAAZA,cAAA,CAAcQ,KAAK,MAAK,SAAS,EAAE;QAC5CF,UAAU,GAAG,QAAQ;MACvB,CAAC,MAAM,IAAI,EAAAL,cAAA,GAAAtB,KAAK,CAAC4B,MAAM,cAAAN,cAAA,uBAAZA,cAAA,CAAcO,KAAK,MAAK,OAAO,EAAE;QAC1CF,UAAU,GAAG,KAAK;MACpB;MAEAd,GAAG,CAACiB,SAAS,GAAGH,UAAU;MAC1Bd,GAAG,CAACkB,SAAS,CAAC,CAAC;MACflB,GAAG,CAACmB,GAAG,CAACT,IAAI,EAAEC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGS,IAAI,CAACC,EAAE,CAAC;MACtCrB,GAAG,CAACsB,IAAI,CAAC,CAAC;IACZ,CAAC,CAAC;IAEF7E,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMkE,UAAU,GAAGA,CAACjF,CAAC,EAAEC,CAAC,EAAE2F,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEvD,UAAU,KAAK;IACnG5B,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE;MAAEf,CAAC;MAAEC,CAAC;MAAEyC;IAAW,CAAC,CAAC,CAAC,CAAC;IAC7C,MAAMqC,IAAI,GAAI/E,CAAC,GAAG0C,UAAU,GAAIkD,QAAQ,GAAG,CAAC,GAAGE,OAAO;IACtD,MAAMd,IAAI,GAAGa,SAAS,IAAK5F,CAAC,GAAGyC,UAAU,GAAImD,SAAS,GAAG,CAAC,CAAC,GAAGE,OAAO;IACrEjF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;MAAEgE,IAAI;MAAEC;IAAK,CAAC,CAAC,CAAC,CAAC;IACxC,OAAO;MAAED,IAAI;MAAEC;IAAK,CAAC;EACvB,CAAC;EAED,MAAMkB,eAAe,GAAIC,CAAC,IAAK;IAC7BtG,WAAW,CAAC,IAAI,CAAC;IACjBM,eAAe,CAAC;MAAEH,CAAC,EAAEmG,CAAC,CAACC,OAAO;MAAEnG,CAAC,EAAEkG,CAAC,CAACE;IAAQ,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,eAAe,GAAIH,CAAC,IAAK;IAC7B,IAAIvG,QAAQ,IAAIR,QAAQ,EAAE;MACxB,MAAMmH,MAAM,GAAGJ,CAAC,CAACC,OAAO,GAAGlG,YAAY,CAACF,CAAC;MACzC,MAAMwG,MAAM,GAAGL,CAAC,CAACE,OAAO,GAAGnG,YAAY,CAACD,CAAC;MACzC,IAAIwG,UAAU,GAAG3G,UAAU,CAACE,CAAC,GAAGuG,MAAM;MACtC,IAAIG,UAAU,GAAG5G,UAAU,CAACG,CAAC,GAAGuG,MAAM;;MAEtC;MACAC,UAAU,GAAGhB,IAAI,CAACkB,GAAG,CAAC,CAAC,EAAElB,IAAI,CAACmB,GAAG,CAAC1H,YAAY,CAACkF,OAAO,CAAC1E,KAAK,GAAGN,QAAQ,CAACM,KAAK,EAAE+G,UAAU,CAAC,CAAC;MAC3FC,UAAU,GAAGjB,IAAI,CAACkB,GAAG,CAAC,CAAC,EAAElB,IAAI,CAACmB,GAAG,CAAC1H,YAAY,CAACkF,OAAO,CAACzE,MAAM,GAAGP,QAAQ,CAACO,MAAM,EAAE+G,UAAU,CAAC,CAAC;MAE7F3G,aAAa,CAAC;QAAEC,CAAC,EAAEyG,UAAU;QAAExG,CAAC,EAAEyG;MAAW,CAAC,CAAC;MAC/CvG,eAAe,CAAC;QAAEH,CAAC,EAAEmG,CAAC,CAACC,OAAO;QAAEnG,CAAC,EAAEkG,CAAC,CAACE;MAAQ,CAAC,CAAC;MAC/C;MACAzE,OAAO,CAAC,CAAC;MACTN,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAMuF,aAAa,GAAGA,CAAA,KAAMhH,WAAW,CAAC,KAAK,CAAC;EAC9C,MAAMiH,gBAAgB,GAAGA,CAAA,KAAMjH,WAAW,CAAC,KAAK,CAAC;EAEjD,oBACElC,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC3J,KAAA,CAAAoJ,aAAA;IAAQC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB3J,KAAA,CAAAoJ,aAAA,CAAC9I,QAAQ;IAAAgJ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACZ3J,KAAA,CAAAoJ,aAAA,CAAC/I,YAAY;IAAAiJ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACT,CAAC,eACT3J,KAAA,CAAAoJ,aAAA,CAAChJ,MAAM;IAAAkJ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACV3J,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B3J,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BlJ,MAAM,gBACLT,KAAA,CAAAoJ,aAAA,CAAApJ,KAAA,CAAA4J,QAAA,qBAEE5J,KAAA,CAAAoJ,aAAA;IACES,GAAG,EAAEtI,YAAa;IAClBQ,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZqH,SAAS,EAAC,YAAY;IACtBS,WAAW,EAAEvB,eAAgB;IAC7BwB,WAAW,EAAEpB,eAAgB;IAC7BqB,SAAS,EAAEd,aAAc;IACzBe,YAAY,EAAEd,gBAAiB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eAEV3J,KAAA,CAAAoJ,aAAA;IACES,GAAG,EAAErI,eAAgB;IACrBO,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZqH,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClB,CACT,CAAC,gBAEH3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uDAAgB,CAElB,CAAC,eAEN3J,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnC3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iCAAU,CAAC,eACf3J,KAAA,CAAAoJ,aAAA;IAAIc,KAAK,EAAE;MAAEC,aAAa,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9ChJ,MAAM,CAAC0J,MAAM,GAAG,CAAC,GAChB1J,MAAM,CAAC2J,GAAG,CAAEzE,KAAK;IAAA,IAAA0E,cAAA,EAAAC,cAAA,EAAAC,cAAA;IAAA,oBACfzK,KAAA,CAAAoJ,aAAA;MAAIsB,GAAG,EAAE7E,KAAK,CAAC8E,GAAI;MAACtB,SAAS,EAAC,iBAAiB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC7C3J,KAAA,CAAAoJ,aAAA;MAAKc,KAAK,EAAE;QAAEU,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAxB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrF3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAM3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,KAAC,EAAC9D,KAAK,CAAC0B,IAAW,CAAC,eAC9CvH,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAM3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,KAAC,EAAC,EAAAY,cAAA,GAAA1E,KAAK,CAAC4B,MAAM,cAAA8C,cAAA,uBAAZA,cAAA,CAAc7C,KAAK,KAAI,SAAgB,CAAC,eACpE1H,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAM3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,qBAAY,CAAC,KAAC,EAAC,EAAAa,cAAA,GAAA3E,KAAK,CAAC4B,MAAM,cAAA+C,cAAA,uBAAZA,cAAA,CAAcO,OAAO,KAAI,KAAK,EAAC,GAAO,CAAC,eACpE/K,KAAA,CAAAoJ,aAAA;MACE4B,OAAO,EAAEA,CAAA,KAAMtF,YAAY,CAACG,KAAK,CAAC8E,GAAG,CAAE;MACvCT,KAAK,EAAE;QAAEe,UAAU,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,MAAM,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAA9B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAElFlH,eAAe,KAAKoD,KAAK,CAAC8E,GAAG,gBAAG3K,KAAA,CAAAoJ,aAAA;MAAGC,SAAS,EAAC,mBAAmB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAI,CAAC,gBAAG3J,KAAA,CAAAoJ,aAAA;MAAGC,SAAS,EAAC,qBAAqB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAI,CACzG,CACL,CAAC,eACN3J,KAAA,CAAAoJ,aAAA;MAAKC,SAAS,EAAE,iBAAiB5G,eAAe,KAAKoD,KAAK,CAAC8E,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;MAAArB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjF3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAG3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,KAAW,CAAC,KAAC,EAAC9D,KAAK,CAACwF,EAAM,CAAC,eACtCrL,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAG3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,QAAI,EAAC9D,KAAK,CAACrB,QAAQ,CAACnC,CAAC,EAAC,OAAK,EAACwD,KAAK,CAACrB,QAAQ,CAAClC,CAAK,CAAC,eACxEtC,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAG3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,KAAC,EAAC,EAAAc,cAAA,GAAA5E,KAAK,CAAC4B,MAAM,cAAAgD,cAAA,uBAAZA,cAAA,CAAca,KAAK,KAAI,KAAK,EAAC,MAAO,CAAC,eAC9DtL,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACE3J,KAAA,CAAAoJ,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,KAAW,CAAC,eACpB3J,KAAA,CAAAoJ,aAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMpF,SAAS,CAACC,KAAK,CAAE;MAACqE,KAAK,EAAE;QAAEe,UAAU,EAAE,MAAM;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,MAAM,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAA9B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,GAAS,CAC/I,CACA,CACH,CAAC;EAAA,CACN,CAAC,gBAEF3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iEAAgB,CAEnB,CACD,CACF,CAAC,EAEL5I,WAAW,IAAIE,aAAa,iBAC3BjB,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAC2B,OAAO,EAAElF,UAAW;IAAAwD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjD3J,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAC2B,OAAO,EAAGxC,CAAC,IAAKA,CAAC,CAAC+C,eAAe,CAAC,CAAE;IAAAjC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnE3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,8BAAQ,EAAC1I,aAAa,CAACsG,IAAS,CAAC,eACrCvH,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,oDAEL,eAAA3J,KAAA,CAAAoJ,aAAA;IAAQnD,KAAK,EAAE9E,YAAa;IAACqK,QAAQ,EAAEzF,gBAAiB;IAAAuD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtD3J,KAAA,CAAAoJ,aAAA;IAAQnD,KAAK,EAAC,EAAE;IAAAqD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gCAAa,CAAC,EAC9BtI,cAAc,CAACiJ,GAAG,CAAC,CAACmB,IAAI,EAAEC,KAAK,kBAC9B1L,KAAA,CAAAoJ,aAAA;IAAQsB,GAAG,EAAEgB,KAAM;IAACzF,KAAK,EAAEwF,IAAK;IAAAnC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE8B,IAAa,CAChD,CACK,CACH,CACJ,CAAC,eACNzL,KAAA,CAAAoJ,aAAA;IAAQC,SAAS,EAAC,oBAAoB;IAAC2B,OAAO,EAAElF,UAAW;IAAAwD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAU,CACnE,CACF,CACN,eAED3J,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjC3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACd3J,KAAA,CAAAoJ,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC3J,KAAA,CAAAoJ,aAAA;IAAOC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/B3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACd3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iBAAS,CAAC,eACd3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACd3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAM,CAAC,eACX3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACd3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CACX,CACC,CAAC,eACR3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG9I,KAAK,CAACwJ,MAAM,GAAG,CAAC,GACfxJ,KAAK,CAACyJ,GAAG,CAAC,CAACmB,IAAI,EAAEC,KAAK,kBACpB1L,KAAA,CAAAoJ,aAAA;IAAIsB,GAAG,EAAEgB,KAAM;IAAApC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACb3J,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK8B,IAAI,CAAClE,IAAS,CAAC,eACpBvH,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK8B,IAAI,CAACE,OAAY,CAAC,eACvB3L,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK8B,IAAI,CAACG,QAAa,CAAC,eACxB5L,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK8B,IAAI,CAAChE,MAAW,CAAC,eACtBzH,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKzD,UAAU,CAACuF,IAAI,CAACI,SAAS,CAAM,CAAC,eACrC7L,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKzD,UAAU,CAACuF,IAAI,CAACK,OAAO,CAAM,CAChC,CACL,CAAC,gBAEF9L,KAAA,CAAAoJ,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE3J,KAAA,CAAAoJ,aAAA;IAAI2C,OAAO,EAAC,GAAG;IAAC7B,KAAK,EAAE;MAAE8B,SAAS,EAAE,QAAQ;MAAE5B,OAAO,EAAE;IAAO,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2DAAgB,CAC/E,CAED,CACF,CACJ,CACF,CACF,CAAC;AAEV;AAEA,eAAenJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}