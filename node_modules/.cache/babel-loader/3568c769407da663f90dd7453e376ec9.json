{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst TaskCreateForm = () => {\n  const [name, setName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [robotId, setRobotId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [status, setStatus] = useState('Pending'); // 기본값 'Pending'\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const taskData = {\n      name,\n      taskType,\n      robotId,\n      userId,\n      status,\n      startTime,\n      endTime\n    };\n    try {\n      const token = localStorage.getItem('token'); // JWT 토큰을 로컬 스토리지에서 가져오기\n      if (!token) {\n        setMessage('No token found, please log in again.');\n        setIsLoading(false);\n        return;\n      }\n      await axios.post('http://localhost:6000/task/create', taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage('Task created successfully!');\n      // 폼 초기화\n      setName('');\n      setTaskType('');\n      setRobotId('');\n      setUserId('');\n      setStatus('Pending');\n      setStartTime('');\n      setEndTime('');\n    } catch (error) {\n      setMessage('Failed to create task. Error: ' + error.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Type\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot ID\",\n    value: robotId,\n    onChange: e => setRobotId(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"User ID\",\n    value: userId,\n    onChange: e => setUserId(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: status,\n    onChange: e => setStatus(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"In Progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Failed\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    value: startTime,\n    onChange: e => setStartTime(e.target.value),\n    placeholder: \"Start Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    value: endTime,\n    onChange: e => setEndTime(e.target.value),\n    placeholder: \"End Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, isLoading ? 'Creating Task...' : 'Create Task')), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, message));\n};\nexport default TaskCreateForm;","map":{"version":3,"names":["React","useState","axios","TaskCreateForm","name","setName","taskType","setTaskType","robotId","setRobotId","userId","setUserId","status","setStatus","startTime","setStartTime","endTime","setEndTime","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","taskData","token","localStorage","getItem","post","headers","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TaskCreateForm = () => {\n  const [name, setName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [robotId, setRobotId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [status, setStatus] = useState('Pending'); // 기본값 'Pending'\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const taskData = {\n      name,\n      taskType,\n      robotId,\n      userId,\n      status,\n      startTime,\n      endTime\n    };\n\n    try {\n      const token = localStorage.getItem('token'); // JWT 토큰을 로컬 스토리지에서 가져오기\n      if (!token) {\n        setMessage('No token found, please log in again.');\n        setIsLoading(false);\n        return;\n      }\n\n      await axios.post('http://localhost:6000/task/create', taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n\n      setMessage('Task created successfully!');\n      // 폼 초기화\n      setName('');\n      setTaskType('');\n      setRobotId('');\n      setUserId('');\n      setStatus('Pending');\n      setStartTime('');\n      setEndTime('');\n    } catch (error) {\n      setMessage('Failed to create task. Error: ' + error.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h2>Create New Task</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Task Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Task Type\"\n          value={taskType}\n          onChange={(e) => setTaskType(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Robot ID\"\n          value={robotId}\n          onChange={(e) => setRobotId(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"User ID\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          required\n        />\n        <select value={status} onChange={(e) => setStatus(e.target.value)}>\n          <option value=\"Pending\">Pending</option>\n          <option value=\"In Progress\">In Progress</option>\n          <option value=\"Completed\">Completed</option>\n          <option value=\"Failed\">Failed</option>\n        </select>\n        <input\n          type=\"datetime-local\"\n          value={startTime}\n          onChange={(e) => setStartTime(e.target.value)}\n          placeholder=\"Start Time\"\n        />\n        <input\n          type=\"datetime-local\"\n          value={endTime}\n          onChange={(e) => setEndTime(e.target.value)}\n          placeholder=\"End Time\"\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Creating Task...' : 'Create Task'}\n        </button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default TaskCreateForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}