{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null); // 선택된 맵 상태\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false); // 업로드 팝업 상태\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // 수정 팝업 상태\n  const [isCreatingNode, setIsCreatingNode] = useState(false); // 노드 생성 모드\n  const [nodeX, setNodeX] = useState(null); // X 좌표\n  const [nodeY, setNodeY] = useState(null); // Y 좌표\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false); // 노드 팝업 상태\n  const mapRef = React.useRef(null); // 지도 영역 참조\n  const [nodes, setNodes] = useState([]); // 노드 목록 저장\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n  const handleSelectMap = async map => {\n    setSelectedMap(map); // 맵 선택 상태 업데이트\n    setEditName(map.name);\n    setEditDescription(map.description);\n    fetchNodes(map._id); // 선택된 맵의 노드 불러오기\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null); // 선택된 맵을 삭제한 경우 초기화\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n  const handleFileChange = e => {\n    setMapFile(e.target.files[0]);\n  };\n  const handleYamlFileChange = e => {\n    setYamlFile(e.target.files[0]);\n  };\n  const handleUpdateMap = async e => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Map updated successfully');\n      setIsEditPopupOpen(false); // 수정 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error updating map:', error);\n    }\n  };\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false); // 업로드 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n    }\n  };\n  const openEditPopup = map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsEditPopupOpen(true); // 수정 팝업 열기\n  };\n  const handleCreateNode = () => {\n    if (!selectedMap) {\n      alert('Please select a map to create a node.');\n      return;\n    }\n    alert(`Creating a new node for map: ${selectedMap.name}`);\n  };\n  // 노드 생성 모드 시작\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('Please select a map first.');\n      return;\n    }\n    setIsCreatingNode(true);\n    document.body.style.cursor = 'crosshair'; // 마우스 커서 십자가 모양 변경\n  };\n\n  // 지도 클릭 시 좌표를 얻고 팝업 열기\n  const handleMapClick = e => {\n    if (!isCreatingNode) return;\n    const rect = mapRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left; // 클릭한 X 좌표 계산\n    const y = e.clientY - rect.top; // 클릭한 Y 좌표 계산\n\n    setNodeX(x);\n    setNodeY(y);\n    setIsCreatingNode(false);\n    setIsNodePopupOpen(true); // 팝업 열기\n    document.body.style.cursor = 'default'; // 커서 복구\n  };\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Node created successfully.');\n      setIsNodePopupOpen(false);\n      setNodeName(''); // 입력 필드 초기화\n      fetchNodes(selectedMap._id); // 노드 목록 갱신\n    } catch (error) {\n      console.error('Error creating node:', error);\n      alert('Failed to create node.');\n    }\n  };\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      setNodes(response.data); // 노드 리스트 상태 업데이트\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNodeMode,\n    className: \"create-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }), \" Create Node\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, \"Map List\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${selectedMap && selectedMap._id === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, \"\\xD7\")))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, \"Map Description\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, selectedMap.description))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: \"map-image-container\",\n    onClick: handleMapClick,\n    style: {\n      width: '800px',\n      height: '600px',\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    alt: \"Selected Map\",\n    className: \"map-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, \"Select a map to view its image\"), nodes.map(node => /*#__PURE__*/React.createElement(\"div\", {\n    key: node._id,\n    className: \"node\",\n    style: {\n      position: 'absolute',\n      top: `${node.y}px`,\n      left: `${node.x}px`,\n      width: '0',\n      height: '0',\n      borderLeft: '6px solid transparent',\n      borderRight: '6x solid transparent',\n      borderBottom: '12px solid red',\n      // 삼각형 생성\n      transform: 'translate(-50%, -50%)'\n    },\n    title: node.name // 마우스 오버 시 노드 이름 표시\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  })))), isNodePopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }, \"Create Node\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, \"X: \", nodeX, \", Y: \", nodeY), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"Enter node name\",\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitNode,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsNodePopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, \"Upload Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"Map Description\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, \"Map File (.pgm, .png, .jpg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, \"YAML File (.yaml)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }\n  }, \"Edit Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"Map Description\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","Navbar","LogoutButton","UserInfo","faEdit","faPlus","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isCreatingNode","setIsCreatingNode","nodeX","setNodeX","nodeY","setNodeY","nodeName","setNodeName","isNodePopupOpen","setIsNodePopupOpen","mapRef","useRef","nodes","setNodes","fetchMaps","token","localStorage","getItem","alert","response","get","headers","data","error","console","handleSelectMap","map","name","description","fetchNodes","_id","Authorization","responseType","imageUrl","URL","createObjectURL","handleDeleteMap","mapId","confirmDelete","window","confirm","put","handleFileChange","e","target","files","handleYamlFileChange","handleUpdateMap","preventDefault","length","handleUploadMap","formData","FormData","append","post","openEditPopup","handleCreateNode","handleCreateNodeMode","document","body","style","cursor","handleMapClick","rect","current","getBoundingClientRect","x","clientX","left","y","clientY","top","handleSubmitNode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","key","ref","width","height","position","src","alt","node","borderLeft","borderRight","borderBottom","transform","title","type","value","onChange","placeholder","onSubmit","required","accept"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null); // 선택된 맵 상태\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false); // 업로드 팝업 상태\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // 수정 팝업 상태\n  const [isCreatingNode, setIsCreatingNode] = useState(false); // 노드 생성 모드\n  const [nodeX, setNodeX] = useState(null); // X 좌표\n  const [nodeY, setNodeY] = useState(null); // Y 좌표\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false); // 노드 팝업 상태\n  const mapRef = React.useRef(null); // 지도 영역 참조\n  const [nodes, setNodes] = useState([]); // 노드 목록 저장\n  \n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map); // 맵 선택 상태 업데이트\n    setEditName(map.name);\n    setEditDescription(map.description);\n    fetchNodes(map._id); // 선택된 맵의 노드 불러오기\n\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null); // 선택된 맵을 삭제한 경우 초기화\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  const handleFileChange = (e) => {\n    setMapFile(e.target.files[0]);\n  };\n\n  const handleYamlFileChange = (e) => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  const handleUpdateMap = async (e) => {\n    e.preventDefault();\n\n    if (editName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Map updated successfully');\n      setIsEditPopupOpen(false); // 수정 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error updating map:', error);\n    }\n  };\n\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false); // 업로드 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n    }\n  };\n\n  const openEditPopup = (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsEditPopupOpen(true); // 수정 팝업 열기\n  };\n  const handleCreateNode = () => {\n    if (!selectedMap) {\n      alert('Please select a map to create a node.');\n      return;\n    }\n    alert(`Creating a new node for map: ${selectedMap.name}`);\n  };\n  // 노드 생성 모드 시작\nconst handleCreateNodeMode = () => {\n  if (!selectedMap) {\n    alert('Please select a map first.');\n    return;\n  }\n  setIsCreatingNode(true);\n  document.body.style.cursor = 'crosshair'; // 마우스 커서 십자가 모양 변경\n};\n\n// 지도 클릭 시 좌표를 얻고 팝업 열기\nconst handleMapClick = (e) => {\n  if (!isCreatingNode) return;\n\n  const rect = mapRef.current.getBoundingClientRect();\n  const x = e.clientX - rect.left; // 클릭한 X 좌표 계산\n  const y = e.clientY - rect.top;  // 클릭한 Y 좌표 계산\n\n  setNodeX(x);\n  setNodeY(y);\n  setIsCreatingNode(false);\n  setIsNodePopupOpen(true); // 팝업 열기\n  document.body.style.cursor = 'default'; // 커서 복구\n};\nconst handleSubmitNode = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    alert('No token found, please log in again.');\n    return;\n  }\n\n  try {\n    await axios.post('http://172.30.1.15:5557/map/nodes', {\n      name: nodeName,\n      x: nodeX,\n      y: nodeY,\n      mapId: selectedMap._id,\n    }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    alert('Node created successfully.');\n    setIsNodePopupOpen(false);\n    setNodeName(''); // 입력 필드 초기화\n    fetchNodes(selectedMap._id); // 노드 목록 갱신\n  } catch (error) {\n    console.error('Error creating node:', error);\n    alert('Failed to create node.');\n  }\n};\nconst fetchNodes = async (mapId) => {\n  try {\n    const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n    setNodes(response.data); // 노드 리스트 상태 업데이트\n  } catch (error) {\n    console.error('Error fetching nodes:', error);\n  }\n};\n\n\n\nreturn (\n  <div className=\"map-management-page\">\n    {/* 상단 네비게이션 바 */}\n    <header className=\"map-management-header\">\n      <UserInfo />\n      <LogoutButton />\n    </header>\n    <Navbar />\n\n    {/* 툴바: 네비게이션 아래에 위치 */}\n    <div className=\"toolbar\">\n      <button onClick={handleCreateNodeMode} className=\"create-node-button\">\n        <FontAwesomeIcon icon={faPlus} /> Create Node\n      </button>\n    </div>\n\n    {/* 맵 리스트와 이미지 컨텐츠 */}\n    <div className=\"map-management-content\">\n      {/* 맵 리스트 컨테이너 */}\n      <div className=\"map-list-container\">\n        <h2 className=\"map-list-header\">\n          Map List\n          <button\n            onClick={() => setIsUploadPopupOpen(true)}\n            className=\"add-map-button\"\n          >\n            +\n          </button>\n        </h2>\n        <ul className=\"map-list\">\n          {maps.map((map) => (\n            <li\n              key={map._id}\n              className={`map-list-item ${\n                selectedMap && selectedMap._id === map._id ? 'selected-map' : ''\n              }`}\n            >\n              <span\n                onClick={() => handleSelectMap(map)}\n                className=\"map-list-item-name\"\n              >\n                {map.name}\n              </span>\n              <button\n                onClick={() => openEditPopup(map)}\n                className=\"edit-map-button\"\n              >\n                <FontAwesomeIcon icon={faEdit} />\n              </button>\n              <button\n                onClick={() => handleDeleteMap(map._id)}\n                className=\"delete-map-button\"\n              >\n                &times;\n              </button>\n            </li>\n          ))}\n        </ul>\n\n        {selectedMap && (\n          <div className=\"map-description\">\n            <h3>Map Description</h3>\n            <p>{selectedMap.description}</p>\n          </div>\n        )}\n      </div>\n\n    {/* 지도 이미지와 노드 렌더링 영역 */}\n    <div\n        ref={mapRef}\n        className=\"map-image-container\"\n        onClick={handleMapClick}\n        style={{ width: '800px', height: '600px', position: 'relative' }}\n      >\n        {mapImage ? (\n          <img src={mapImage} alt=\"Selected Map\" className=\"map-image\" />\n        ) : (\n          <p>Select a map to view its image</p>\n        )}\n\n        {/* 노드 렌더링 */}\n        {nodes.map((node) => (\n          <div\n            key={node._id}\n            className=\"node\"\n            style={{\n              position: 'absolute',\n              top: `${node.y}px`,\n              left: `${node.x}px`,\n              width: '0',\n              height: '0',\n              borderLeft: '6px solid transparent',\n              borderRight: '6x solid transparent',\n              borderBottom: '12px solid red', // 삼각형 생성\n              transform: 'translate(-50%, -50%)',\n            }}\n            title={node.name} // 마우스 오버 시 노드 이름 표시\n          />\n        ))}\n      </div>\n    </div>\n\n    {/* Node 생성 팝업 */}\n    {isNodePopupOpen && (\n      <div className=\"popup-container\">\n        <h3>Create Node</h3>\n        <p>X: {nodeX}, Y: {nodeY}</p>\n        <input\n          type=\"text\"\n          value={nodeName}\n          onChange={(e) => setNodeName(e.target.value)}\n          placeholder=\"Enter node name\"\n          className=\"popup-input\"\n        />\n        <div className=\"popup-button-container\">\n          <button onClick={handleSubmitNode} className=\"popup-submit-button\">\n            Create\n          </button>\n          <button\n            onClick={() => setIsNodePopupOpen(false)}\n            className=\"popup-cancel-button\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    )}\n\n    {/* Map Upload Popup */}\n    {isUploadPopupOpen && (\n      <div className=\"popup-container\">\n        <h3>Upload Map</h3>\n        <form onSubmit={handleUploadMap}>\n          <input\n            type=\"text\"\n            value={uploadName}\n            onChange={(e) => setUploadName(e.target.value)}\n            placeholder=\"Map Name\"\n            required\n            className=\"popup-input\"\n          />\n          <textarea\n            value={uploadDescription}\n            onChange={(e) => setUploadDescription(e.target.value)}\n            placeholder=\"Map Description\"\n            required\n            className=\"popup-textarea\"\n          />\n          <label>Map File (.pgm, .png, .jpg)</label>\n          <input\n            type=\"file\"\n            accept=\".pgm,.png,.jpg\"\n            onChange={handleFileChange}\n            required\n            className=\"popup-file-input\"\n          />\n          <label>YAML File (.yaml)</label>\n          <input\n            type=\"file\"\n            accept=\".yaml\"\n            onChange={handleYamlFileChange}\n            required\n            className=\"popup-file-input\"\n          />\n          <div className=\"popup-button-container\">\n            <button type=\"submit\" className=\"popup-submit-button\">\n              Upload\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setIsUploadPopupOpen(false)}\n              className=\"popup-cancel-button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    )}\n\n    {/* Edit Map Popup */}\n    {isEditPopupOpen && (\n      <div className=\"popup-container\">\n        <h3>Edit Map</h3>\n        <form onSubmit={handleUpdateMap}>\n          <input\n            type=\"text\"\n            value={editName}\n            onChange={(e) => setEditName(e.target.value)}\n            placeholder=\"Map Name\"\n            required\n            className=\"popup-input\"\n          />\n          <textarea\n            value={editDescription}\n            onChange={(e) => setEditDescription(e.target.value)}\n            placeholder=\"Map Description\"\n            required\n            className=\"popup-textarea\"\n          />\n          <div className=\"popup-button-container\">\n            <button type=\"submit\" className=\"popup-submit-button\">\n              Update\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setIsEditPopupOpen(false)}\n              className=\"popup-cancel-button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    )}\n  </div>\n);\n  \n}\n\nexport default Mapmanage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAEhE,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAO,iBAAiB;AACxB,SAASC,MAAM,EAAEC,MAAM,QAAQ,mCAAmC;AAElE,SAASC,SAASA,CAAA,EAAG;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC4B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM0C,MAAM,GAAG3C,KAAK,CAAC4C,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAGxCC,SAAS,CAAC,MAAM;IACd6C,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,GAAG,CAAC,kCAAkC,EAAE;QACnEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK;QAClC;MACF,CAAC,CAAC;MACFpC,OAAO,CAACwC,QAAQ,CAACG,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,eAAe,GAAG,MAAOC,GAAG,IAAK;IACrC7C,cAAc,CAAC6C,GAAG,CAAC,CAAC,CAAC;IACrB3C,WAAW,CAAC2C,GAAG,CAACC,IAAI,CAAC;IACrB1C,kBAAkB,CAACyC,GAAG,CAACE,WAAW,CAAC;IACnCC,UAAU,CAACH,GAAG,CAACI,GAAG,CAAC,CAAC,CAAC;;IAGrB,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,GAAG,CAAC,oCAAoCM,GAAG,CAACI,GAAG,EAAE,EAAE;QAC9ET,OAAO,EAAE;UAAEU,aAAa,EAAE,UAAUhB,KAAK;QAAG,CAAC;QAC7CiB,YAAY,EAAE;MAChB,CAAC,CAAC;MACF,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAAChB,QAAQ,CAACG,IAAI,CAAC;MACnD3B,WAAW,CAACsC,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,MAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,MAAMoB,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,2CAA2C,CAAC;IACjF,IAAI,CAACF,aAAa,EAAE;IAEpB,IAAI;MACF,MAAMpE,KAAK,CAACuE,GAAG,CAAC,sCAAsCJ,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;QACjEhB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK;QAClC;MACF,CAAC,CAAC;MACFG,KAAK,CAAC,0BAA0B,CAAC;MACjCJ,SAAS,CAAC,CAAC;MACX,IAAIlC,WAAW,IAAIA,WAAW,CAACkD,GAAG,KAAKO,KAAK,EAAE;QAC5CxD,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB;IACF,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CL,KAAK,CAAC,oBAAoB,CAAC;IAC7B;EACF,CAAC;EAED,MAAMwB,gBAAgB,GAAIC,CAAC,IAAK;IAC9BpD,UAAU,CAACoD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClClD,WAAW,CAACkD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAME,eAAe,GAAG,MAAOJ,CAAC,IAAK;IACnCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAIlE,QAAQ,CAACmE,MAAM,GAAG,CAAC,EAAE;MACvB/B,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IAEA,MAAMH,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMhD,KAAK,CAACuE,GAAG,CAAC,sCAAsC7D,WAAW,CAACkD,GAAG,EAAE,EAAE;QACvEH,IAAI,EAAE7C,QAAQ;QACd8C,WAAW,EAAE5C;MACf,CAAC,EAAE;QACDqC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFG,KAAK,CAAC,0BAA0B,CAAC;MACjCnB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC3Be,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAM2B,eAAe,GAAG,MAAOP,CAAC,IAAK;IACnCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI9D,UAAU,CAAC+D,MAAM,GAAG,CAAC,EAAE;MACzB/B,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IAEA,MAAMiC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEnE,UAAU,CAAC;IACnCiE,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEjE,iBAAiB,CAAC;IACjD+D,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE/D,OAAO,CAAC;IAChC6D,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE7D,QAAQ,CAAC;IAEjC,MAAMuB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMhD,KAAK,CAACoF,IAAI,CAAC,oCAAoC,EAAEH,QAAQ,EAAE;QAC/D9B,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFG,KAAK,CAAC,2BAA2B,CAAC;MAClCrB,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC7BiB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMgC,aAAa,GAAI7B,GAAG,IAAK;IAC7B7C,cAAc,CAAC6C,GAAG,CAAC;IACnB3C,WAAW,CAAC2C,GAAG,CAACC,IAAI,CAAC;IACrB1C,kBAAkB,CAACyC,GAAG,CAACE,WAAW,CAAC;IACnC7B,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EACD,MAAMyD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC5E,WAAW,EAAE;MAChBsC,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IACAA,KAAK,CAAC,gCAAgCtC,WAAW,CAAC+C,IAAI,EAAE,CAAC;EAC3D,CAAC;EACD;EACF,MAAM8B,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAC7E,WAAW,EAAE;MAChBsC,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IACAjB,iBAAiB,CAAC,IAAI,CAAC;IACvByD,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,MAAM,GAAG,WAAW,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMC,cAAc,GAAInB,CAAC,IAAK;IAC5B,IAAI,CAAC3C,cAAc,EAAE;IAErB,MAAM+D,IAAI,GAAGrD,MAAM,CAACsD,OAAO,CAACC,qBAAqB,CAAC,CAAC;IACnD,MAAMC,CAAC,GAAGvB,CAAC,CAACwB,OAAO,GAAGJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACjC,MAAMC,CAAC,GAAG1B,CAAC,CAAC2B,OAAO,GAAGP,IAAI,CAACQ,GAAG,CAAC,CAAE;;IAEjCpE,QAAQ,CAAC+D,CAAC,CAAC;IACX7D,QAAQ,CAACgE,CAAC,CAAC;IACXpE,iBAAiB,CAAC,KAAK,CAAC;IACxBQ,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1BiD,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,MAAM,GAAG,SAAS,CAAC,CAAC;EAC1C,CAAC;EACD,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMzD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMhD,KAAK,CAACoF,IAAI,CAAC,mCAAmC,EAAE;QACpD3B,IAAI,EAAErB,QAAQ;QACd4D,CAAC,EAAEhE,KAAK;QACRmE,CAAC,EAAEjE,KAAK;QACRiC,KAAK,EAAEzD,WAAW,CAACkD;MACrB,CAAC,EAAE;QACDT,OAAO,EAAE;UAAEU,aAAa,EAAE,UAAUhB,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFG,KAAK,CAAC,4BAA4B,CAAC;MACnCT,kBAAkB,CAAC,KAAK,CAAC;MACzBF,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjBsB,UAAU,CAACjD,WAAW,CAACkD,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CL,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EACD,MAAMW,UAAU,GAAG,MAAOQ,KAAK,IAAK;IAClC,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,GAAG,CAAC,qCAAqCiB,KAAK,EAAE,CAAC;MAC9ExB,QAAQ,CAACM,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAID,oBACExD,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAElCjH,KAAA,CAAA0G,aAAA;IAAQC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCjH,KAAA,CAAA0G,aAAA,CAACnG,QAAQ;IAAAqG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACZjH,KAAA,CAAA0G,aAAA,CAACpG,YAAY;IAAAsG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACT,CAAC,eACTjH,KAAA,CAAA0G,aAAA,CAACrG,MAAM;IAAAuG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAGVjH,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBjH,KAAA,CAAA0G,aAAA;IAAQQ,OAAO,EAAExB,oBAAqB;IAACiB,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnEjH,KAAA,CAAA0G,aAAA,CAACtG,eAAe;IAAC+G,IAAI,EAAE1G,MAAO;IAAAmG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAC3B,CACL,CAAC,eAGNjH,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAErCjH,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCjH,KAAA,CAAA0G,aAAA;IAAIC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAE9B,eAAAjH,KAAA,CAAA0G,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAMpF,oBAAoB,CAAC,IAAI,CAAE;IAC1C6E,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3B,GAEO,CACN,CAAC,eACLjH,KAAA,CAAA0G,aAAA;IAAIC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrBtG,IAAI,CAACgD,GAAG,CAAEA,GAAG,iBACZ3D,KAAA,CAAA0G,aAAA;IACEU,GAAG,EAAEzD,GAAG,CAACI,GAAI;IACb4C,SAAS,EAAE,iBACT9F,WAAW,IAAIA,WAAW,CAACkD,GAAG,KAAKJ,GAAG,CAACI,GAAG,GAAG,cAAc,GAAG,EAAE,EAC/D;IAAA6C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEHjH,KAAA,CAAA0G,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAMxD,eAAe,CAACC,GAAG,CAAE;IACpCgD,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE7BtD,GAAG,CAACC,IACD,CAAC,eACP5D,KAAA,CAAA0G,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAM1B,aAAa,CAAC7B,GAAG,CAAE;IAClCgD,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3BjH,KAAA,CAAA0G,aAAA,CAACtG,eAAe;IAAC+G,IAAI,EAAE3G,MAAO;IAAAoG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC1B,CAAC,eACTjH,KAAA,CAAA0G,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAM7C,eAAe,CAACV,GAAG,CAACI,GAAG,CAAE;IACxC4C,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9B,MAEO,CACN,CACL,CACC,CAAC,EAEJpG,WAAW,iBACVb,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iBAAmB,CAAC,eACxBjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIpG,WAAW,CAACgD,WAAe,CAC5B,CAEJ,CAAC,eAGR7D,KAAA,CAAA0G,aAAA;IACIW,GAAG,EAAE1E,MAAO;IACZgE,SAAS,EAAC,qBAAqB;IAC/BO,OAAO,EAAEnB,cAAe;IACxBF,KAAK,EAAE;MAAEyB,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEhEtF,QAAQ,gBACP3B,KAAA,CAAA0G,aAAA;IAAKe,GAAG,EAAE9F,QAAS;IAAC+F,GAAG,EAAC,cAAc;IAACf,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAE/DjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,gCAAiC,CACrC,EAGApE,KAAK,CAACc,GAAG,CAAEgE,IAAI,iBACd3H,KAAA,CAAA0G,aAAA;IACEU,GAAG,EAAEO,IAAI,CAAC5D,GAAI;IACd4C,SAAS,EAAC,MAAM;IAChBd,KAAK,EAAE;MACL2B,QAAQ,EAAE,UAAU;MACpBhB,GAAG,EAAE,GAAGmB,IAAI,CAACrB,CAAC,IAAI;MAClBD,IAAI,EAAE,GAAGsB,IAAI,CAACxB,CAAC,IAAI;MACnBmB,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXK,UAAU,EAAE,uBAAuB;MACnCC,WAAW,EAAE,sBAAsB;MACnCC,YAAY,EAAE,gBAAgB;MAAE;MAChCC,SAAS,EAAE;IACb,CAAE;IACFC,KAAK,EAAEL,IAAI,CAAC/D,IAAK,CAAC;IAAA;IAAAgD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CACF,CACE,CACF,CAAC,EAGLxE,eAAe,iBACdzC,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CAAC,eACpBjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,KAAG,EAAC9E,KAAK,EAAC,OAAK,EAACE,KAAS,CAAC,eAC7BrC,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXC,KAAK,EAAE3F,QAAS;IAChB4F,QAAQ,EAAGvD,CAAC,IAAKpC,WAAW,CAACoC,CAAC,CAACC,MAAM,CAACqD,KAAK,CAAE;IAC7CE,WAAW,EAAC,iBAAiB;IAC7BzB,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCjH,KAAA,CAAA0G,aAAA;IAAQQ,OAAO,EAAET,gBAAiB;IAACE,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAE3D,CAAC,eACTjH,KAAA,CAAA0G,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAMxE,kBAAkB,CAAC,KAAK,CAAE;IACzCiE,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChC,QAEO,CACL,CACF,CACN,EAGApF,iBAAiB,iBAChB7B,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CAAC,eACnBjH,KAAA,CAAA0G,aAAA;IAAM2B,QAAQ,EAAElD,eAAgB;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjH,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXC,KAAK,EAAE/G,UAAW;IAClBgH,QAAQ,EAAGvD,CAAC,IAAKxD,aAAa,CAACwD,CAAC,CAACC,MAAM,CAACqD,KAAK,CAAE;IAC/CE,WAAW,EAAC,UAAU;IACtBE,QAAQ;IACR3B,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IACEwB,KAAK,EAAE7G,iBAAkB;IACzB8G,QAAQ,EAAGvD,CAAC,IAAKtD,oBAAoB,CAACsD,CAAC,CAACC,MAAM,CAACqD,KAAK,CAAE;IACtDE,WAAW,EAAC,iBAAiB;IAC7BE,QAAQ;IACR3B,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,6BAAkC,CAAC,eAC1CjH,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXM,MAAM,EAAC,gBAAgB;IACvBJ,QAAQ,EAAExD,gBAAiB;IAC3B2D,QAAQ;IACR3B,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,mBAAwB,CAAC,eAChCjH,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXM,MAAM,EAAC,OAAO;IACdJ,QAAQ,EAAEpD,oBAAqB;IAC/BuD,QAAQ;IACR3B,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCjH,KAAA,CAAA0G,aAAA;IAAQuB,IAAI,EAAC,QAAQ;IAACtB,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAE9C,CAAC,eACTjH,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,QAAQ;IACbf,OAAO,EAAEA,CAAA,KAAMpF,oBAAoB,CAAC,KAAK,CAAE;IAC3C6E,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChC,QAEO,CACL,CACD,CACH,CACN,EAGAlF,eAAe,iBACd/B,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjH,KAAA,CAAA0G,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBjH,KAAA,CAAA0G,aAAA;IAAM2B,QAAQ,EAAErD,eAAgB;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjH,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,MAAM;IACXC,KAAK,EAAEnH,QAAS;IAChBoH,QAAQ,EAAGvD,CAAC,IAAK5D,WAAW,CAAC4D,CAAC,CAACC,MAAM,CAACqD,KAAK,CAAE;IAC7CE,WAAW,EAAC,UAAU;IACtBE,QAAQ;IACR3B,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IACEwB,KAAK,EAAEjH,eAAgB;IACvBkH,QAAQ,EAAGvD,CAAC,IAAK1D,kBAAkB,CAAC0D,CAAC,CAACC,MAAM,CAACqD,KAAK,CAAE;IACpDE,WAAW,EAAC,iBAAiB;IAC7BE,QAAQ;IACR3B,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CAAC,eACFjH,KAAA,CAAA0G,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCjH,KAAA,CAAA0G,aAAA;IAAQuB,IAAI,EAAC,QAAQ;IAACtB,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAE9C,CAAC,eACTjH,KAAA,CAAA0G,aAAA;IACEuB,IAAI,EAAC,QAAQ;IACbf,OAAO,EAAEA,CAAA,KAAMlF,kBAAkB,CAAC,KAAK,CAAE;IACzC2E,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChC,QAEO,CACL,CACD,CACH,CAEJ,CAAC;AAGR;AAEA,eAAevG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}