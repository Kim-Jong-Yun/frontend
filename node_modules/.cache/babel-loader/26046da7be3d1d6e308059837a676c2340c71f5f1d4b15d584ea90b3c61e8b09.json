{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapCreatePage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const videoRef = useRef();\n  const mapRef = useRef(null);\n  const rosRef = useRef(null);\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n  }, []);\n  useEffect(() => {\n    if (selectedRobot) {\n      const peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      });\n      peer.ontrack = event => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n        }\n      };\n      peer.onicecandidate = event => {\n        if (event.candidate) {\n          socket.send(JSON.stringify({\n            type: 'candidate',\n            candidate: event.candidate\n          }));\n        }\n      };\n      peer.oniceconnectionstatechange = () => {\n        console.log('ICE Connection State Change:', peer.iceConnectionState);\n      };\n      peer.onconnectionstatechange = () => {\n        console.log('Connection State Change:', peer.connectionState);\n      };\n      const socket = new WebSocket('ws://172.30.1.76:8081'); // 포트를 8081로 변경\n      socket.onopen = async () => {\n        const offer = await peer.createOffer();\n        await peer.setLocalDescription(offer);\n        socket.send(JSON.stringify({\n          type: 'offer',\n          sdp: offer.sdp\n        }));\n      };\n      socket.onmessage = async event => {\n        const message = JSON.parse(event.data);\n        if (message.type === 'answer') {\n          await peer.setRemoteDescription(new RTCSessionDescription(message));\n        } else if (message.type === 'candidate') {\n          await peer.addIceCandidate(new RTCIceCandidate(message.candidate));\n        }\n      };\n      socket.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n      socket.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      return () => {\n        peer.close();\n        socket.close();\n      };\n    }\n  }, [selectedRobot]);\n  useEffect(() => {\n    if (selectedRobot) {\n      const ros = new window.ROSLIB.Ros({\n        url: 'ws://172.30.1.40:9090'\n      });\n      ros.on('connection', () => {\n        console.log('Connected to ROS websocket server.');\n      });\n      ros.on('error', error => {\n        console.log('Error connecting to ROS websocket server: ', error);\n      });\n      ros.on('close', () => {\n        console.log('Connection to ROS websocket server closed.');\n      });\n      const mapTopic = new window.ROSLIB.Topic({\n        ros: ros,\n        name: '/map',\n        messageType: 'nav_msgs/OccupancyGrid'\n      });\n      mapTopic.subscribe(message => {\n        if (message.info && message.data) {\n          const {\n            width,\n            height\n          } = message.info;\n          const data = message.data;\n          const canvas = mapRef.current;\n          const context = canvas.getContext('2d');\n          const imageData = context.createImageData(width, height);\n          for (let i = 0; i < data.length; i++) {\n            const value = data[i];\n            const color = value === -1 ? 255 : 255 - value;\n            imageData.data[i * 4] = color;\n            imageData.data[i * 4 + 1] = color;\n            imageData.data[i * 4 + 2] = color;\n            imageData.data[i * 4 + 3] = 255;\n          }\n          context.putImageData(imageData, 0, 0);\n        } else {\n          console.error('Received invalid /map message:', message);\n        }\n      });\n      rosRef.current = ros;\n      return () => {\n        ros.close();\n      };\n    }\n  }, [selectedRobot]);\n  const handleKeyDown = useCallback(e => {\n    const velocityCommands = {\n      w: {\n        linear: 0.1,\n        angular: 0\n      },\n      a: {\n        linear: 0,\n        angular: 0.1\n      },\n      s: {\n        linear: -0.1,\n        angular: 0\n      },\n      d: {\n        linear: 0,\n        angular: -0.1\n      },\n      ' ': {\n        linear: 0,\n        angular: 0\n      }\n    };\n    if (velocityCommands[e.key] && rosRef.current) {\n      const cmdVel = new window.ROSLIB.Topic({\n        ros: rosRef.current,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/Twist'\n      });\n      const twist = new window.ROSLIB.Message({\n        linear: {\n          x: velocityCommands[e.key].linear,\n          y: 0,\n          z: 0\n        },\n        angular: {\n          x: 0,\n          y: 0,\n          z: velocityCommands[e.key].angular\n        }\n      });\n      cmdVel.publish(twist);\n    }\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SLAM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRobot(e.target.value),\n        value: selectedRobot,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: robot._id,\n          children: robot.name\n        }, robot._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SLAM \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: mapRef,\n          width: \"600\",\n          height: \"600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"WebCam \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(MapCreatePage, \"M5O2DZ1ynpREqFwCmZVDINXNp84=\");\n_c = MapCreatePage;\nexport default MapCreatePage;\nvar _c;\n$RefreshReg$(_c, \"MapCreatePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Navbar","LogoutButton","UserInfo","axios","jsxDEV","_jsxDEV","MapCreatePage","_s","robots","setRobots","selectedRobot","setSelectedRobot","videoRef","mapRef","rosRef","fetchRobots","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","peer","RTCPeerConnection","iceServers","urls","ontrack","event","current","srcObject","streams","onicecandidate","candidate","socket","send","JSON","stringify","type","oniceconnectionstatechange","log","iceConnectionState","onconnectionstatechange","connectionState","WebSocket","onopen","offer","createOffer","setLocalDescription","sdp","onmessage","message","parse","setRemoteDescription","RTCSessionDescription","addIceCandidate","RTCIceCandidate","onclose","onerror","close","ros","window","ROSLIB","Ros","url","on","mapTopic","Topic","name","messageType","subscribe","info","width","height","canvas","context","getContext","imageData","createImageData","i","length","value","color","putImageData","handleKeyDown","e","velocityCommands","w","linear","angular","a","s","d","key","cmdVel","twist","Message","x","y","z","publish","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","target","map","robot","_id","justifyContent","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction MapCreatePage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n    const videoRef = useRef();\n    const mapRef = useRef(null);\n    const rosRef = useRef(null);\n\n    useEffect(() => {\n        const fetchRobots = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n    }, []);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            const peer = new RTCPeerConnection({\n                iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n            });\n\n            peer.ontrack = (event) => {\n                if (videoRef.current) {\n                    videoRef.current.srcObject = event.streams[0];\n                }\n            };\n\n            peer.onicecandidate = (event) => {\n                if (event.candidate) {\n                    socket.send(JSON.stringify({ type: 'candidate', candidate: event.candidate }));\n                }\n            };\n\n            peer.oniceconnectionstatechange = () => {\n                console.log('ICE Connection State Change:', peer.iceConnectionState);\n            };\n\n            peer.onconnectionstatechange = () => {\n                console.log('Connection State Change:', peer.connectionState);\n            };\n\n            const socket = new WebSocket('ws://172.30.1.76:8081'); // 포트를 8081로 변경\n            socket.onopen = async () => {\n                const offer = await peer.createOffer();\n                await peer.setLocalDescription(offer);\n                socket.send(JSON.stringify({ type: 'offer', sdp: offer.sdp }));\n            };\n\n            socket.onmessage = async (event) => {\n                const message = JSON.parse(event.data);\n                if (message.type === 'answer') {\n                    await peer.setRemoteDescription(new RTCSessionDescription(message));\n                } else if (message.type === 'candidate') {\n                    await peer.addIceCandidate(new RTCIceCandidate(message.candidate));\n                }\n            };\n\n            socket.onclose = () => {\n                console.log('WebSocket connection closed');\n            };\n\n            socket.onerror = (error) => {\n                console.error('WebSocket error:', error);\n            };\n\n            return () => {\n                peer.close();\n                socket.close();\n            };\n        }\n    }, [selectedRobot]);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            const ros = new window.ROSLIB.Ros({\n                url: 'ws://172.30.1.40:9090'\n            });\n\n            ros.on('connection', () => {\n                console.log('Connected to ROS websocket server.');\n            });\n\n            ros.on('error', (error) => {\n                console.log('Error connecting to ROS websocket server: ', error);\n            });\n\n            ros.on('close', () => {\n                console.log('Connection to ROS websocket server closed.');\n            });\n\n            const mapTopic = new window.ROSLIB.Topic({\n                ros: ros,\n                name: '/map',\n                messageType: 'nav_msgs/OccupancyGrid'\n            });\n\n            mapTopic.subscribe((message) => {\n                if (message.info && message.data) {\n                    const { width, height } = message.info;\n                    const data = message.data;\n                    const canvas = mapRef.current;\n                    const context = canvas.getContext('2d');\n                    const imageData = context.createImageData(width, height);\n\n                    for (let i = 0; i < data.length; i++) {\n                        const value = data[i];\n                        const color = value === -1 ? 255 : 255 - value;\n                        imageData.data[i * 4] = color;\n                        imageData.data[i * 4 + 1] = color;\n                        imageData.data[i * 4 + 2] = color;\n                        imageData.data[i * 4 + 3] = 255;\n                    }\n\n                    context.putImageData(imageData, 0, 0);\n                } else {\n                    console.error('Received invalid /map message:', message);\n                }\n            });\n\n            rosRef.current = ros;\n\n            return () => {\n                ros.close();\n            };\n        }\n    }, [selectedRobot]);\n\n    const handleKeyDown = useCallback((e) => {\n        const velocityCommands = {\n            w: { linear: 0.1, angular: 0 },\n            a: { linear: 0, angular: 0.1 },\n            s: { linear: -0.1, angular: 0 },\n            d: { linear: 0, angular: -0.1 },\n            ' ': { linear: 0, angular: 0 }\n        };\n        if (velocityCommands[e.key] && rosRef.current) {\n            const cmdVel = new window.ROSLIB.Topic({\n                ros: rosRef.current,\n                name: '/cmd_vel',\n                messageType: 'geometry_msgs/Twist'\n            });\n\n            const twist = new window.ROSLIB.Message({\n                linear: {\n                    x: velocityCommands[e.key].linear,\n                    y: 0,\n                    z: 0\n                },\n                angular: {\n                    x: 0,\n                    y: 0,\n                    z: velocityCommands[e.key].angular\n                }\n            });\n\n            cmdVel.publish(twist);\n        }\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleKeyDown]);\n\n    return (\n        <div>\n            <header>\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div style={{ display: 'flex' }}>\n                <Navbar />\n            </div>\n            <h2>SLAM Control</h2>\n            <div>\n                <label>로봇 선택:</label>\n                <select onChange={(e) => setSelectedRobot(e.target.value)} value={selectedRobot}>\n                    <option value=\"\">로봇을 선택하세요</option>\n                    {robots.map(robot => (\n                        <option key={robot._id} value={robot._id}>{robot.name}</option>\n                    ))}\n                </select>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div style={{ width: '50%' }}>\n                    <h3>SLAM 화면</h3>\n                    <canvas ref={mapRef} width=\"600\" height=\"600\" />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <h3>WebCam 화면</h3>\n                    <video ref={videoRef} autoPlay playsInline style={{ width: '100%' }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MapCreatePage;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}