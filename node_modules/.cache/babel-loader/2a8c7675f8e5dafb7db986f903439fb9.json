{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js\";\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport './TaskFlow.css';\nimport CreateTaskFlow from './CreateTaskFlow';\nconst TaskFlow = forwardRef(({\n  workflow,\n  onTemporaryFlowAdd,\n  onTemporaryFlowDelete,\n  taskId\n}, ref) => {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n  const [hiddenFlows, setHiddenFlows] = useState(new Set());\n  const togglePopup = () => setIsPopupOpen(prev => !prev);\n  const handleTaskFlowAdd = (nodeName, stepName, x, y) => {\n    console.log('handleTaskFlowAdd called with:', {\n      nodeName,\n      stepName,\n      x,\n      y\n    }); // 추가된 로그\n\n    if (!nodeName.trim() || !stepName.trim()) {\n      console.warn('Node name or step name is empty. Skipping addition.'); // 로그 추가\n      return;\n    }\n    const newFlow = {\n      node: nodeName,\n      step: stepName,\n      x,\n      y\n    };\n    console.log('New workflow step being added:', newFlow); // 추가된 로그\n\n    setTemporaryWorkflow(prev => [...prev, newFlow]);\n    onTemporaryFlowAdd(newFlow);\n    togglePopup();\n  };\n  const handleRemoveFlow = (index, flowId) => {\n    console.log('Removing flow:', {\n      index,\n      flowId\n    }); // 추가된 로그\n    setHiddenFlows(prev => new Set(prev).add(index));\n    onTemporaryFlowDelete(taskId, flowId);\n  };\n\n  // 외부에서 임시 워크플로우를 초기화할 수 있도록 메서드 제공\n  useImperativeHandle(ref, () => ({\n    clearTemporaryWorkflow() {\n      console.log('Clearing temporary workflow.'); // 추가된 로그\n      setTemporaryWorkflow([]);\n      setHiddenFlows(new Set());\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, workflow.concat(temporaryWorkflow).map((flow, index) => {\n    const isTemporary = index >= workflow.length;\n    if (hiddenFlows.has(index - workflow.length)) return null;\n    console.log('Rendering workflow step:', flow); // 추가된 로그\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: `task-flow-item ${isTemporary ? 'temporary' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }\n    }, flow.node)), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, flow.step), \" \", flow.x !== undefined && flow.y !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flow-coordinates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, \"(\", flow.x.toFixed(2), \", \", flow.y.toFixed(2), \")\"), !isTemporary && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"task-flow-remove-btn\",\n      onClick: () => handleRemoveFlow(index - workflow.length, flow._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, \"\\xD7\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePopup,\n    className: \"task-flow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"+\")))), isPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CreateTaskFlow, {\n    onClose: togglePopup,\n    onTaskFlowAdd: handleTaskFlowAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }))));\n});\nexport default TaskFlow;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","CreateTaskFlow","TaskFlow","workflow","onTemporaryFlowAdd","onTemporaryFlowDelete","taskId","ref","isPopupOpen","setIsPopupOpen","temporaryWorkflow","setTemporaryWorkflow","hiddenFlows","setHiddenFlows","Set","togglePopup","prev","handleTaskFlowAdd","nodeName","stepName","x","y","console","log","trim","warn","newFlow","node","step","handleRemoveFlow","index","flowId","add","clearTemporaryWorkflow","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","concat","map","flow","isTemporary","length","has","key","undefined","toFixed","onClick","_id","onClose","onTaskFlowAdd"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport './TaskFlow.css';\nimport CreateTaskFlow from './CreateTaskFlow';\n\nconst TaskFlow = forwardRef(({ workflow, onTemporaryFlowAdd, onTemporaryFlowDelete, taskId }, ref) => {\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n    const [hiddenFlows, setHiddenFlows] = useState(new Set());\n\n    const togglePopup = () => setIsPopupOpen((prev) => !prev);\n\n    const handleTaskFlowAdd = (nodeName, stepName, x, y) => {\n        console.log('handleTaskFlowAdd called with:', { nodeName, stepName, x, y }); // 추가된 로그\n\n        if (!nodeName.trim() || !stepName.trim()) {\n            console.warn('Node name or step name is empty. Skipping addition.'); // 로그 추가\n            return;\n        }\n\n        const newFlow = { node: nodeName, step: stepName, x, y };\n        console.log('New workflow step being added:', newFlow); // 추가된 로그\n\n        setTemporaryWorkflow((prev) => [...prev, newFlow]);\n        onTemporaryFlowAdd(newFlow);\n        togglePopup();\n    };\n\n    const handleRemoveFlow = (index, flowId) => {\n        console.log('Removing flow:', { index, flowId }); // 추가된 로그\n        setHiddenFlows((prev) => new Set(prev).add(index));\n        onTemporaryFlowDelete(taskId, flowId);\n    };\n\n    // 외부에서 임시 워크플로우를 초기화할 수 있도록 메서드 제공\n    useImperativeHandle(ref, () => ({\n        clearTemporaryWorkflow() {\n            console.log('Clearing temporary workflow.'); // 추가된 로그\n            setTemporaryWorkflow([]);\n            setHiddenFlows(new Set());\n        }\n    }));\n\n    return (\n        <div className=\"task-flow-container\">\n            <div className=\"task-flow-background\">\n                <div className=\"task-flow-list\">\n                    {workflow.concat(temporaryWorkflow).map((flow, index) => {\n                        const isTemporary = index >= workflow.length;\n                        if (hiddenFlows.has(index - workflow.length)) return null;\n\n                        console.log('Rendering workflow step:', flow); // 추가된 로그\n\n                        return (\n                            <div\n                                key={index}\n                                className={`task-flow-item ${isTemporary ? 'temporary' : ''}`}\n                            >\n                                <div><strong>{flow.node}</strong></div> {/* 첫 줄에 노드 이름 */}\n                                <div>{flow.step}</div> {/* 두 번째 줄에 단계 */}\n                                {flow.x !== undefined && flow.y !== undefined && (\n                                    <div className=\"flow-coordinates\">({flow.x.toFixed(2)}, {flow.y.toFixed(2)})</div>\n                                )}\n                                {!isTemporary && (\n                                    <button\n                                        className=\"task-flow-remove-btn\"\n                                        onClick={() => handleRemoveFlow(index - workflow.length, flow._id)}\n                                    >\n                                        ×\n                                    </button>\n                                )}\n                            </div>\n                        );\n                    })}\n                    <div className=\"task-flow-add\">\n                        <button onClick={togglePopup} className=\"task-flow-button\">+</button>\n                    </div>\n                </div>\n            </div>\n            {isPopupOpen && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup-content\">\n                        <CreateTaskFlow onClose={togglePopup} onTaskFlowAdd={handleTaskFlowAdd} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default TaskFlow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}