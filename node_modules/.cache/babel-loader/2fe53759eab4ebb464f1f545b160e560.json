{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nfunction RobotManagePage() {\n  console.log(\"1: RobotManagePage component rendered\");\n  const [tasks, setTasks] = useState([]);\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [message, setMessage] = useState('');\n  const [showTaskModal, setShowTaskModal] = useState(false); // Modal state\n  const [taskName, setTaskName] = useState('');\n  const [taskType, setTaskType] = useState('');\n\n  // Get token from localStorage\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    console.log(\"2: Token retrieved:\", token);\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n\n  // Fetch all robots from the API\n  const fetchRobots = async () => {\n    console.log(\"Fetching robots\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchRobots\");\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  // Fetch tasks for the selected robot\n  const fetchTasksForRobot = async robotId => {\n    console.log(`Fetching tasks for robot: ${robotId}`);\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchTasksForRobot\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.28:8080/task/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTasks(response.data);\n      if (response.data.length === 0) {\n        setMessage('No tasks found for this robot.');\n      } else {\n        setMessage('');\n      }\n    } catch (error) {\n      console.log(\"Error fetching tasks for robot:\", error);\n      setMessage('Failed to retrieve tasks.');\n    }\n  };\n\n  // Handle robot selection\n  const handleSelectRobot = robot => {\n    setSelectedRobot(robot);\n    fetchTasksForRobot(robot._id); // Fetch tasks for the selected robot\n  };\n\n  // Handle task creation\n  const handleCreateTask = async () => {\n    if (!taskName || !taskType) {\n      alert('Please fill out both task name and task type.');\n      return;\n    }\n    const token = getToken();\n    try {\n      const newTask = {\n        name: taskName,\n        taskType: taskType,\n        robotId: selectedRobot._id\n      };\n      await axios.post('http://172.30.1.28:8080/task/create', newTask, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Task added successfully!');\n      setShowTaskModal(false); // Close the modal after successful task creation\n      fetchTasksForRobot(selectedRobot._id); // Refresh task list\n    } catch (error) {\n      console.error('Error adding task:', error);\n      alert('Failed to add task.');\n    }\n  };\n\n  // Fetch robots on component mount\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n\n  // Helper function to format date or show \"N/A\" if date is invalid\n  const formatDate = date => {\n    return date ? new Date(date).toLocaleString() : 'N/A';\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, \"Robot and Task Management\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1',\n      padding: '20px',\n      borderRight: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Robot List\"), robots.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 35\n    }\n  }, \"No robots available.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    onClick: () => handleSelectRobot(robot),\n    style: {\n      padding: '10px',\n      borderBottom: '1px solid #ccc',\n      marginBottom: '10px',\n      cursor: 'pointer',\n      backgroundColor: selectedRobot && selectedRobot._id === robot._id ? '#f0f0f0' : 'white' // Highlight selected robot\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Robot Name:\"), \" \", robot.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 59\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Model:\"), \" \", robot.model, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 55\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"IP:\"), \" \", robot.ip, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Location:\"), \" (\", robot.location.x, \", \", robot.location.y, \") \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 85\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowTaskModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Add Task\"), \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1',\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, selectedRobot ? `Tasks for ${selectedRobot.name}` : 'Tasks for Selected Robot'), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 23\n    }\n  }, message), tasks.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    style: {\n      padding: '10px',\n      borderBottom: '1px solid #ccc',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"Task Name:\"), \" \", task.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 59\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"Task Type:\"), \" \", task.taskType, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, \"Status:\"), \" \", task.status, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"Start Time:\"), \" \", formatDate(task.startTime), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 77\n    }\n  }), task.endTime && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }\n  }, \"End Time:\"), \" \", formatDate(task.endTime), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 77\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"No tasks available for this robot.\"))), showTaskModal && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      padding: '20px',\n      boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"Create Task for \", selectedRobot.name), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Name\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    style: {\n      padding: '10px',\n      marginBottom: '10px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Type\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    style: {\n      padding: '10px',\n      marginBottom: '10px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateTask,\n    style: {\n      padding: '10px',\n      backgroundColor: 'green',\n      color: 'white',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowTaskModal(false),\n    style: {\n      padding: '10px',\n      backgroundColor: 'red',\n      color: 'white',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))));\n}\nexport default RobotManagePage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","RobotManagePage","console","log","tasks","setTasks","robots","setRobots","selectedRobot","setSelectedRobot","message","setMessage","showTaskModal","setShowTaskModal","taskName","setTaskName","taskType","setTaskType","getToken","token","localStorage","getItem","alert","window","location","href","fetchRobots","response","get","headers","data","error","fetchTasksForRobot","robotId","length","handleSelectRobot","robot","_id","handleCreateTask","newTask","name","post","formatDate","date","Date","toLocaleString","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","flex","padding","borderRight","listStyleType","map","key","onClick","borderBottom","cursor","backgroundColor","model","ip","x","y","task","status","startTime","endTime","Fragment","position","top","left","transform","boxShadow","type","placeholder","value","onChange","e","target","width","color","border"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction RobotManagePage() {\n  console.log(\"1: RobotManagePage component rendered\");\n\n  const [tasks, setTasks] = useState([]);\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [message, setMessage] = useState('');\n  const [showTaskModal, setShowTaskModal] = useState(false);  // Modal state\n  const [taskName, setTaskName] = useState('');\n  const [taskType, setTaskType] = useState('');\n\n  // Get token from localStorage\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    console.log(\"2: Token retrieved:\", token);\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n\n  // Fetch all robots from the API\n  const fetchRobots = async () => {\n    console.log(\"Fetching robots\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchRobots\");\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  // Fetch tasks for the selected robot\n  const fetchTasksForRobot = async (robotId) => {\n    console.log(`Fetching tasks for robot: ${robotId}`);\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchTasksForRobot\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(`http://172.30.1.28:8080/task/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data);\n      if (response.data.length === 0) {\n        setMessage('No tasks found for this robot.');\n      } else {\n        setMessage('');\n      }\n    } catch (error) {\n      console.log(\"Error fetching tasks for robot:\", error);\n      setMessage('Failed to retrieve tasks.');\n    }\n  };\n\n  // Handle robot selection\n  const handleSelectRobot = (robot) => {\n    setSelectedRobot(robot);\n    fetchTasksForRobot(robot._id);  // Fetch tasks for the selected robot\n  };\n\n  // Handle task creation\n  const handleCreateTask = async () => {\n    if (!taskName || !taskType) {\n      alert('Please fill out both task name and task type.');\n      return;\n    }\n\n    const token = getToken();\n    try {\n      const newTask = {\n        name: taskName,\n        taskType: taskType,\n        robotId: selectedRobot._id,\n      };\n\n      await axios.post('http://172.30.1.28:8080/task/create', newTask, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      alert('Task added successfully!');\n      setShowTaskModal(false); // Close the modal after successful task creation\n      fetchTasksForRobot(selectedRobot._id); // Refresh task list\n    } catch (error) {\n      console.error('Error adding task:', error);\n      alert('Failed to add task.');\n    }\n  };\n\n  // Fetch robots on component mount\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n\n  // Helper function to format date or show \"N/A\" if date is invalid\n  const formatDate = (date) => {\n    return date ? new Date(date).toLocaleString() : 'N/A';\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <div style={{ display: 'flex' }}>\n        <Navbar />\n      </div>\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Robot and Task Management</h2>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        {/* Left side - Robot list */}\n        <div style={{ flex: '1', padding: '20px', borderRight: '1px solid #ccc' }}>\n          <h3>Robot List</h3>\n          {robots.length === 0 && <p>No robots available.</p>}\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.map((robot) => (\n              <li\n                key={robot._id}\n                onClick={() => handleSelectRobot(robot)}\n                style={{\n                  padding: '10px',\n                  borderBottom: '1px solid #ccc',\n                  marginBottom: '10px',\n                  cursor: 'pointer',\n                  backgroundColor: selectedRobot && selectedRobot._id === robot._id ? '#f0f0f0' : 'white', // Highlight selected robot\n                }}\n              >\n                <strong>Robot Name:</strong> {robot.name} <br />\n                <strong>Model:</strong> {robot.model} <br />\n                <strong>IP:</strong> {robot.ip} <br />\n                <strong>Location:</strong> ({robot.location.x}, {robot.location.y}) <br />\n                <button onClick={() => setShowTaskModal(true)}>Add Task</button> {/* Add Task button */}\n              </li>\n            ))}\n          </ul>\n        </div>\n        {/* Right side - Task list */}\n        <div style={{ flex: '1', padding: '20px' }}>\n          <h3>{selectedRobot ? `Tasks for ${selectedRobot.name}` : 'Tasks for Selected Robot'}</h3>\n          {message && <p>{message}</p>}\n          {tasks.length > 0 ? (\n            <ul style={{ listStyleType: 'none', padding: 0 }}>\n              {tasks.map((task) => (\n                <li key={task._id} style={{ padding: '10px', borderBottom: '1px solid #ccc', marginBottom: '10px' }}>\n                  <strong>Task Name:</strong> {task.name} <br />\n                  <strong>Task Type:</strong> {task.taskType} <br />\n                  <strong>Status:</strong> {task.status} <br />\n                  <strong>Start Time:</strong> {formatDate(task.startTime)} <br />\n                  {task.endTime && (\n                    <>\n                      <strong>End Time:</strong> {formatDate(task.endTime)} <br />\n                    </>\n                  )}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No tasks available for this robot.</p>\n          )}\n        </div>\n      </div>\n\n      {/* Task creation modal */}\n      {showTaskModal && (\n        <div\n          style={{\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            backgroundColor: 'white',\n            padding: '20px',\n            boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n          }}\n        >\n          <h3>Create Task for {selectedRobot.name}</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Task Name\"\n            value={taskName}\n            onChange={(e) => setTaskName(e.target.value)}\n            style={{ padding: '10px', marginBottom: '10px', width: '100%' }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Task Type\"\n            value={taskType}\n            onChange={(e) => setTaskType(e.target.value)}\n            style={{ padding: '10px', marginBottom: '10px', width: '100%' }}\n          />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <button onClick={handleCreateTask} style={{ padding: '10px', backgroundColor: 'green', color: 'white', border: 'none', cursor: 'pointer' }}>Add Task</button>\n            <button onClick={() => setShowTaskModal(false)} style={{ padding: '10px', backgroundColor: 'red', color: 'white', border: 'none', cursor: 'pointer' }}>Cancel</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RobotManagePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}