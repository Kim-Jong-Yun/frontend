{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask'; // CreateTask 컴포넌트 임포트\nimport TaskFlow from './TaskFlow'; // TaskFlow 컴포넌트 임포트\nimport './TaskPage.css'; // CSS 파일을 임포트\n\nfunction TaskPage() {\n  const [tasks, setTasks] = useState([]); // 작업 리스트 상태\n  const [selectedTask, setSelectedTask] = useState(null); // 선택한 작업 상태\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태\n  const [monitoredMap, setMonitoredMap] = useState(null); // 모니터링 중인 맵 정보\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]); // 임시 작업 플로우 상태 추가\n\n  // 작업 이름과 설명을 수정할 상태 변수\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskType, setTaskType] = useState('A'); // 작업 유형 드롭다운 기본 값\n\n  // JWT 토큰을 localStorage에서 가져옴\n  const token = localStorage.getItem('token');\n\n  // 작업 리스트를 가져오는 함수\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        // 모니터링 중인 맵 정보를 먼저 가져옵니다\n        const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const monitoredMap = mapResponse.data;\n        setMonitoredMap(monitoredMap);\n        if (!monitoredMap || !monitoredMap._id) {\n          console.error('모니터링 중인 맵 정보가 없습니다.');\n          return;\n        }\n\n        // 모니터링 중인 맵의 mapID로 작업 조회\n        const taskResponse = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${monitoredMap._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTasks(taskResponse.data);\n\n        // 작업 리스트의 첫 번째 작업을 자동 선택\n        if (taskResponse.data.length > 0) {\n          setSelectedTask(taskResponse.data[0]);\n          setTaskName(taskResponse.data[0].name);\n          setTaskDescription(taskResponse.data[0].description || '');\n          setTaskType(taskResponse.data[0].taskType || 'A');\n        }\n      } catch (error) {\n        console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n      }\n    }\n    fetchTasks();\n  }, [token]);\n\n  // 작업을 선택했을 때 호출되는 함수\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setTaskName(task.name);\n    setTaskDescription(task.description || '');\n    setTaskType(task.taskType || 'A');\n    setTemporaryWorkflow([]); // 새로운 작업 선택 시 임시 플로우 초기화\n  };\n\n  // 팝업 열기/닫기 함수\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  // 작업 생성 후 업데이트 함수\n  const handleTaskCreated = newTask => {\n    setTasks([...tasks, newTask]); // 작업 목록에 추가\n    setTemporaryWorkflow([...temporaryWorkflow, {\n      node: newTask.name,\n      step: newTask.description\n    }]); // 임시 플로우에 추가\n    togglePopup();\n  };\n\n  // 작업 할당 버튼 클릭 시 실행될 함수\n  const handleAssignTask = () => {\n    alert('작업 할당 기능 실행');\n  };\n\n  // 작업 저장 버튼 클릭 시 실행될 함수\n  const handleSaveTask = async () => {\n    if (selectedTask) {\n      try {\n        const updatedTask = {\n          ...selectedTask,\n          workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n          // 기존 워크플로우와 임시 플로우 병합\n          name: taskName,\n          description: taskDescription,\n          taskType: taskType\n        };\n        const response = await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setSelectedTask(response.data);\n        setTemporaryWorkflow([]); // 저장 후 임시 플로우 초기화\n        alert('작업이 성공적으로 저장되었습니다.');\n      } catch (error) {\n        console.error('작업 저장 중 오류가 발생했습니다.', error);\n        alert('작업 저장 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('저장할 작업을 선택하세요.');\n    }\n  };\n\n  // 작업 삭제 버튼 클릭 시 실행될 함수 (이름을 '0'으로 변경)\n  const handleDeleteTask = async () => {\n    if (selectedTask) {\n      try {\n        const response = await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, {\n          name: '0'\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTasks(tasks.filter(task => task._id !== selectedTask._id));\n        setSelectedTask(null);\n        alert('작업이 삭제되었습니다.');\n      } catch (error) {\n        console.error('작업 삭제 중 오류가 발생했습니다.', error);\n        alert('작업 삭제 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('삭제할 작업을 선택하세요.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5 \\uB9AC\\uC2A4\\uD2B8\", monitoredMap && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray',\n      marginLeft: '10px',\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"- \", monitoredMap.name)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-task-btn\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    onClick: () => handleTaskClick(task),\n    className: selectedTask && selectedTask._id === task._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, selectedTask ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uC0C1\\uC138 \\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-field\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC124\\uBA85:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea-field\",\n    value: taskDescription,\n    onChange: e => setTaskDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select-field\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 41\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 41\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  }, \"C\"))), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"created-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, \"\\uC0DD\\uC131\\uC77C:\"), \" \", new Date(selectedTask.createdAt).toLocaleDateString())), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uD50C\\uB85C\\uC6B0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TaskFlow, {\n    workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\")), isPopupOpen && /*#__PURE__*/React.createElement(CreateTask, {\n    onClose: togglePopup,\n    onTaskCreated: handleTaskCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"assign-task-btn\",\n    onClick: handleAssignTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-task-btn\",\n    onClick: handleSaveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-task-btn\",\n    onClick: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC0AD\\uC81C\"))));\n}\nexport default TaskPage;","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","LogoutButton","UserInfo","CreateTask","TaskFlow","TaskPage","tasks","setTasks","selectedTask","setSelectedTask","isPopupOpen","setIsPopupOpen","monitoredMap","setMonitoredMap","temporaryWorkflow","setTemporaryWorkflow","taskName","setTaskName","taskDescription","setTaskDescription","taskType","setTaskType","token","localStorage","getItem","fetchTasks","mapResponse","get","headers","Authorization","data","_id","console","error","taskResponse","length","name","description","handleTaskClick","task","togglePopup","handleTaskCreated","newTask","node","step","handleAssignTask","alert","handleSaveTask","updatedTask","workflow","response","put","handleDeleteTask","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginLeft","fontSize","onClick","map","key","type","value","onChange","e","target","Date","createdAt","toLocaleDateString","onClose","onTaskCreated"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask'; // CreateTask 컴포넌트 임포트\nimport TaskFlow from './TaskFlow'; // TaskFlow 컴포넌트 임포트\nimport './TaskPage.css'; // CSS 파일을 임포트\n\nfunction TaskPage() {\n    const [tasks, setTasks] = useState([]); // 작업 리스트 상태\n    const [selectedTask, setSelectedTask] = useState(null); // 선택한 작업 상태\n    const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태\n    const [monitoredMap, setMonitoredMap] = useState(null); // 모니터링 중인 맵 정보\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]); // 임시 작업 플로우 상태 추가\n\n    // 작업 이름과 설명을 수정할 상태 변수\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskType, setTaskType] = useState('A'); // 작업 유형 드롭다운 기본 값\n\n    // JWT 토큰을 localStorage에서 가져옴\n    const token = localStorage.getItem('token');\n\n    // 작업 리스트를 가져오는 함수\n    useEffect(() => {\n        async function fetchTasks() {\n            try {\n                // 모니터링 중인 맵 정보를 먼저 가져옵니다\n                const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n    \n                const monitoredMap = mapResponse.data;\n                setMonitoredMap(monitoredMap);\n    \n                if (!monitoredMap || !monitoredMap._id) {\n                    console.error('모니터링 중인 맵 정보가 없습니다.');\n                    return;\n                }\n    \n                // 모니터링 중인 맵의 mapID로 작업 조회\n                const taskResponse = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${monitoredMap._id}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setTasks(taskResponse.data);\n    \n                // 작업 리스트의 첫 번째 작업을 자동 선택\n                if (taskResponse.data.length > 0) {\n                    setSelectedTask(taskResponse.data[0]);\n                    setTaskName(taskResponse.data[0].name);\n                    setTaskDescription(taskResponse.data[0].description || '');\n                    setTaskType(taskResponse.data[0].taskType || 'A');\n                }\n            } catch (error) {\n                console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n            }\n        }\n        fetchTasks();\n    }, [token]);\n\n    // 작업을 선택했을 때 호출되는 함수\n    const handleTaskClick = (task) => {\n        setSelectedTask(task);\n        setTaskName(task.name);\n        setTaskDescription(task.description || '');\n        setTaskType(task.taskType || 'A');\n        setTemporaryWorkflow([]); // 새로운 작업 선택 시 임시 플로우 초기화\n    };\n\n    // 팝업 열기/닫기 함수\n    const togglePopup = () => {\n        setIsPopupOpen(!isPopupOpen);\n    };\n\n    // 작업 생성 후 업데이트 함수\n    const handleTaskCreated = (newTask) => {\n        setTasks([...tasks, newTask]); // 작업 목록에 추가\n        setTemporaryWorkflow([...temporaryWorkflow, { node: newTask.name, step: newTask.description }]); // 임시 플로우에 추가\n        togglePopup();\n    };\n\n    // 작업 할당 버튼 클릭 시 실행될 함수\n    const handleAssignTask = () => {\n        alert('작업 할당 기능 실행');\n    };\n\n    // 작업 저장 버튼 클릭 시 실행될 함수\n    const handleSaveTask = async () => {\n        if (selectedTask) {\n            try {\n                const updatedTask = {\n                    ...selectedTask,\n                    workflow: [...selectedTask.workflow, ...temporaryWorkflow], // 기존 워크플로우와 임시 플로우 병합\n                    name: taskName,\n                    description: taskDescription,\n                    taskType: taskType,\n                };\n\n                const response = await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                setSelectedTask(response.data);\n                setTemporaryWorkflow([]); // 저장 후 임시 플로우 초기화\n                alert('작업이 성공적으로 저장되었습니다.');\n            } catch (error) {\n                console.error('작업 저장 중 오류가 발생했습니다.', error);\n                alert('작업 저장 중 오류가 발생했습니다.');\n            }\n        } else {\n            alert('저장할 작업을 선택하세요.');\n        }\n    };\n\n    // 작업 삭제 버튼 클릭 시 실행될 함수 (이름을 '0'으로 변경)\n    const handleDeleteTask = async () => {\n        if (selectedTask) {\n            try {\n                const response = await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, {\n                    name: '0',\n                }, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                setTasks(tasks.filter(task => task._id !== selectedTask._id));\n                setSelectedTask(null);\n                alert('작업이 삭제되었습니다.');\n            } catch (error) {\n                console.error('작업 삭제 중 오류가 발생했습니다.', error);\n                alert('작업 삭제 중 오류가 발생했습니다.');\n            }\n        } else {\n            alert('삭제할 작업을 선택하세요.');\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <header className=\"header\">\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <Navbar className=\"navbar\" />\n            <div className=\"main-content\">\n                {/* 작업 리스트 영역 */}\n                <div className=\"task-list\">\n                    <div className=\"task-list-header\">\n                        <h3>\n                            작업 리스트\n                            {monitoredMap && (\n                                <span style={{ color: 'gray', marginLeft: '10px', fontSize: '14px' }}>\n                                    - {monitoredMap.name}\n                                </span>\n                            )}\n                        </h3>\n                        <button className=\"add-task-btn\" onClick={togglePopup}>+</button>\n                    </div>\n                    <ul>\n                        {tasks.map((task) => (\n                            <li\n                                key={task._id}\n                                onClick={() => handleTaskClick(task)}\n                                className={selectedTask && selectedTask._id === task._id ? 'selected' : ''}\n                            >\n                                {task.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                {/* 선택한 작업의 상세 정보 영역 */}\n                <div className=\"task-details\">\n                    {selectedTask ? (\n                        <div>\n                            <h3>작업 상세 정보</h3>\n                            <label>\n                                <strong>작업 이름:</strong>\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    value={taskName}\n                                    onChange={(e) => setTaskName(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <label>\n                                <strong>작업 설명:</strong>\n                                <textarea\n                                    className=\"textarea-field\"\n                                    value={taskDescription}\n                                    onChange={(e) => setTaskDescription(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <div className=\"task-row\">\n                                <label>\n                                    <strong>작업 유형:</strong>\n                                    <select\n                                        className=\"select-field\"\n                                        value={taskType}\n                                        onChange={(e) => setTaskType(e.target.value)}\n                                    >\n                                        <option value=\"A\">A</option>\n                                        <option value=\"B\">B</option>\n                                        <option value=\"C\">C</option>\n                                    </select>\n                                </label>\n                                <label className=\"created-date\">\n                                    <strong>생성일:</strong> {new Date(selectedTask.createdAt).toLocaleDateString()}\n                                </label>\n                            </div>\n\n                            {/* 작업 플로우 */}\n                            <h4>작업 플로우</h4>\n                            <div className=\"task-flow-section\">\n                                <TaskFlow workflow={[...selectedTask.workflow, ...temporaryWorkflow]} />\n                            </div>\n                        </div>\n                    ) : (\n                        <p>작업을 선택하세요.</p>\n                    )}\n                </div>\n\n                {/* 작업 추가 팝업 */}\n                {isPopupOpen && (\n                    <CreateTask onClose={togglePopup} onTaskCreated={handleTaskCreated} />\n                )}\n\n                {/* 플로팅 버튼 */}\n                <div className=\"floating-buttons\">\n                    <button className=\"assign-task-btn\" onClick={handleAssignTask}>작업 할당</button>\n                    <button className=\"save-task-btn\" onClick={handleSaveTask}>작업 저장</button>\n                    <button className=\"delete-task-btn\" onClick={handleDeleteTask}>작업 삭제</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}