{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nfunction TaskListPage() {\n  const [tasks, setTasks] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Get token from localStorage\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n\n  // Fetch all tasks from the API\n  const fetchTasks = async () => {\n    const token = getToken();\n    if (!token) return; // Exit if no token is found\n\n    try {\n      const response = await axios.get('http://172.30.1.28:6000/task/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // Set the tasks in state\n    } catch (error) {\n      // Handle errors\n      if (error.response) {\n        var _error$response$data;\n        setMessage(`Failed to retrieve tasks: ${error.response.status} - ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n      } else if (error.request) {\n        setMessage('No response from server. Please check your network or server status.');\n        console.error('No response:', error.request);\n      } else {\n        setMessage('Error: Failed to retrieve tasks.');\n        console.error('Error:', error.message);\n      }\n    }\n  };\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"All Tasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, message), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    style: {\n      padding: '10px',\n      borderBottom: '1px solid #ccc',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Task Name:\"), \" \", task.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 55\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Task Type:\"), \" \", task.taskType, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 59\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Status:\"), \" \", task.status, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Start Time:\"), \" \", new Date(task.startTime).toLocaleString(), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 88\n    }\n  }), task.endTime && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"End Time:\"), \" \", new Date(task.endTime).toLocaleString(), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 88\n    }\n  })))))));\n}\nexport default TaskListPage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","TaskListPage","tasks","setTasks","message","setMessage","getToken","token","localStorage","getItem","alert","window","location","href","fetchTasks","response","get","headers","data","error","_error$response$data","status","request","console","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","flexDirection","alignItems","listStyleType","padding","map","task","key","_id","borderBottom","name","taskType","Date","startTime","toLocaleString","endTime","Fragment"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction TaskListPage() {\n  const [tasks, setTasks] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Get token from localStorage\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n\n  // Fetch all tasks from the API\n  const fetchTasks = async () => {\n    const token = getToken();\n    if (!token) return; // Exit if no token is found\n\n    try {\n      const response = await axios.get('http://172.30.1.28:6000/task/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data); // Set the tasks in state\n    } catch (error) {\n      // Handle errors\n      if (error.response) {\n        setMessage(`Failed to retrieve tasks: ${error.response.status} - ${error.response.data?.message || error.message}`);\n      } else if (error.request) {\n        setMessage('No response from server. Please check your network or server status.');\n        console.error('No response:', error.request);\n      } else {\n        setMessage('Error: Failed to retrieve tasks.');\n        console.error('Error:', error.message);\n      }\n    }\n  };\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <div style={{ display: 'flex' }}>\n        <Navbar />\n      </div>\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>All Tasks</h2>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {message && <p>{message}</p>}\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\n          {tasks.map((task) => (\n            <li key={task._id} style={{ padding: '10px', borderBottom: '1px solid #ccc', marginBottom: '10px' }}>\n              <strong>Task Name:</strong> {task.name} <br />\n              <strong>Task Type:</strong> {task.taskType} <br />\n              <strong>Status:</strong> {task.status} <br />\n              <strong>Start Time:</strong> {new Date(task.startTime).toLocaleString()} <br />\n              {task.endTime && (\n                <>\n                  <strong>End Time:</strong> {new Date(task.endTime).toLocaleString()} <br />\n                </>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskListPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,sCAAsC,CAAC;MAC7CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;MACjC,OAAO,IAAI;IACb;IACA,OAAON,KAAK;EACd,CAAC;;EAED;EACA,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMP,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE,OAAO,CAAC;;IAEpB,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,kCAAkC,EAAE;QACnEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUV,KAAK;QAClC;MACF,CAAC,CAAC;MACFJ,QAAQ,CAACY,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACJ,QAAQ,EAAE;QAAA,IAAAK,oBAAA;QAClBf,UAAU,CAAC,6BAA6Bc,KAAK,CAACJ,QAAQ,CAACM,MAAM,MAAM,EAAAD,oBAAA,GAAAD,KAAK,CAACJ,QAAQ,CAACG,IAAI,cAAAE,oBAAA,uBAAnBA,oBAAA,CAAqBhB,OAAO,KAAIe,KAAK,CAACf,OAAO,EAAE,CAAC;MACrH,CAAC,MAAM,IAAIe,KAAK,CAACG,OAAO,EAAE;QACxBjB,UAAU,CAAC,sEAAsE,CAAC;QAClFkB,OAAO,CAACJ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACG,OAAO,CAAC;MAC9C,CAAC,MAAM;QACLjB,UAAU,CAAC,kCAAkC,CAAC;QAC9CkB,OAAO,CAACJ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACf,OAAO,CAAC;MACxC;IACF;EACF,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACdkB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,KAAA,CAAA8B,aAAA;IAAKC,KAAK,EAAE;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9DvC,KAAA,CAAA8B,aAAA;IAAQC,KAAK,EAAE;MAAES,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,eAAe;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxFvC,KAAA,CAAA8B,aAAA,CAACzB,QAAQ;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACZvC,KAAA,CAAA8B,aAAA,CAAC1B,YAAY;IAAA8B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACT,CAAC,eACTvC,KAAA,CAAA8B,aAAA;IAAKC,KAAK,EAAE;MAAES,OAAO,EAAE;IAAO,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BvC,KAAA,CAAA8B,aAAA,CAAC3B,MAAM;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACN,CAAC,eACNvC,KAAA,CAAA8B,aAAA;IAAIC,KAAK,EAAE;MAAEY,SAAS,EAAE,QAAQ;MAAEV,MAAM,EAAE;IAAS,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAa,CAAC,eACpEvC,KAAA,CAAA8B,aAAA;IAAKC,KAAK,EAAE;MAAES,OAAO,EAAE,MAAM;MAAEI,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5E7B,OAAO,iBAAIV,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI7B,OAAW,CAAC,eAC5BV,KAAA,CAAA8B,aAAA;IAAIC,KAAK,EAAE;MAAEe,aAAa,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9C/B,KAAK,CAACwC,GAAG,CAAEC,IAAI,iBACdjD,KAAA,CAAA8B,aAAA;IAAIoB,GAAG,EAAED,IAAI,CAACE,GAAI;IAACpB,KAAK,EAAE;MAAEgB,OAAO,EAAE,MAAM;MAAEK,YAAY,EAAE,gBAAgB;MAAEV,YAAY,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClGvC,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,YAAkB,CAAC,KAAC,EAACU,IAAI,CAACI,IAAI,EAAC,GAAC,eAAArD,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eAC9CvC,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,YAAkB,CAAC,KAAC,EAACU,IAAI,CAACK,QAAQ,EAAC,GAAC,eAAAtD,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eAClDvC,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,SAAe,CAAC,KAAC,EAACU,IAAI,CAACtB,MAAM,EAAC,GAAC,eAAA3B,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eAC7CvC,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,aAAmB,CAAC,KAAC,EAAC,IAAIgB,IAAI,CAACN,IAAI,CAACO,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC,GAAC,eAAAzD,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,EAC9EU,IAAI,CAACS,OAAO,iBACX1D,KAAA,CAAA8B,aAAA,CAAA9B,KAAA,CAAA2D,QAAA,qBACE3D,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,WAAiB,CAAC,KAAC,EAAC,IAAIgB,IAAI,CAACN,IAAI,CAACS,OAAO,CAAC,CAACD,cAAc,CAAC,CAAC,EAAC,GAAC,eAAAzD,KAAA,CAAA8B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAC1E,CAEF,CACL,CACC,CACD,CACF,CAAC;AAEV;AAEA,eAAehC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}