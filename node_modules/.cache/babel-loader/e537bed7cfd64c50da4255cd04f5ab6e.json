{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TaskLogComponent.js\";\nimport React, { useState } from 'react';\nimport './TestPage.css'; // CSS 파일 임포트\n\nfunction TaskLogComponent({\n  tasks\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleTaskLog = () => {\n    setIsOpen(!isOpen);\n  };\n  const formatDate = date => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-log-header\",\n    onClick: toggleTaskLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, isOpen ? '작업 로그 내리기' : '작업 로그 올리기'), /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-log-slide ${isOpen ? 'open' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-log-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07 IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uD0DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uC791 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC885\\uB8CC \\uC2DC\\uAC04\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, task.robotIp), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, task.taskType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, formatDate(task.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, formatDate(task.endTime)))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    className: \"no-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))))));\n}\nexport default TaskLogComponent;","map":{"version":3,"names":["React","useState","TaskLogComponent","tasks","isOpen","setIsOpen","toggleTaskLog","formatDate","date","parsedDate","Date","isNaN","toLocaleString","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","task","index","key","name","robotIp","taskType","status","startTime","endTime","colSpan"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TaskLogComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TestPage.css'; // CSS 파일 임포트\n\nfunction TaskLogComponent({ tasks }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleTaskLog = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const formatDate = (date) => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n\n  return (\n    <div>\n      <div className=\"task-log-header\" onClick={toggleTaskLog}>\n        {isOpen ? '작업 로그 내리기' : '작업 로그 올리기'}\n      </div>\n\n      <div className={`task-log-slide ${isOpen ? 'open' : ''}`}>\n        <div className=\"task-log-content\">\n          <h3>작업 로그</h3>\n          <table>\n            <thead>\n              <tr>\n                <th>작업 이름</th>\n                <th>로봇 IP</th>\n                <th>작업 유형</th>\n                <th>상태</th>\n                <th>시작 시간</th>\n                <th>종료 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                  <tr key={index}>\n                    <td>{task.name}</td>\n                    <td>{task.robotIp}</td>\n                    <td>{task.taskType}</td>\n                    <td>{task.status}</td>\n                    <td>{formatDate(task.startTime)}</td>\n                    <td>{formatDate(task.endTime)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" className=\"no-data\">작업 로그가 없습니다.</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskLogComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB,CAAC,CAAC;;AAEzB,SAASC,gBAAgBA,CAAC;EAAEC;AAAM,CAAC,EAAE;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMG,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IACjC,OAAOG,KAAK,CAACF,UAAU,CAAC,GAAG,KAAK,GAAGA,UAAU,CAACG,cAAc,CAAC,CAAC;EAChE,CAAC;EAED,oBACEZ,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnB,KAAA,CAAAa,aAAA;IAAKO,SAAS,EAAC,iBAAiB;IAACC,OAAO,EAAEf,aAAc;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrDf,MAAM,GAAG,WAAW,GAAG,WACrB,CAAC,eAENJ,KAAA,CAAAa,aAAA;IAAKO,SAAS,EAAE,kBAAkBhB,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvDnB,KAAA,CAAAa,aAAA;IAAKO,SAAS,EAAC,kBAAkB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACdnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACdnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iBAAS,CAAC,eACdnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACdnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAM,CAAC,eACXnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACdnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CACX,CACC,CAAC,eACRnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGhB,KAAK,CAACmB,MAAM,GAAG,CAAC,GACfnB,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBzB,KAAA,CAAAa,aAAA;IAAIa,GAAG,EAAED,KAAM;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKK,IAAI,CAACG,IAAS,CAAC,eACpB3B,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKK,IAAI,CAACI,OAAY,CAAC,eACvB5B,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKK,IAAI,CAACK,QAAa,CAAC,eACxB7B,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKK,IAAI,CAACM,MAAW,CAAC,eACtB9B,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKZ,UAAU,CAACiB,IAAI,CAACO,SAAS,CAAM,CAAC,eACrC/B,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKZ,UAAU,CAACiB,IAAI,CAACQ,OAAO,CAAM,CAChC,CACL,CAAC,gBAEFhC,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnB,KAAA,CAAAa,aAAA;IAAIoB,OAAO,EAAC,GAAG;IAACb,SAAS,EAAC,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2DAAgB,CAClD,CAED,CACF,CACJ,CACF,CACF,CAAC;AAEV;AAEA,eAAejB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}