{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask'; // CreateTask 컴포넌트 임포트\nimport './TaskPage.css'; // CSS 파일을 임포트\n\nfunction TaskPage() {\n  const [tasks, setTasks] = useState([]); // 작업 리스트 상태\n  const [selectedTask, setSelectedTask] = useState(null); // 선택한 작업 상태\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태\n\n  // 작업 이름과 설명을 수정할 상태 변수\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskType, setTaskType] = useState('A'); // 작업 유형 드롭다운 기본 값\n\n  // JWT 토큰을 localStorage에서 가져옴\n  const token = localStorage.getItem('token');\n\n  // 작업 리스트를 가져오는 함수\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        const response = await axios.get('http://172.30.1.30:8080/task/tasks', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // 인증 헤더 추가\n        });\n        setTasks(response.data);\n\n        // 작업 리스트의 첫 번째 작업을 자동 선택\n        if (response.data.length > 0) {\n          setSelectedTask(response.data[0]);\n          setTaskName(response.data[0].name);\n          setTaskDescription(response.data[0].description || '');\n          setTaskType(response.data[0].taskType || 'A');\n        }\n      } catch (error) {\n        console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n      }\n    }\n    fetchTasks();\n  }, [token]); // 토큰이 있을 때만 요청\n\n  // 작업을 선택했을 때 호출되는 함수\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setTaskName(task.name);\n    setTaskDescription(task.description || '');\n    setTaskType(task.taskType || 'A');\n  };\n\n  // 팝업 열기/닫기 함수\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  // 작업 생성 후 업데이트 함수\n  const handleTaskCreated = newTask => {\n    setTasks([...tasks, newTask]); // 새로운 작업을 리스트에 추가\n  };\n\n  // 작업 할당 버튼 클릭 시 실행될 함수\n  const handleAssignTask = () => {\n    alert('작업 할당 기능 실행');\n  };\n\n  // 작업 저장 버튼 클릭 시 실행될 함수\n  const handleSaveTask = async () => {\n    if (selectedTask) {\n      try {\n        const updatedTask = {\n          name: taskName,\n          description: taskDescription,\n          taskType: taskType,\n          workflow: selectedTask.workflow // 기존 워크플로우 유지\n        };\n        const response = await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // 인증 헤더 추가\n        });\n        setSelectedTask(response.data); // 업데이트된 작업을 선택된 작업으로 설정\n        alert('작업이 성공적으로 저장되었습니다.');\n      } catch (error) {\n        console.error('작업 저장 중 오류가 발생했습니다.', error);\n        alert('작업 저장 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('저장할 작업을 선택하세요.');\n    }\n  };\n\n  // 작업 삭제 버튼 클릭 시 실행될 함수\n  const handleDeleteTask = () => {\n    if (selectedTask) {\n      alert(`${selectedTask.name} 작업 삭제 기능 실행`);\n    } else {\n      alert('삭제할 작업을 선택하세요.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-task-btn\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    onClick: () => handleTaskClick(task),\n    className: selectedTask && selectedTask._id === task._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, selectedTask ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uC0C1\\uC138 \\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-field\" // 텍스트 필드 크기 조정\n    ,\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC124\\uBA85:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea-field\" // 설명 필드 크기 조정\n    ,\n    value: taskDescription,\n    onChange: e => setTaskDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select-field\" // 드롭다운 크기 조정\n    ,\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 41\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, \"C\"))), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"created-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, \"\\uC0DD\\uC131\\uC77C:\"), \" \", new Date(selectedTask.createdAt).toLocaleDateString())), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uD50C\\uB85C\\uC6B0\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, selectedTask.workflow.map((flow, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }, \"\\uB178\\uB4DC:\"), \" \", flow.node, \", \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 75\n    }\n  }, \"\\uB2E8\\uACC4:\"), \" \", flow.step, \", \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 109\n    }\n  }, \"\\uC0C1\\uD0DC:\"), \" \", flow.status)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\")), isPopupOpen && /*#__PURE__*/React.createElement(CreateTask, {\n    onClose: togglePopup,\n    onTaskCreated: handleTaskCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"assign-task-btn\",\n    onClick: handleAssignTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-task-btn\",\n    onClick: handleSaveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-task-btn\",\n    onClick: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC0AD\\uC81C\"))));\n}\nexport default TaskPage;","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","LogoutButton","UserInfo","CreateTask","TaskPage","tasks","setTasks","selectedTask","setSelectedTask","isPopupOpen","setIsPopupOpen","taskName","setTaskName","taskDescription","setTaskDescription","taskType","setTaskType","token","localStorage","getItem","fetchTasks","response","get","headers","Authorization","data","length","name","description","error","console","handleTaskClick","task","togglePopup","handleTaskCreated","newTask","handleAssignTask","alert","handleSaveTask","updatedTask","workflow","put","_id","handleDeleteTask","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","key","type","value","onChange","e","target","Date","createdAt","toLocaleDateString","flow","index","node","step","status","onClose","onTaskCreated"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask'; // CreateTask 컴포넌트 임포트\nimport './TaskPage.css'; // CSS 파일을 임포트\n\nfunction TaskPage() {\n    const [tasks, setTasks] = useState([]); // 작업 리스트 상태\n    const [selectedTask, setSelectedTask] = useState(null); // 선택한 작업 상태\n    const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태\n\n    // 작업 이름과 설명을 수정할 상태 변수\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskType, setTaskType] = useState('A'); // 작업 유형 드롭다운 기본 값\n\n    // JWT 토큰을 localStorage에서 가져옴\n    const token = localStorage.getItem('token');\n\n    // 작업 리스트를 가져오는 함수\n    useEffect(() => {\n        async function fetchTasks() {\n            try {\n                const response = await axios.get('http://172.30.1.30:8080/task/tasks', {\n                    headers: { Authorization: `Bearer ${token}` }, // 인증 헤더 추가\n                });\n                setTasks(response.data);\n\n                // 작업 리스트의 첫 번째 작업을 자동 선택\n                if (response.data.length > 0) {\n                    setSelectedTask(response.data[0]);\n                    setTaskName(response.data[0].name);\n                    setTaskDescription(response.data[0].description || '');\n                    setTaskType(response.data[0].taskType || 'A');\n                }\n            } catch (error) {\n                console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n            }\n        }\n        fetchTasks();\n    }, [token]); // 토큰이 있을 때만 요청\n\n    // 작업을 선택했을 때 호출되는 함수\n    const handleTaskClick = (task) => {\n        setSelectedTask(task);\n        setTaskName(task.name);\n        setTaskDescription(task.description || '');\n        setTaskType(task.taskType || 'A');\n    };\n\n    // 팝업 열기/닫기 함수\n    const togglePopup = () => {\n        setIsPopupOpen(!isPopupOpen);\n    };\n\n    // 작업 생성 후 업데이트 함수\n    const handleTaskCreated = (newTask) => {\n        setTasks([...tasks, newTask]); // 새로운 작업을 리스트에 추가\n    };\n\n    // 작업 할당 버튼 클릭 시 실행될 함수\n    const handleAssignTask = () => {\n        alert('작업 할당 기능 실행');\n    };\n\n    // 작업 저장 버튼 클릭 시 실행될 함수\n    const handleSaveTask = async () => {\n        if (selectedTask) {\n            try {\n                const updatedTask = {\n                    name: taskName,\n                    description: taskDescription,\n                    taskType: taskType,\n                    workflow: selectedTask.workflow // 기존 워크플로우 유지\n                };\n\n                const response = await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n                    headers: { Authorization: `Bearer ${token}` }, // 인증 헤더 추가\n                });\n\n                setSelectedTask(response.data); // 업데이트된 작업을 선택된 작업으로 설정\n                alert('작업이 성공적으로 저장되었습니다.');\n            } catch (error) {\n                console.error('작업 저장 중 오류가 발생했습니다.', error);\n                alert('작업 저장 중 오류가 발생했습니다.');\n            }\n        } else {\n            alert('저장할 작업을 선택하세요.');\n        }\n    };\n\n    // 작업 삭제 버튼 클릭 시 실행될 함수\n    const handleDeleteTask = () => {\n        if (selectedTask) {\n            alert(`${selectedTask.name} 작업 삭제 기능 실행`);\n        } else {\n            alert('삭제할 작업을 선택하세요.');\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <header className=\"header\">\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div className=\"content\">\n                <Navbar />\n            </div>\n            <div className=\"content\">\n                {/* 작업 리스트 영역 */}\n                <div className=\"task-list\">\n                    <div className=\"task-list-header\">\n                        <h3>작업 리스트</h3>\n                        <button className=\"add-task-btn\" onClick={togglePopup}>+</button>\n                    </div>\n                    <ul>\n                        {tasks.map((task) => (\n                            <li\n                                key={task._id}\n                                onClick={() => handleTaskClick(task)}\n                                className={selectedTask && selectedTask._id === task._id ? 'selected' : ''}\n                            >\n                                {task.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                {/* 선택한 작업의 상세 정보 영역 */}\n                <div className=\"task-details\">\n                    {selectedTask ? (\n                        <div>\n                            <h3>작업 상세 정보</h3>\n                            <label>\n                                <strong>작업 이름:</strong>\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\" // 텍스트 필드 크기 조정\n                                    value={taskName}\n                                    onChange={(e) => setTaskName(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <label>\n                                <strong>작업 설명:</strong>\n                                <textarea\n                                    className=\"textarea-field\" // 설명 필드 크기 조정\n                                    value={taskDescription}\n                                    onChange={(e) => setTaskDescription(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <div className=\"task-row\">\n                                <label>\n                                    <strong>작업 유형:</strong>\n                                    <select\n                                        className=\"select-field\" // 드롭다운 크기 조정\n                                        value={taskType}\n                                        onChange={(e) => setTaskType(e.target.value)}\n                                    >\n                                        <option value=\"A\">A</option>\n                                        <option value=\"B\">B</option>\n                                        <option value=\"C\">C</option>\n                                    </select>\n                                </label>\n                                <label className=\"created-date\">\n                                    <strong>생성일:</strong> {new Date(selectedTask.createdAt).toLocaleDateString()}\n                                </label>\n                            </div>\n                            <h4>작업 플로우</h4>\n                            <ul>\n                                {selectedTask.workflow.map((flow, index) => (\n                                    <li key={index}>\n                                        <strong>노드:</strong> {flow.node}, <strong>단계:</strong> {flow.step}, <strong>상태:</strong> {flow.status}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    ) : (\n                        <p>작업을 선택하세요.</p>\n                    )}\n                </div>\n\n                {/* 작업 추가 팝업 */}\n                {isPopupOpen && (\n                    <CreateTask onClose={togglePopup} onTaskCreated={handleTaskCreated} />\n                )}\n\n                {/* 플로팅 버튼 */}\n                <div className=\"floating-buttons\">\n                    <button className=\"assign-task-btn\" onClick={handleAssignTask}>작업 할당</button>\n                    <button className=\"save-task-btn\" onClick={handleSaveTask}>작업 저장</button>\n                    <button className=\"delete-task-btn\" onClick={handleDeleteTask}>작업 삭제</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}