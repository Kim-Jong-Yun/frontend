{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]); // 작업 로그 상태 추가\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    fetchMonitoredMap();\n    fetchMapMetadata();\n    fetchRobots(); // 로봇 리스트 API 호출\n    fetchAllTasks(); // 모든 작업 로그 API 호출\n  }, []);\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n        drawMapAndRobots(img.width, img.height); // 이미지 크기대로 canvas 조정 및 그리기\n      };\n      img.onerror = err => {\n        console.error('Error loading map image:', err);\n      };\n    } catch (error) {\n      console.error('Error fetching monitored map:', error);\n    }\n  };\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('Error fetching map metadata:', error);\n    }\n  };\n  const fetchAllTasks = async () => {\n    console.log(\"Fetching all tasks (logs)\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchAllTasks\");\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const fetchRobots = async () => {\n    console.log(\"Fetching robots\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchRobots\");\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n  const drawMapAndRobots = (imgWidth, imgHeight) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.error('Canvas element is not available');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n\n    // 이미지 로드 완료 시\n    mapImage.onload = () => {\n      // 캔버스 크기를 이미지 크기로 조정\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n\n      // 이미지 그리기\n      ctx.drawImage(mapImage, 0, 0, imgWidth, imgHeight);\n\n      // 로봇 위치 표시\n      robots.forEach(robot => {\n        const {\n          x,\n          y\n        } = robot.location;\n        const {\n          mapX,\n          mapY\n        } = worldToMap(x, y, imgWidth, imgHeight, mapResolution);\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n    mapImage.onerror = err => {\n      console.error('Error drawing map image:', err);\n    };\n  };\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return {\n      mapX,\n      mapY\n    };\n  };\n\n  // Helper function to format date or show \"N/A\" if date is invalid\n  const formatDate = date => {\n    return date ? new Date(date).toLocaleString() : 'N/A';\n  };\n  useEffect(() => {\n    if (mapUrl && mapDimensions.width && mapDimensions.height) {\n      drawMapAndRobots(mapDimensions.width, mapDimensions.height);\n    }\n  }, [mapUrl, robots]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px',\n      position: 'relative',\n      minHeight: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 3,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Loading map...\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      padding: '20px',\n      borderLeft: '1px solid #ccc',\n      overflowY: 'auto',\n      maxHeight: '80vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Robot List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, robots.length > 0 ? robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    style: {\n      marginBottom: '10px',\n      borderBottom: '1px solid #ddd',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 27\n    }\n  }), \" \", robot.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 27\n    }\n  }), \" \", robot.status.state), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 27\n    }\n  }, \"Battery:\"), \" \", robot.status.battery, \"%\")))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"No robots connected.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 'calc(98% - 500px)',\n      // 모니터링 맵과 일치하게 만듦, 250px은 로봇 리스트 영역\n      padding: '10px 20px',\n      marginTop: '20px',\n      borderTop: '1px solid #ccc',\n      height: '25vh',\n      backgroundColor: '#f9f9f9',\n      overflowY: 'fix'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, \"Task Logs\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '80%',\n      overflowY: 'scroll',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: '100%',\n      borderCollapse: 'collapse'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    style: {\n      position: 'sticky',\n      top: 0,\n      backgroundColor: '#f9f9f9',\n      zIndex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"Robot IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, \"Task Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"End Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, task.robotIp), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, task.taskType), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, formatDate(task.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, formatDate(task.endTime)))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    style: {\n      textAlign: 'center',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, \"No task logs available.\")))))));\n}\nexport default TestPage;","map":{"version":3,"names":["Navbar","LogoutButton","UserInfo","React","useState","useEffect","useRef","axios","TestPage","mapUrl","setMapUrl","robots","setRobots","tasks","setTasks","canvasRef","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","fetchMonitoredMap","fetchMapMetadata","fetchRobots","fetchAllTasks","getToken","token","localStorage","getItem","alert","window","location","href","response","get","headers","Authorization","responseType","url","URL","createObjectURL","data","img","Image","src","onload","drawMapAndRobots","onerror","err","console","error","metadata","resolution","parseFloat","match","log","imgWidth","imgHeight","canvas","current","ctx","getContext","mapImage","drawImage","forEach","robot","x","y","mapX","mapY","worldToMap","fillStyle","beginPath","arc","Math","PI","fill","mapWidth","mapHeight","formatDate","date","Date","toLocaleString","createElement","style","fontFamily","margin","position","minHeight","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","flexGrow","flex","alignItems","marginRight","ref","border","padding","borderLeft","overflowY","maxHeight","listStyleType","length","map","key","_id","borderBottom","name","status","state","battery","marginTop","borderTop","backgroundColor","borderCollapse","top","zIndex","task","index","robotIp","taskType","startTime","endTime","colSpan"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["import Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);  // 작업 로그 상태 추가\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    fetchMonitoredMap();\n    fetchMapMetadata();\n    fetchRobots(); // 로봇 리스트 API 호출\n    fetchAllTasks(); // 모든 작업 로그 API 호출\n  }, []);\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({ width: img.width, height: img.height });\n        drawMapAndRobots(img.width, img.height); // 이미지 크기대로 canvas 조정 및 그리기\n      };\n      img.onerror = (err) => {\n        console.error('Error loading map image:', err);\n      };\n\n    } catch (error) {\n      console.error('Error fetching monitored map:', error);\n    }\n  };\n\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('Error fetching map metadata:', error);\n    }\n  };\n\n  const fetchAllTasks = async () => {\n    console.log(\"Fetching all tasks (logs)\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchAllTasks\");\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const fetchRobots = async () => {\n    console.log(\"Fetching robots\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchRobots\");\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  const drawMapAndRobots = (imgWidth, imgHeight) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.error('Canvas element is not available');\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n\n    // 이미지 로드 완료 시\n    mapImage.onload = () => {\n      // 캔버스 크기를 이미지 크기로 조정\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n\n      // 이미지 그리기\n      ctx.drawImage(mapImage, 0, 0, imgWidth, imgHeight);\n\n      // 로봇 위치 표시\n      robots.forEach((robot) => {\n        const { x, y } = robot.location;\n        const { mapX, mapY } = worldToMap(x, y, imgWidth, imgHeight, mapResolution);\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n\n    mapImage.onerror = (err) => {\n      console.error('Error drawing map image:', err);\n    };\n  };\n\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return { mapX, mapY };\n  };\n\n  // Helper function to format date or show \"N/A\" if date is invalid\n  const formatDate = (date) => {\n    return date ? new Date(date).toLocaleString() : 'N/A';\n  };\n\n  useEffect(() => {\n    if (mapUrl && mapDimensions.width && mapDimensions.height) {\n      drawMapAndRobots(mapDimensions.width, mapDimensions.height);\n    }\n  }, [mapUrl, robots]);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px', position: 'relative', minHeight: '100vh' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <h1 style={{ textAlign: 'center', margin: '20px 0' }}></h1>\n      <div style={{ display: 'flex', flexGrow: 1 }}>\n        {/* Left side - Map canvas */}\n        <div style={{ flex: 3, display: 'flex', justifyContent: 'center', alignItems: 'center', marginRight: '20px' }}>\n          {mapUrl ? (\n            <canvas ref={canvasRef} style={{ border: '1px solid #ccc' }}></canvas>\n          ) : (\n            <p>Loading map...</p>\n          )}\n        </div>\n\n        {/* Right side - Robot list */}\n        <div style={{ flex: 1, padding: '20px', borderLeft: '1px solid #ccc', overflowY: 'auto', maxHeight: '80vh' }}>\n          <h3>Robot List</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.length > 0 ? (\n              robots.map((robot) => (\n                <li key={robot._id} style={{ marginBottom: '10px', borderBottom: '1px solid #ddd', padding: '10px' }}>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span><strong></strong> {robot.name}</span>\n                    <span><strong></strong> {robot.status.state}</span>\n                    <span><strong>Battery:</strong> {robot.status.battery}%</span>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <p>No robots connected.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {/* Task logs section */}\n      <div style={{\n        width: 'calc(98% - 500px)', // 모니터링 맵과 일치하게 만듦, 250px은 로봇 리스트 영역\n        padding: '10px 20px',\n        marginTop: '20px',\n        borderTop: '1px solid #ccc',\n        height: '25vh',\n        backgroundColor: '#f9f9f9',\n        overflowY: 'fix'\n      }}>\n        <h3>Task Logs</h3>\n        <div style={{ height: '80%', overflowY: 'scroll', border: '1px solid #ccc' }}>\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead style={{ position: 'sticky', top: 0, backgroundColor: '#f9f9f9', zIndex: 1 }}>\n              <tr>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>Task Name</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>Robot IP</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>Task Type</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>Status</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>Start Time</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>End Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                  <tr key={index}>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.name}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.robotIp}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.taskType}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.status}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{formatDate(task.startTime)}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{formatDate(task.endTime)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" style={{ textAlign: 'center', padding: '10px' }}>No task logs available.</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}