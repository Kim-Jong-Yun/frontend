{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport NodeCreateComponent from '../components/NodeCreateComponent';\nimport './Mapmanage.css';\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [nodePopupVisible, setNodePopupVisible] = useState(false);\n  const [nodeCoordinates, setNodeCoordinates] = useState({\n    x: 0,\n    y: 0\n  });\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n  const handleSelectMap = async map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n    }\n  };\n  const handleFileChange = e => setMapFile(e.target.files[0]);\n  const handleYamlFileChange = e => setYamlFile(e.target.files[0]);\n  const handleUpdateMap = async e => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Map updated successfully');\n      setIsEditPopupOpen(false);\n      fetchMaps();\n    } catch (error) {\n      console.error('Error updating map:', error);\n    }\n  };\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false);\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n    }\n  };\n  const openEditPopup = map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsEditPopupOpen(true);\n  };\n  const handleMapClick = e => {\n    if (!nodePopupVisible) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNodeCoordinates({\n      x,\n      y\n    });\n  };\n  const openNodeCreationPopup = () => {\n    setNodePopupVisible(true);\n  };\n  const handleNodeCreated = () => {\n    console.log('노드가 성공적으로 생성되었습니다.');\n    setNodePopupVisible(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Map List\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${selectedMap && selectedMap._id === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-right-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"toolbar-button\",\n    onClick: openNodeCreationPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, \"\\uB178\\uB4DC \\uC0DD\\uC131\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-container\",\n    onClick: handleMapClick,\n    ref: canvasRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    alt: \"Selected Map\",\n    className: \"map-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 91\n    }\n  }, \"Select a map to view its image\")))), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, \"Upload Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Edit Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), nodePopupVisible && selectedMap && /*#__PURE__*/React.createElement(NodeCreateComponent, {\n    coordinates: nodeCoordinates,\n    mapId: selectedMap._id,\n    onClose: () => setNodePopupVisible(false),\n    onNodeCreated: handleNodeCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faEdit","Navbar","LogoutButton","UserInfo","NodeCreateComponent","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","nodePopupVisible","setNodePopupVisible","nodeCoordinates","setNodeCoordinates","x","y","canvasRef","fetchMaps","token","localStorage","getItem","alert","response","get","headers","Authorization","data","error","console","handleSelectMap","map","name","description","_id","responseType","imageUrl","URL","createObjectURL","handleDeleteMap","mapId","confirmDelete","window","confirm","put","handleFileChange","e","target","files","handleYamlFileChange","handleUpdateMap","preventDefault","length","handleUploadMap","formData","FormData","append","post","openEditPopup","handleMapClick","rect","current","getBoundingClientRect","clientX","left","clientY","top","openNodeCreationPopup","handleNodeCreated","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","key","icon","ref","src","alt","onSubmit","type","value","onChange","required","accept","coordinates","onClose","onNodeCreated"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport NodeCreateComponent from '../components/NodeCreateComponent';\nimport './Mapmanage.css';\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [nodePopupVisible, setNodePopupVisible] = useState(false);\n  const [nodeCoordinates, setNodeCoordinates] = useState({ x: 0, y: 0 });\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n    }\n  };\n\n  const handleFileChange = (e) => setMapFile(e.target.files[0]);\n  const handleYamlFileChange = (e) => setYamlFile(e.target.files[0]);\n\n  const handleUpdateMap = async (e) => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n      }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      alert('Map updated successfully');\n      setIsEditPopupOpen(false);\n      fetchMaps();\n    } catch (error) {\n      console.error('Error updating map:', error);\n    }\n  };\n\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false);\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n    }\n  };\n\n  const openEditPopup = (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsEditPopupOpen(true);\n  };\n\n  const handleMapClick = (e) => {\n    if (!nodePopupVisible) return;\n\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNodeCoordinates({ x, y });\n  };\n\n  const openNodeCreationPopup = () => {\n    setNodePopupVisible(true);\n  };\n\n  const handleNodeCreated = () => {\n    console.log('노드가 성공적으로 생성되었습니다.');\n    setNodePopupVisible(false);\n  };\n\n  return (\n    <div className=\"map-management-page\">\n      <header className=\"map-management-header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      <div className=\"map-management-content\">\n        {/* 맵 리스트 */}\n        <div className=\"map-list-container\">\n          <h2 className=\"map-list-header\">\n            Map List\n            <button onClick={() => setIsUploadPopupOpen(true)} className=\"add-map-button\">+</button>\n          </h2>\n          <ul className=\"map-list\">\n            {maps.map((map) => (\n              <li key={map._id} className={`map-list-item ${selectedMap && selectedMap._id === map._id ? 'selected-map' : ''}`}>\n                <span onClick={() => handleSelectMap(map)} className=\"map-list-item-name\">{map.name}</span>\n                <button onClick={() => openEditPopup(map)} className=\"edit-map-button\">\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button onClick={() => handleDeleteMap(map._id)} className=\"delete-map-button\">&times;</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* 툴바와 맵 이미지 */}\n        <div className=\"map-right-container\">\n          <div className=\"toolbar\">\n            <div>\n              <button className=\"toolbar-button\" onClick={openNodeCreationPopup}>노드 생성</button>\n            </div>\n          </div>\n\n          <div\n            className=\"map-image-container\"\n            onClick={handleMapClick}\n            ref={canvasRef}\n          >\n            {mapImage ? <img src={mapImage} alt=\"Selected Map\" className=\"map-image\" /> : <p>Select a map to view its image</p>}\n          </div>\n        </div>\n      </div>\n\n      {isUploadPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Upload Map</h3>\n          <form onSubmit={handleUploadMap}>\n            <input type=\"text\" value={uploadName} onChange={(e) => setUploadName(e.target.value)} required />\n            <textarea value={uploadDescription} onChange={(e) => setUploadDescription(e.target.value)} required />\n            <input type=\"file\" accept=\".pgm,.png,.jpg\" onChange={handleFileChange} required />\n            <input type=\"file\" accept=\".yaml\" onChange={handleYamlFileChange} required />\n            <button type=\"submit\">Upload</button>\n            <button type=\"button\" onClick={() => setIsUploadPopupOpen(false)}>Cancel</button>\n          </form>\n        </div>\n      )}\n\n      {isEditPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Edit Map</h3>\n          <form onSubmit={handleUpdateMap}>\n            <input type=\"text\" value={editName} onChange={(e) => setEditName(e.target.value)} required />\n            <textarea value={editDescription} onChange={(e) => setEditDescription(e.target.value)} required />\n            <button type=\"submit\">Update</button>\n            <button type=\"button\" onClick={() => setIsEditPopupOpen(false)}>Cancel</button>\n          </form>\n        </div>\n      )}\n\n      {nodePopupVisible && selectedMap && (\n        <NodeCreateComponent\n          coordinates={nodeCoordinates}\n          mapId={selectedMap._id}\n          onClose={() => setNodePopupVisible(false)}\n          onNodeCreated={handleNodeCreated}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Mapmanage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}