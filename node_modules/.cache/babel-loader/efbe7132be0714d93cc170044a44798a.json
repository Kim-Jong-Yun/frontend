{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/SlamStream.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nconst SlamStream = ({\n  selectedRobot\n}) => {\n  const mapVideoRef = useRef(null);\n  const scanVideoRef = useRef(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io('http://172.30.1.40:7002'); // slam_stream_server의 주소와 포트\n    setSocket(newSocket);\n    newSocket.on('video', ({\n      topic,\n      data\n    }) => {\n      const videoElement = topic === '/map' ? mapVideoRef.current : scanVideoRef.current;\n      if (videoElement) {\n        const binaryString = window.atob(data);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n          bytes[i] = binaryString.charCodeAt(i);\n        }\n        const blob = new Blob([bytes], {\n          type: 'image/jpeg'\n        });\n        videoElement.src = URL.createObjectURL(blob);\n      }\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Map Stream\"), /*#__PURE__*/React.createElement(\"video\", {\n    ref: mapVideoRef,\n    autoPlay: true,\n    playsInline: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Scan Stream\"), /*#__PURE__*/React.createElement(\"video\", {\n    ref: scanVideoRef,\n    autoPlay: true,\n    playsInline: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n};\nexport default SlamStream;","map":{"version":3,"names":["React","useEffect","useRef","useState","io","SlamStream","selectedRobot","mapVideoRef","scanVideoRef","socket","setSocket","newSocket","on","topic","data","videoElement","current","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","blob","Blob","type","src","URL","createObjectURL","close","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","width"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/SlamStream.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst SlamStream = ({ selectedRobot }) => {\n    const mapVideoRef = useRef(null);\n    const scanVideoRef = useRef(null);\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const newSocket = io('http://172.30.1.40:7002'); // slam_stream_server의 주소와 포트\n        setSocket(newSocket);\n\n        newSocket.on('video', ({ topic, data }) => {\n            const videoElement = topic === '/map' ? mapVideoRef.current : scanVideoRef.current;\n            if (videoElement) {\n                const binaryString = window.atob(data);\n                const len = binaryString.length;\n                const bytes = new Uint8Array(len);\n                for (let i = 0; i < len; i++) {\n                    bytes[i] = binaryString.charCodeAt(i);\n                }\n                const blob = new Blob([bytes], { type: 'image/jpeg' });\n                videoElement.src = URL.createObjectURL(blob);\n            }\n        });\n\n        return () => {\n            newSocket.close();\n        };\n    }, []);\n\n    return (\n        <div>\n            <h3>Map Stream</h3>\n            <video ref={mapVideoRef} autoPlay playsInline style={{ width: '100%' }} />\n            <h3>Scan Stream</h3>\n            <video ref={scanVideoRef} autoPlay playsInline style={{ width: '100%' }} />\n        </div>\n    );\n};\n\nexport default SlamStream;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EACtC,MAAMC,WAAW,GAAGL,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMM,YAAY,GAAGN,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1CF,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAGP,EAAE,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACjDM,SAAS,CAACC,SAAS,CAAC;IAEpBA,SAAS,CAACC,EAAE,CAAC,OAAO,EAAE,CAAC;MAAEC,KAAK;MAAEC;IAAK,CAAC,KAAK;MACvC,MAAMC,YAAY,GAAGF,KAAK,KAAK,MAAM,GAAGN,WAAW,CAACS,OAAO,GAAGR,YAAY,CAACQ,OAAO;MAClF,IAAID,YAAY,EAAE;QACd,MAAME,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC;QACtC,MAAMM,GAAG,GAAGH,YAAY,CAACI,MAAM;QAC/B,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACH,GAAG,CAAC;QACjC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,EAAEI,CAAC,EAAE,EAAE;UAC1BF,KAAK,CAACE,CAAC,CAAC,GAAGP,YAAY,CAACQ,UAAU,CAACD,CAAC,CAAC;QACzC;QACA,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,KAAK,CAAC,EAAE;UAAEM,IAAI,EAAE;QAAa,CAAC,CAAC;QACtDb,YAAY,CAACc,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAChD;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTf,SAAS,CAACqB,KAAK,CAAC,CAAC;IACrB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhC,KAAA,CAAAiC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIvC,KAAA,CAAAiC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CAAC,eACnBvC,KAAA,CAAAiC,aAAA;IAAOO,GAAG,EAAEjC,WAAY;IAACkC,QAAQ;IAACC,WAAW;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC1EvC,KAAA,CAAAiC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CAAC,eACpBvC,KAAA,CAAAiC,aAAA;IAAOO,GAAG,EAAEhC,YAAa;IAACiC,QAAQ;IAACC,WAAW;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzE,CAAC;AAEd,CAAC;AAED,eAAelC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}