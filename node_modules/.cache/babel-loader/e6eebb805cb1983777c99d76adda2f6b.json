{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js\";\nimport React, { useState } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nfunction TaskCreationPage() {\n  const [taskName, setTaskName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Function to retrieve the token from localStorage\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token not found\n      return null;\n    }\n    return token;\n  };\n\n  // Function to handle task creation\n  const handleCreateTask = async e => {\n    e.preventDefault();\n\n    // Get token from localStorage\n    const token = getToken();\n    if (!token) return; // Exit if no token is found\n\n    // Prepare task data according to the Mongoose schema\n    const taskData = {\n      name: taskName,\n      // Task name from user input\n      taskType,\n      // Task type from user input\n      status: 'Pending',\n      // Default status for new task\n      startTime: new Date().toISOString() // Set current time as task start time\n    };\n    try {\n      // Call the API to create a new task\n      const response = await axios.post('http://172.30.1.28:6000/task/create', taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Bearer token for authentication\n          'Content-Type': 'application/json' // Send data as JSON\n        }\n      });\n\n      // If successful, display success message and reset form\n      setMessage('Task created successfully!');\n      setTaskName(''); // Reset task name input\n      setTaskType(''); // Reset task type input\n\n      console.log('Task creation successful:', response.data); // Log response\n    } catch (error) {\n      // Handle error responses\n      if (error.response) {\n        if (error.response.status === 401) {\n          setMessage('Unauthorized: Invalid or expired token.');\n          localStorage.removeItem('token'); // Remove invalid token\n          window.location.href = '/login'; // Redirect to login page\n        } else {\n          var _error$response$data;\n          setMessage(`Failed to create task: ${error.response.status} - ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n        }\n      } else if (error.request) {\n        setMessage('No response from server. Please check your network or server status.');\n        console.error('No response:', error.request);\n      } else {\n        setMessage('Error: Failed to create task.');\n        console.error('Error:', error.message);\n      }\n\n      // Log complete error for debugging\n      console.error('Error creating task:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Create Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCreateTask,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Name\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Type\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      padding: '10px 20px',\n      borderRadius: '5px',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Create Task\")), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, message)));\n}\nexport default TaskCreationPage;","map":{"version":3,"names":["React","useState","Navbar","LogoutButton","UserInfo","axios","TaskCreationPage","taskName","setTaskName","taskType","setTaskType","message","setMessage","getToken","token","localStorage","getItem","alert","window","location","href","handleCreateTask","e","preventDefault","taskData","name","status","startTime","Date","toISOString","response","post","headers","console","log","data","error","removeItem","_error$response$data","request","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","flexDirection","alignItems","onSubmit","type","placeholder","value","onChange","target","required","width","padding","borderRadius","border","backgroundColor","color","cursor"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction TaskCreationPage() {\n  const [taskName, setTaskName] = useState(''); \n  const [taskType, setTaskType] = useState(''); \n  const [message, setMessage] = useState('');\n\n  // Function to retrieve the token from localStorage\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token not found\n      return null;\n    }\n    return token;\n  };\n\n  // Function to handle task creation\n  const handleCreateTask = async (e) => {\n    e.preventDefault();\n\n    // Get token from localStorage\n    const token = getToken();\n    if (!token) return; // Exit if no token is found\n\n    // Prepare task data according to the Mongoose schema\n    const taskData = {\n      name: taskName,       // Task name from user input\n      taskType,             // Task type from user input\n      status: 'Pending',    // Default status for new task\n      startTime: new Date().toISOString() // Set current time as task start time\n    };\n\n    try {\n      // Call the API to create a new task\n      const response = await axios.post('http://172.30.1.28:6000/task/create', taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,  // Bearer token for authentication\n          'Content-Type': 'application/json'   // Send data as JSON\n        }\n      });\n\n      // If successful, display success message and reset form\n      setMessage('Task created successfully!');\n      setTaskName('');    // Reset task name input\n      setTaskType('');    // Reset task type input\n\n      console.log('Task creation successful:', response.data); // Log response\n\n    } catch (error) {\n      // Handle error responses\n      if (error.response) {\n        if (error.response.status === 401) {\n          setMessage('Unauthorized: Invalid or expired token.');\n          localStorage.removeItem('token');  // Remove invalid token\n          window.location.href = '/login';   // Redirect to login page\n        } else {\n          setMessage(`Failed to create task: ${error.response.status} - ${error.response.data?.message || error.message}`);\n        }\n      } else if (error.request) {\n        setMessage('No response from server. Please check your network or server status.');\n        console.error('No response:', error.request);\n      } else {\n        setMessage('Error: Failed to create task.');\n        console.error('Error:', error.message);\n      }\n\n      // Log complete error for debugging\n      console.error('Error creating task:', error);\n    }\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <div style={{ display: 'flex' }}>\n        <Navbar />\n      </div>\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Create Task</h2>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <form onSubmit={handleCreateTask} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <input\n            type=\"text\"\n            placeholder=\"Task Name\"\n            value={taskName}\n            onChange={(e) => setTaskName(e.target.value)}\n            required\n            style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Task Type\"\n            value={taskType}\n            onChange={(e) => setTaskType(e.target.value)}\n            required\n            style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n          />\n          <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '5px', backgroundColor: '#4CAF50', color: '#fff', border: 'none', cursor: 'pointer' }}>\n            Create Task\n          </button>\n        </form>\n        {message && <p>{message}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default TaskCreationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}