{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapCreatePage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  useEffect(() => {\n    // 페이지 로드 시 로봇 목록을 가져옴\n    const fetchRobots = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n        const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n\n    // WebSocket 연결 설정\n    const ws = new WebSocket(`ws://${window.location.hostname}:8080`); // WebSocket 서버 주소\n    ws.onopen = () => {\n      console.log('WebSocket 연결이 설정되었습니다.');\n    };\n    const handleKeyDown = e => {\n      const velocityCommands = {\n        w: {\n          linear: 0.1,\n          angular: 0\n        },\n        a: {\n          linear: 0,\n          angular: 0.1\n        },\n        s: {\n          linear: -0.1,\n          angular: 0\n        },\n        d: {\n          linear: 0,\n          angular: -0.1\n        },\n        ' ': {\n          linear: 0,\n          angular: 0\n        } // space 키로 변경\n      };\n      if (velocityCommands[e.key] && selectedRobot) {\n        ws.send(JSON.stringify({\n          robot_id: selectedRobot,\n          velocity: velocityCommands[e.key]\n        }));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      ws.close(); // 컴포넌트 언마운트 시 WebSocket 연결 해제\n    };\n  }, [selectedRobot]);\n\n  // 서버에 명령을 전송하는 함수\n  const sendCommand = command => {\n    const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n    fetch('http://172.30.1.40:5559/robot/send_command', {\n      // 절대 경로 사용\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // 토큰을 헤더에 추가\n      },\n      body: JSON.stringify({\n        robot_id: selectedRobot,\n        command: command\n      })\n    }).then(response => response.text()).then(data => alert(data)).catch(error => console.error('Error sending command:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SLAM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRobot(e.target.value),\n        value: selectedRobot,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: robot._id,\n          children: robot.name\n        }, robot._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendCommand('slam'),\n      children: \"SLAM \\uC2DC\\uC791\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://${selectedRobot}:8080/stream?topic=/camera/rgb/image_raw`,\n        alt: \"SLAM View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(MapCreatePage, \"jqHZE1cZMSiCbLfH+j86Toj3Mzk=\");\n_c = MapCreatePage;\n;\nexport default MapCreatePage;\nvar _c;\n$RefreshReg$(_c, \"MapCreatePage\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","jsxDEV","_jsxDEV","MapCreatePage","_s","robots","setRobots","selectedRobot","setSelectedRobot","fetchRobots","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","ws","WebSocket","window","location","hostname","onopen","log","handleKeyDown","e","velocityCommands","w","linear","angular","a","s","d","key","send","JSON","stringify","robot_id","velocity","addEventListener","removeEventListener","close","sendCommand","command","fetch","method","body","then","text","alert","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","target","value","map","robot","_id","name","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction MapCreatePage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n\n    useEffect(() => {\n        // 페이지 로드 시 로봇 목록을 가져옴\n        const fetchRobots = async () => {\n            try {\n                const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n                const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n\n        // WebSocket 연결 설정\n        const ws = new WebSocket(`ws://${window.location.hostname}:8080`); // WebSocket 서버 주소\n        ws.onopen = () => {\n            console.log('WebSocket 연결이 설정되었습니다.');\n        };\n\n        const handleKeyDown = (e) => {\n            const velocityCommands = {\n                w: { linear: 0.1, angular: 0 },\n                a: { linear: 0, angular: 0.1 },\n                s: { linear: -0.1, angular: 0 },\n                d: { linear: 0, angular: -0.1 },\n                ' ': { linear: 0, angular: 0 } // space 키로 변경\n            };\n            if (velocityCommands[e.key] && selectedRobot) {\n                ws.send(JSON.stringify({\n                    robot_id: selectedRobot,\n                    velocity: velocityCommands[e.key]\n                }));\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            ws.close(); // 컴포넌트 언마운트 시 WebSocket 연결 해제\n        };\n    }, [selectedRobot]);\n\n    // 서버에 명령을 전송하는 함수\n    const sendCommand = (command) => {\n        const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n        fetch('http://172.30.1.40:5559/robot/send_command', { // 절대 경로 사용\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}` // 토큰을 헤더에 추가\n            },\n            body: JSON.stringify({\n                robot_id: selectedRobot,\n                command: command\n            })\n        }).then(response => response.text())\n            .then(data => alert(data))\n            .catch(error => console.error('Error sending command:', error));\n    };\n\n    return (\n        <div>\n            <header>\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div style={{ display: 'flex' }}>\n                <Navbar />\n            </div>\n            <h2>SLAM Control</h2>\n            <div>\n                <label>로봇 선택:</label>\n                <select onChange={(e) => setSelectedRobot(e.target.value)} value={selectedRobot}>\n                    <option value=\"\">로봇을 선택하세요</option>\n                    {robots.map(robot => (\n                        <option key={robot._id} value={robot._id}>{robot.name}</option>\n                    ))}\n                </select>\n            </div>\n            <button onClick={() => sendCommand('slam')}>SLAM 시작</button>\n            <div>\n                <img src={`http://${selectedRobot}:8080/stream?topic=/camera/rgb/image_raw`} alt=\"SLAM View\" />\n            </div>\n        </div>\n    );\n};\n\nexport default MapCreatePage;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}