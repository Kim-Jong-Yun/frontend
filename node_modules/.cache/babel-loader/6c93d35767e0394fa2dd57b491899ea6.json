{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null); // 선택된 맵 상태\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false); // 업로드 팝업 상태\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // 수정 팝업 상태\n  const [isCreatingNode, setIsCreatingNode] = useState(false); // 노드 생성 모드\n  const [nodeX, setNodeX] = useState(null); // X 좌표\n  const [nodeY, setNodeY] = useState(null); // Y 좌표\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false); // 노드 팝업 상태\n  const mapRef = useRef(null); // 지도 영역 참조\n  const [nodes, setNodes] = useState([]); // 노드 목록 저장\n\n  // 이미지의 실제 크기와 렌더링된 크기 상태\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  // 맵 목록을 서버에서 가져오는 함수\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n      alert('Failed to fetch maps.');\n    }\n  };\n\n  // 맵을 선택했을 때 호출되는 함수\n  const handleSelectMap = async map => {\n    setSelectedMap(map); // 맵 선택 상태 업데이트\n    setEditName(map.name);\n    setEditDescription(map.description);\n    fetchNodes(map._id); // 선택된 맵의 노드 불러오기\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n      alert('Failed to fetch map image.');\n    }\n  };\n\n  // 맵을 삭제하는 함수\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null); // 선택된 맵을 삭제한 경우 초기화\n        setMapImage(null); // 맵 이미지 초기화\n        setNodes([]); // 노드 목록 초기화\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  // 맵 파일 변경 시 호출되는 함수\n  const handleFileChange = e => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 시 호출되는 함수\n  const handleYamlFileChange = e => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('Please select a map first.');\n      return;\n    }\n    setIsCreatingNode(true);\n    document.body.style.cursor = 'crosshair'; // 마우스 커서 십자가 모양 변경\n  };\n\n  // 지도 클릭 시 좌표를 얻고 팝업을 여는 함수\n  const handleMapClick = e => {\n    if (!isCreatingNode) return;\n    const img = mapRef.current.querySelector('img'); // 이미지 요소 가져오기\n    if (!img) return;\n    const rect = img.getBoundingClientRect(); // 이미지의 위치와 크기 계산\n\n    const isInsideImage = e.clientX >= rect.left && e.clientX <= rect.right && e.clientY >= rect.top && e.clientY <= rect.bottom;\n    if (!isInsideImage) {\n      alert('노드는 지도 이미지 안에만 생성할 수 있습니다.');\n      return;\n    }\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // 화면 좌표를 월드 좌표로 변환 (자연 크기 기준으로 변경)\n    if (!imageNaturalWidth || !imageNaturalHeight) {\n      console.error('Image natural size not available.');\n      alert('이미지 로드 중입니다. 잠시 후 다시 시도해주세요.');\n      return;\n    }\n    const {\n      x,\n      y\n    } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n    console.log(`Click Coordinates: (${clickX}, ${clickY})`);\n    console.log(`World Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})`);\n    setNodeX(x);\n    setNodeY(y);\n    setIsCreatingNode(false);\n    setIsNodePopupOpen(true); // 팝업 열기\n    document.body.style.cursor = 'default'; // 커서 복구\n  };\n\n  // 노드 생성을 제출하는 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    if (nodeName.trim().length === 0) {\n      alert('Node name cannot be empty.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Node created successfully.');\n      setIsNodePopupOpen(false);\n      setNodeName(''); // 입력 필드 초기화\n      setNodeX(null);\n      setNodeY(null);\n      fetchNodes(selectedMap._id); // 노드 목록 갱신\n    } catch (error) {\n      console.error('Error creating node:', error);\n      alert('Failed to create node.');\n    }\n  };\n\n  // 특정 맵의 노드를 서버에서 가져오는 함수\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      setNodes(response.data); // 노드 리스트 상태 업데이트\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n      alert('Failed to fetch nodes.');\n    }\n  };\n\n  // 이미지 로드 시 실제 크기와 렌더링된 크기를 저장하는 함수\n  const handleImageLoad = e => {\n    const img = e.target;\n    setImageNaturalWidth(img.naturalWidth);\n    setImageNaturalHeight(img.naturalHeight);\n    console.log(`Image Loaded: Natural (${img.naturalWidth}, ${img.naturalHeight})`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNodeMode,\n    className: \"create-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), \" Create Node\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, \"Map List\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${(selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id) === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, \"Map Description\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, selectedMap.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-and-node-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: \"map-image-container\",\n    style: {\n      cursor: isCreatingNode ? 'crosshair' : 'auto'\n    },\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    alt: \"Selected Map\",\n    className: \"map-image\",\n    onLoad: handleImageLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, \"Select a map to view its image\"), nodes.map(node => {\n    if (!imageNaturalWidth || !imageNaturalHeight) return null;\n    const {\n      x,\n      y\n    } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n    console.log(`Rendering Node: (${node.x.toFixed(2)}, ${node.y.toFixed(2)}) -> (${x.toFixed(2)}, ${y.toFixed(2)})`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: node._id,\n      className: \"node\",\n      style: {\n        position: 'absolute',\n        top: `${y}px`,\n        left: `${x}px`,\n        width: '10px',\n        height: '10px',\n        backgroundColor: 'red',\n        borderRadius: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      title: node.name // 마우스 오버 시 노드 이름 표시\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, \"Nodes List\"), nodes.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  }, nodes.map(node => /*#__PURE__*/React.createElement(\"li\", {\n    key: node._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, node.name), \": (\", node.x.toFixed(2), \", \", node.y.toFixed(2), \")\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, \"No nodes available for this map.\")))), isNodePopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, \"Create Node\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, \"X: \", nodeX.toFixed(2), \", Y: \", nodeY.toFixed(2)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"Enter node name\",\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitNode,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsNodePopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, \"Upload Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"Map Description\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }, \"Map File (.pgm, .png, .jpg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, \"YAML File (.yaml)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, \"Edit Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"Map Description\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","Navbar","LogoutButton","UserInfo","faEdit","faPlus","worldToMap","mapToWorld","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isCreatingNode","setIsCreatingNode","nodeX","setNodeX","nodeY","setNodeY","nodeName","setNodeName","isNodePopupOpen","setIsNodePopupOpen","mapRef","nodes","setNodes","imageNaturalWidth","setImageNaturalWidth","imageNaturalHeight","setImageNaturalHeight","fetchMaps","token","localStorage","getItem","alert","response","get","headers","data","error","console","handleSelectMap","map","name","description","fetchNodes","_id","Authorization","responseType","imageUrl","URL","createObjectURL","handleDeleteMap","mapId","confirmDelete","window","confirm","put","handleFileChange","e","target","files","handleYamlFileChange","handleCreateNodeMode","document","body","style","cursor","handleMapClick","img","current","querySelector","rect","getBoundingClientRect","isInsideImage","clientX","left","right","clientY","top","bottom","clickX","clickY","x","y","log","toFixed","handleSubmitNode","trim","length","post","handleImageLoad","naturalWidth","naturalHeight","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","key","openEditPopup","ref","src","alt","onLoad","node","position","width","height","backgroundColor","borderRadius","transform","title","type","value","onChange","placeholder","onSubmit","handleUploadMap","required","accept","handleUpdateMap"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null); // 선택된 맵 상태\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false); // 업로드 팝업 상태\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // 수정 팝업 상태\n  const [isCreatingNode, setIsCreatingNode] = useState(false); // 노드 생성 모드\n  const [nodeX, setNodeX] = useState(null); // X 좌표\n  const [nodeY, setNodeY] = useState(null); // Y 좌표\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false); // 노드 팝업 상태\n  const mapRef = useRef(null); // 지도 영역 참조\n  const [nodes, setNodes] = useState([]); // 노드 목록 저장\n\n  // 이미지의 실제 크기와 렌더링된 크기 상태\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  // 맵 목록을 서버에서 가져오는 함수\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n      alert('Failed to fetch maps.');\n    }\n  };\n\n  // 맵을 선택했을 때 호출되는 함수\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map); // 맵 선택 상태 업데이트\n    setEditName(map.name);\n    setEditDescription(map.description);\n    fetchNodes(map._id); // 선택된 맵의 노드 불러오기\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n      alert('Failed to fetch map image.');\n    }\n  };\n\n  // 맵을 삭제하는 함수\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null); // 선택된 맵을 삭제한 경우 초기화\n        setMapImage(null); // 맵 이미지 초기화\n        setNodes([]); // 노드 목록 초기화\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  // 맵 파일 변경 시 호출되는 함수\n  const handleFileChange = (e) => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 시 호출되는 함수\n  const handleYamlFileChange = (e) => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('Please select a map first.');\n      return;\n    }\n    setIsCreatingNode(true);\n    document.body.style.cursor = 'crosshair'; // 마우스 커서 십자가 모양 변경\n  };\n\n  // 지도 클릭 시 좌표를 얻고 팝업을 여는 함수\n  const handleMapClick = (e) => {\n    if (!isCreatingNode) return;\n\n    const img = mapRef.current.querySelector('img'); // 이미지 요소 가져오기\n    if (!img) return;\n\n    const rect = img.getBoundingClientRect(); // 이미지의 위치와 크기 계산\n\n    const isInsideImage =\n      e.clientX >= rect.left &&\n      e.clientX <= rect.right &&\n      e.clientY >= rect.top &&\n      e.clientY <= rect.bottom;\n\n    if (!isInsideImage) {\n      alert('노드는 지도 이미지 안에만 생성할 수 있습니다.');\n      return;\n    }\n\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // 화면 좌표를 월드 좌표로 변환 (자연 크기 기준으로 변경)\n    if (!imageNaturalWidth || !imageNaturalHeight) {\n      console.error('Image natural size not available.');\n      alert('이미지 로드 중입니다. 잠시 후 다시 시도해주세요.');\n      return;\n    }\n\n    const { x, y } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n\n    console.log(`Click Coordinates: (${clickX}, ${clickY})`);\n    console.log(`World Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})`);\n\n    setNodeX(x);\n    setNodeY(y);\n    setIsCreatingNode(false);\n    setIsNodePopupOpen(true); // 팝업 열기\n    document.body.style.cursor = 'default'; // 커서 복구\n  };\n\n  // 노드 생성을 제출하는 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    if (nodeName.trim().length === 0) {\n      alert('Node name cannot be empty.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id,\n      }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('Node created successfully.');\n      setIsNodePopupOpen(false);\n      setNodeName(''); // 입력 필드 초기화\n      setNodeX(null);\n      setNodeY(null);\n      fetchNodes(selectedMap._id); // 노드 목록 갱신\n    } catch (error) {\n      console.error('Error creating node:', error);\n      alert('Failed to create node.');\n    }\n  };\n\n  // 특정 맵의 노드를 서버에서 가져오는 함수\n  const fetchNodes = async (mapId) => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      setNodes(response.data); // 노드 리스트 상태 업데이트\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n      alert('Failed to fetch nodes.');\n    }\n  };\n\n  // 이미지 로드 시 실제 크기와 렌더링된 크기를 저장하는 함수\n  const handleImageLoad = (e) => {\n    const img = e.target;\n    setImageNaturalWidth(img.naturalWidth);\n    setImageNaturalHeight(img.naturalHeight);\n    console.log(`Image Loaded: Natural (${img.naturalWidth}, ${img.naturalHeight})`);\n  };\n\n  return (\n    <div className=\"map-management-page\">\n      {/* 상단 네비게이션 바 */}\n      <header className=\"map-management-header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      {/* 툴바: 네비게이션 아래에 위치 */}\n      <div className=\"toolbar\">\n        <button onClick={handleCreateNodeMode} className=\"create-node-button\">\n          <FontAwesomeIcon icon={faPlus} /> Create Node\n        </button>\n      </div>\n\n      {/* 맵 리스트와 이미지 컨텐츠 */}\n      <div className=\"map-management-content\">\n        {/* 맵 리스트 컨테이너 */}\n        <div className=\"map-list-container\">\n          <h2 className=\"map-list-header\">\n            Map List\n            <button\n              onClick={() => setIsUploadPopupOpen(true)}\n              className=\"add-map-button\"\n            >\n              +\n            </button>\n          </h2>\n          <ul className=\"map-list\">\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={`map-list-item ${selectedMap?._id === map._id ? 'selected-map' : ''}`}\n              >\n                <span\n                  onClick={() => handleSelectMap(map)}\n                  className=\"map-list-item-name\"\n                >\n                  {map.name}\n                </span>\n                <button\n                  onClick={() => openEditPopup(map)}\n                  className=\"edit-map-button\"\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button\n                  onClick={() => handleDeleteMap(map._id)}\n                  className=\"delete-map-button\"\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {selectedMap && (\n            <div className=\"map-description\">\n              <h3>Map Description</h3>\n              <p>{selectedMap.description}</p>\n            </div>\n          )}\n        </div>\n\n        {/* 지도 이미지와 노드 렌더링 및 노드 리스트 영역 */}\n        <div className=\"map-image-and-node-list\">\n          {/* 지도 이미지와 노드 렌더링 영역 */}\n          <div\n            ref={mapRef}\n            className=\"map-image-container\"\n            style={{ cursor: isCreatingNode ? 'crosshair' : 'auto' }} \n            onClick={handleMapClick}\n          >\n            {mapImage ? (\n              <img\n                src={mapImage}\n                alt=\"Selected Map\"\n                className=\"map-image\"\n                onLoad={handleImageLoad}\n              />\n            ) : (\n              <p>Select a map to view its image</p>\n            )}\n\n            {/* 노드 렌더링 */}\n            {nodes.map((node) => {\n              if (!imageNaturalWidth || !imageNaturalHeight) return null;\n\n              const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n              console.log(`Rendering Node: (${node.x.toFixed(2)}, ${node.y.toFixed(2)}) -> (${x.toFixed(2)}, ${y.toFixed(2)})`);\n              return (\n                <div\n                  key={node._id}\n                  className=\"node\"\n                  style={{\n                    position: 'absolute',\n                    top: `${y}px`,\n                    left: `${x}px`,\n                    width: '10px',\n                    height: '10px',\n                    backgroundColor: 'red',\n                    borderRadius: '50%',\n                    transform: 'translate(-50%, -50%)',\n                  }}\n                  title={node.name} // 마우스 오버 시 노드 이름 표시\n                />\n              );\n            })}\n          </div>\n\n          {/* 오른쪽에 노드 목록 표시 */}\n          <div className=\"node-list-container\">\n            <h3>Nodes List</h3>\n            {nodes.length > 0 ? (\n              <ul>\n                {nodes.map((node) => (\n                  <li key={node._id}>\n                    <strong>{node.name}</strong>: ({node.x.toFixed(2)}, {node.y.toFixed(2)})\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>No nodes available for this map.</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Node 생성 팝업 */}\n      {isNodePopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Create Node</h3>\n          <p>X: {nodeX.toFixed(2)}, Y: {nodeY.toFixed(2)}</p>\n          <input\n            type=\"text\"\n            value={nodeName}\n            onChange={(e) => setNodeName(e.target.value)}\n            placeholder=\"Enter node name\"\n            className=\"popup-input\"\n          />\n          <div className=\"popup-button-container\">\n            <button onClick={handleSubmitNode} className=\"popup-submit-button\">\n              Create\n            </button>\n            <button\n              onClick={() => setIsNodePopupOpen(false)}\n              className=\"popup-cancel-button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Map Upload Popup */}\n      {isUploadPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Upload Map</h3>\n          <form onSubmit={handleUploadMap}>\n            <input\n              type=\"text\"\n              value={uploadName}\n              onChange={(e) => setUploadName(e.target.value)}\n              placeholder=\"Map Name\"\n              required\n              className=\"popup-input\"\n            />\n            <textarea\n              value={uploadDescription}\n              onChange={(e) => setUploadDescription(e.target.value)}\n              placeholder=\"Map Description\"\n              required\n              className=\"popup-textarea\"\n            />\n            <label>Map File (.pgm, .png, .jpg)</label>\n            <input\n              type=\"file\"\n              accept=\".pgm,.png,.jpg\"\n              onChange={handleFileChange}\n              required\n              className=\"popup-file-input\"\n            />\n            <label>YAML File (.yaml)</label>\n            <input\n              type=\"file\"\n              accept=\".yaml\"\n              onChange={handleYamlFileChange}\n              required\n              className=\"popup-file-input\"\n            />\n            <div className=\"popup-button-container\">\n              <button type=\"submit\" className=\"popup-submit-button\">\n                Upload\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setIsUploadPopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Edit Map Popup */}\n      {isEditPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Edit Map</h3>\n          <form onSubmit={handleUpdateMap}>\n            <input\n              type=\"text\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              placeholder=\"Map Name\"\n              required\n              className=\"popup-input\"\n            />\n            <textarea\n              value={editDescription}\n              onChange={(e) => setEditDescription(e.target.value)}\n              placeholder=\"Map Description\"\n              required\n              className=\"popup-textarea\"\n            />\n            <div className=\"popup-button-container\">\n              <button type=\"submit\" className=\"popup-submit-button\">\n                Update\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setIsEditPopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Mapmanage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}