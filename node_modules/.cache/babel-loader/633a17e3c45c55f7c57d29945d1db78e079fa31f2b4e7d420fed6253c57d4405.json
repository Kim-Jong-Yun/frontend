{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Control/ControlPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ControlPage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [targetPosition, setTargetPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const response = await axios.get('http://localhost:5559/robots');\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n  }, []);\n  const handleRobotSelect = robot => {\n    setSelectedRobot(robot);\n  };\n  const handleMoveRobot = async () => {\n    if (selectedRobot) {\n      try {\n        const response = await axios.post(`http://localhost:5559/robots/control/${selectedRobot.id}`, {\n          position: targetPosition\n        });\n        if (response.status === 200) {\n          alert('Robot moved successfully');\n        }\n      } catch (error) {\n        console.error('Error moving robot:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Control Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: robots.map(robot => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleRobotSelect(robot),\n        children: robot.name\n      }, robot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), selectedRobot && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Move Robot: \", selectedRobot.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"X position\",\n        value: targetPosition.x,\n        onChange: e => setTargetPosition({\n          ...targetPosition,\n          x: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Y position\",\n        value: targetPosition.y,\n        onChange: e => setTargetPosition({\n          ...targetPosition,\n          y: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveRobot,\n        children: \"Move Robot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(ControlPage, \"xJmljSQJ++e30ak96usecG6Txws=\");\n_c = ControlPage;\nexport default ControlPage;\nvar _c;\n$RefreshReg$(_c, \"ControlPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ControlPage","_s","robots","setRobots","selectedRobot","setSelectedRobot","targetPosition","setTargetPosition","x","y","fetchRobots","response","get","data","error","console","handleRobotSelect","robot","handleMoveRobot","post","id","position","status","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Control/ControlPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction ControlPage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState(null);\n    const [targetPosition, setTargetPosition] = useState({ x: 0, y: 0 });\n\n    useEffect(() => {\n        const fetchRobots = async () => {\n            try {\n                const response = await axios.get('http://localhost:5559/robots');\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n    }, []);\n\n    const handleRobotSelect = (robot) => {\n        setSelectedRobot(robot);\n    };\n\n    const handleMoveRobot = async () => {\n        if (selectedRobot) {\n            try {\n                const response = await axios.post(`http://localhost:5559/robots/control/${selectedRobot.id}`, {\n                    position: targetPosition\n                });\n                if (response.status === 200) {\n                    alert('Robot moved successfully');\n                }\n            } catch (error) {\n                console.error('Error moving robot:', error);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h2>Control Page</h2>\n            <ul>\n                {robots.map(robot => (\n                    <li key={robot.id} onClick={() => handleRobotSelect(robot)}>\n                        {robot.name}\n                    </li>\n                ))}\n            </ul>\n            {selectedRobot && (\n                <div>\n                    <h3>Move Robot: {selectedRobot.name}</h3>\n                    <input\n                        type=\"number\"\n                        placeholder=\"X position\"\n                        value={targetPosition.x}\n                        onChange={e => setTargetPosition({ ...targetPosition, x: e.target.value })}\n                    />\n                    <input\n                        type=\"number\"\n                        placeholder=\"Y position\"\n                        value={targetPosition.y}\n                        onChange={e => setTargetPosition({ ...targetPosition, y: e.target.value })}\n                    />\n                    <button onClick={handleMoveRobot}>Move Robot</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ControlPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}