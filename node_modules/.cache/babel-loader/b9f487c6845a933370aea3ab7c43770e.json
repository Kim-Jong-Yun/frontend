{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TeleopControl.js\";\nimport React, { useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport './TeleopControl.css';\nfunction TeleopControl({\n  robotName,\n  onClose\n}) {\n  // ROS와 연결 설정\n  const ros = new ROSLIB.Ros({\n    url: 'ws://localhost:9090' // rosbridge WebSocket 주소\n  });\n\n  // cmd_vel 토픽 설정, 로봇의 이름을 포함하여 동적으로 설정\n  const cmdVel = new ROSLIB.Topic({\n    ros: ros,\n    name: `/${robotName}/cmd_vel`,\n    // 로봇 이름을 포함한 토픽 경로\n    messageType: 'geometry_msgs/Twist'\n  });\n\n  // 로봇에 명령을 보내는 함수\n  const sendCommand = (linear, angular) => {\n    const twist = new ROSLIB.Message({\n      linear: {\n        x: linear,\n        y: 0.0,\n        z: 0.0\n      },\n      angular: {\n        x: 0.0,\n        y: 0.0,\n        z: angular\n      }\n    });\n    cmdVel.publish(twist);\n  };\n\n  // 키보드 이벤트 핸들러\n  const handleKeyDown = event => {\n    switch (event.key) {\n      case 'ArrowUp':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'ArrowDown':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'ArrowLeft':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'ArrowRight':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case ' ':\n        // 스페이스바\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 버튼 클릭 이벤트 핸들러\n  const handleButtonClick = direction => {\n    switch (direction) {\n      case 'forward':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'backward':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'left':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'right':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case 'stop':\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 키보드 이벤트 리스너 추가 및 제거\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    // 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, robotName, \" Teleop Control\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"teleop-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Use arrow keys or buttons to control the robot. Press space to stop.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('forward'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"\\u25B2\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('left'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"\\u25C0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('stop'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"\\u25A0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('right'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"\\u25B6\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButtonClick('backward'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"\\u25BC\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClose,\n    className: \"close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n}\nexport default TeleopControl;","map":{"version":3,"names":["React","useEffect","ROSLIB","TeleopControl","robotName","onClose","ros","Ros","url","cmdVel","Topic","name","messageType","sendCommand","linear","angular","twist","Message","x","y","z","publish","handleKeyDown","event","key","handleButtonClick","direction","window","addEventListener","removeEventListener","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TeleopControl.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport './TeleopControl.css';\n\nfunction TeleopControl({ robotName, onClose }) {\n  // ROS와 연결 설정\n  const ros = new ROSLIB.Ros({\n    url: 'ws://localhost:9090', // rosbridge WebSocket 주소\n  });\n\n  // cmd_vel 토픽 설정, 로봇의 이름을 포함하여 동적으로 설정\n  const cmdVel = new ROSLIB.Topic({\n    ros: ros,\n    name: `/${robotName}/cmd_vel`, // 로봇 이름을 포함한 토픽 경로\n    messageType: 'geometry_msgs/Twist',\n  });\n\n  // 로봇에 명령을 보내는 함수\n  const sendCommand = (linear, angular) => {\n    const twist = new ROSLIB.Message({\n      linear: { x: linear, y: 0.0, z: 0.0 },\n      angular: { x: 0.0, y: 0.0, z: angular },\n    });\n    cmdVel.publish(twist);\n  };\n\n  // 키보드 이벤트 핸들러\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'ArrowDown':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'ArrowLeft':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'ArrowRight':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case ' ': // 스페이스바\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 버튼 클릭 이벤트 핸들러\n  const handleButtonClick = (direction) => {\n    switch (direction) {\n      case 'forward':\n        sendCommand(0.5, 0); // 전진\n        break;\n      case 'backward':\n        sendCommand(-0.5, 0); // 후진\n        break;\n      case 'left':\n        sendCommand(0, 0.5); // 좌회전\n        break;\n      case 'right':\n        sendCommand(0, -0.5); // 우회전\n        break;\n      case 'stop':\n        sendCommand(0, 0); // 정지\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 키보드 이벤트 리스너 추가 및 제거\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    // 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup\">\n        <h3>{robotName} Teleop Control</h3>\n        <div className=\"teleop-controls\">\n          <p>Use arrow keys or buttons to control the robot. Press space to stop.</p>\n          <div className=\"button-controls\">\n            <button onClick={() => handleButtonClick('forward')}>▲</button>\n            <div>\n              <button onClick={() => handleButtonClick('left')}>◀</button>\n              <button onClick={() => handleButtonClick('stop')}>■</button>\n              <button onClick={() => handleButtonClick('right')}>▶</button>\n            </div>\n            <button onClick={() => handleButtonClick('backward')}>▼</button>\n          </div>\n        </div>\n        <button onClick={onClose} className=\"close-btn\">\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TeleopControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}