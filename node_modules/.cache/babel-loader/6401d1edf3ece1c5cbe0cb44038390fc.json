{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/CreateTask.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './CreateTask.css'; // 스타일을 위한 CSS 파일을 임포트\n\nfunction CreateTask({\n  onClose,\n  onTaskCreated\n}) {\n  const [taskName, setTaskName] = useState('');\n\n  // 작업 생성 핸들러\n  const handleCreateTask = async () => {\n    if (!taskName) {\n      alert('작업 이름을 입력해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.post('/api/tasks', {\n        name: taskName\n        // 추가 필드 필요시 여기에서 추가\n      });\n      onTaskCreated(response.data); // 새로운 작업을 부모 컴포넌트로 전달\n      onClose(); // 팝업 닫기\n    } catch (error) {\n      console.error('작업 생성 중 오류가 발생했습니다.', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"\\uC0C8 \\uC791\\uC5C5 \\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uC791\\uC5C5 \\uC774\\uB984\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"\\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"\\uCDE8\\uC18C\"))));\n}\nexport default CreateTask;","map":{"version":3,"names":["React","useState","axios","CreateTask","onClose","onTaskCreated","taskName","setTaskName","handleCreateTask","alert","response","post","name","data","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/CreateTask.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './CreateTask.css'; // 스타일을 위한 CSS 파일을 임포트\n\nfunction CreateTask({ onClose, onTaskCreated }) {\n    const [taskName, setTaskName] = useState('');\n\n    // 작업 생성 핸들러\n    const handleCreateTask = async () => {\n        if (!taskName) {\n            alert('작업 이름을 입력해주세요.');\n            return;\n        }\n\n        try {\n            const response = await axios.post('/api/tasks', {\n                name: taskName,\n                // 추가 필드 필요시 여기에서 추가\n            });\n            onTaskCreated(response.data); // 새로운 작업을 부모 컴포넌트로 전달\n            onClose(); // 팝업 닫기\n        } catch (error) {\n            console.error('작업 생성 중 오류가 발생했습니다.', error);\n        }\n    };\n\n    return (\n        <div className=\"create-task-popup\">\n            <div className=\"create-task-content\">\n                <h3>새 작업 추가</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"작업 이름\"\n                    value={taskName}\n                    onChange={(e) => setTaskName(e.target.value)}\n                />\n                <div className=\"buttons\">\n                    <button onClick={handleCreateTask}>생성</button>\n                    <button onClick={onClose}>취소</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateTask;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB,CAAC,CAAC;;AAE3B,SAASC,UAAUA,CAAC;EAAEC,OAAO;EAAEC;AAAc,CAAC,EAAE;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACF,QAAQ,EAAE;MACXG,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;IAEA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,YAAY,EAAE;QAC5CC,IAAI,EAAEN;QACN;MACJ,CAAC,CAAC;MACFD,aAAa,CAACK,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAC9BT,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACId,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,kCAAW,CAAC,eAChBvB,KAAA,CAAAgB,aAAA;IACIQ,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,2BAAO;IACnBC,KAAK,EAAEpB,QAAS;IAChBqB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChD,CAAC,eACFvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBvB,KAAA,CAAAgB,aAAA;IAAQc,OAAO,EAAEtB,gBAAiB;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAU,CAAC,eAC9CvB,KAAA,CAAAgB,aAAA;IAAQc,OAAO,EAAE1B,OAAQ;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAU,CACnC,CACJ,CACJ,CAAC;AAEd;AAEA,eAAepB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}