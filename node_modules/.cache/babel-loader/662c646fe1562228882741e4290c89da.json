{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Account/LoginPage.js\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch('http://localhost:5555/account/login', {\n      // 백엔드 서버의 URL\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      navigate('/main'); // 로그인 후 메인 페이지로 리디렉션\n    } else {\n      const errorData = await response.json();\n      alert(`Login failed: ${errorData.message}`);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => navigate('/register'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n}\nexport default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","LoginPage","email","setEmail","password","setPassword","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","errorData","alert","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","onClick"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Account/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const response = await fetch('http://localhost:5555/account/login', { // 백엔드 서버의 URL\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        if (response.ok) {\n            const data = await response.json();\n            localStorage.setItem('token', data.token);\n            navigate('/main'); // 로그인 후 메인 페이지로 리디렉션\n        } else {\n            const errorData = await response.json();\n            alert(`Login failed: ${errorData.message}`);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Email:\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                </label>\n                <label>\n                    Password:\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                </label>\n                <button type=\"submit\">Login</button>\n                <button type=\"button\" onClick={() => navigate('/register')}>Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}