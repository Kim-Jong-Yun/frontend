{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nconst WebcamStream = ({\n  selectedRobot\n}) => {\n  const videoRef = useRef(null);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    if (selectedRobot) {\n      socketRef.current = io('http://172.30.1.40:7001'); // WebRTC 서버 주소\n\n      const pc = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      });\n      pc.onicecandidate = event => {\n        if (event.candidate) {\n          console.log('New ICE candidate:', event.candidate);\n          socketRef.current.emit('candidate', event.candidate);\n        }\n      };\n      pc.ontrack = event => {\n        console.log('ontrack event:', event);\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n          console.log('srcObject set:', videoRef.current.srcObject);\n        } else {\n          console.log('videoRef.current is null');\n        }\n      };\n      pc.oniceconnectionstatechange = () => {\n        console.log('ICE Connection State Change:', pc.iceConnectionState);\n      };\n      pc.onconnectionstatechange = () => {\n        console.log('Connection State Change:', pc.connectionState);\n      };\n      pc.onnegotiationneeded = async () => {\n        console.log('Negotiation needed');\n        try {\n          const offer = await pc.createOffer();\n          await pc.setLocalDescription(offer);\n          socketRef.current.emit('signal', pc.localDescription);\n        } catch (err) {\n          console.error('Error during negotiation', err);\n        }\n      };\n      socketRef.current.on('signal', async data => {\n        console.log('Received signal:', data);\n        if (data.type === 'offer') {\n          await pc.setRemoteDescription(new RTCSessionDescription(data));\n          const answer = await pc.createAnswer();\n          await pc.setLocalDescription(answer);\n          socketRef.current.emit('signal', pc.localDescription);\n        } else if (data.type === 'answer') {\n          await pc.setRemoteDescription(new RTCSessionDescription(data));\n        } else if (data.candidate) {\n          try {\n            await pc.addIceCandidate(new RTCIceCandidate(data));\n          } catch (error) {\n            console.error('Error adding ICE candidate:', error);\n          }\n        }\n      });\n      socketRef.current.emit('join');\n      setPeerConnection(pc);\n      return () => {\n        pc.close();\n        socketRef.current.disconnect();\n      };\n    }\n  }, [selectedRobot]);\n  useEffect(() => {\n    const currentVideoRef = videoRef.current;\n    console.log('Video ref:', currentVideoRef);\n    return () => {\n      if (currentVideoRef) {\n        currentVideoRef.srcObject = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    console.log('videoRef:', videoRef.current);\n  }, [videoRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\nexport default WebcamStream;","map":{"version":3,"names":["React","useEffect","useRef","useState","io","WebcamStream","selectedRobot","videoRef","peerConnection","setPeerConnection","socketRef","current","pc","RTCPeerConnection","iceServers","urls","onicecandidate","event","candidate","console","log","emit","ontrack","srcObject","streams","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","connectionState","onnegotiationneeded","offer","createOffer","setLocalDescription","localDescription","err","error","on","data","type","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","close","disconnect","currentVideoRef","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst WebcamStream = ({ selectedRobot }) => {\n  const videoRef = useRef(null);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    if (selectedRobot) {\n      socketRef.current = io('http://172.30.1.40:7001'); // WebRTC 서버 주소\n\n      const pc = new RTCPeerConnection({\n        iceServers: [\n          { urls: 'stun:stun.l.google.com:19302' },\n          { urls: 'stun:stun1.l.google.com:19302' }\n        ]\n      });\n\n      pc.onicecandidate = (event) => {\n        if (event.candidate) {\n          console.log('New ICE candidate:', event.candidate);\n          socketRef.current.emit('candidate', event.candidate);\n        }\n      };\n\n      pc.ontrack = (event) => {\n        console.log('ontrack event:', event);\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n          console.log('srcObject set:', videoRef.current.srcObject);\n        } else {\n          console.log('videoRef.current is null');\n        }\n      };\n\n      pc.oniceconnectionstatechange = () => {\n        console.log('ICE Connection State Change:', pc.iceConnectionState);\n      };\n\n      pc.onconnectionstatechange = () => {\n        console.log('Connection State Change:', pc.connectionState);\n      };\n\n      pc.onnegotiationneeded = async () => {\n        console.log('Negotiation needed');\n        try {\n          const offer = await pc.createOffer();\n          await pc.setLocalDescription(offer);\n          socketRef.current.emit('signal', pc.localDescription);\n        } catch (err) {\n          console.error('Error during negotiation', err);\n        }\n      };\n\n      socketRef.current.on('signal', async (data) => {\n        console.log('Received signal:', data);\n        if (data.type === 'offer') {\n          await pc.setRemoteDescription(new RTCSessionDescription(data));\n          const answer = await pc.createAnswer();\n          await pc.setLocalDescription(answer);\n          socketRef.current.emit('signal', pc.localDescription);\n        } else if (data.type === 'answer') {\n          await pc.setRemoteDescription(new RTCSessionDescription(data));\n        } else if (data.candidate) {\n          try {\n            await pc.addIceCandidate(new RTCIceCandidate(data));\n          } catch (error) {\n            console.error('Error adding ICE candidate:', error);\n          }\n        }\n      });\n\n      socketRef.current.emit('join');\n\n      setPeerConnection(pc);\n\n      return () => {\n        pc.close();\n        socketRef.current.disconnect();\n      };\n    }\n  }, [selectedRobot]);\n\n  useEffect(() => {\n    const currentVideoRef = videoRef.current;\n    console.log('Video ref:', currentVideoRef);\n    return () => {\n      if (currentVideoRef) {\n        currentVideoRef.srcObject = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log('videoRef:', videoRef.current);\n  }, [videoRef]);\n\n  return (\n    <div>\n      <video ref={videoRef} autoPlay playsInline />\n    </div>\n  );\n};\n\nexport default WebcamStream;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}