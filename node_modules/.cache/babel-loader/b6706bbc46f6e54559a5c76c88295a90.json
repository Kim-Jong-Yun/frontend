{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/MapComponent.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nfunction MapComponent() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    fetchMonitoredMap();\n  }, []);\n  useEffect(() => {\n    if (mapUrl) {\n      const socket = new WebSocket('ws://your-websocket-url');\n      socket.onopen = () => {\n        console.log('WebSocket 연결 성공');\n      };\n      socket.onmessage = event => {\n        const updatedRobots = JSON.parse(event.data);\n        setRobots(updatedRobots); // 로봇 데이터를 갱신\n        drawMapAndRobots(canvasRef.current.width, canvasRef.current.height, updatedRobots);\n      };\n      socket.onerror = error => {\n        console.error('WebSocket 오류:', error);\n      };\n      socket.onclose = () => {\n        console.log('WebSocket 연결 종료');\n      };\n      return () => {\n        socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n      };\n    }\n  }, [mapUrl]); // mapUrl이 설정된 후 WebSocket 연결\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login'; // 토큰이 없으면 로그인 페이지로 리디렉션\n      return null;\n    }\n    return token;\n  };\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n          const ctx = canvas.getContext('2d');\n          // 캔버스 크기 설정\n          canvas.width = img.width;\n          canvas.height = img.height;\n          // 지도 이미지 그리기\n          ctx.drawImage(img, 0, 0, img.width, img.height);\n        }\n      };\n      img.onerror = err => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n  const drawMapAndRobots = (imgWidth, imgHeight, robots) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // 지도 다시 그리기\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n    mapImage.onload = () => {\n      ctx.clearRect(0, 0, imgWidth, imgHeight); // 이전 캔버스 지우기\n      ctx.drawImage(mapImage, 0, 0, imgWidth, imgHeight);\n\n      // 로봇들 위치 그리기\n      robots.forEach(robot => {\n        var _robot$status;\n        const {\n          x,\n          y\n        } = robot.location;\n        ctx.fillStyle = ((_robot$status = robot.status) === null || _robot$status === void 0 ? void 0 : _robot$status.state) === 'Tasking' ? 'blue' : 'red'; // 상태에 따라 색상 다르게\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '800px',\n      // 고정된 너비\n      height: '600px',\n      // 고정된 높이\n      overflow: 'auto',\n      // 넘치면 스크롤\n      border: '1px solid #ccc',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"));\n}\nexport default MapComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","MapComponent","mapUrl","setMapUrl","robots","setRobots","canvasRef","fetchMonitoredMap","socket","WebSocket","onopen","console","log","onmessage","event","updatedRobots","JSON","parse","data","drawMapAndRobots","current","width","height","onerror","error","onclose","close","getToken","token","localStorage","getItem","alert","window","location","href","response","get","headers","Authorization","responseType","url","URL","createObjectURL","img","Image","src","onload","canvas","ctx","getContext","drawImage","err","imgWidth","imgHeight","mapImage","clearRect","forEach","robot","_robot$status","x","y","fillStyle","status","state","beginPath","arc","Math","PI","fill","createElement","style","overflow","border","display","justifyContent","alignItems","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction MapComponent() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    fetchMonitoredMap();\n  }, []);\n\n  useEffect(() => {\n    if (mapUrl) {\n      const socket = new WebSocket('ws://your-websocket-url');\n\n      socket.onopen = () => {\n        console.log('WebSocket 연결 성공');\n      };\n\n      socket.onmessage = (event) => {\n        const updatedRobots = JSON.parse(event.data);\n        setRobots(updatedRobots); // 로봇 데이터를 갱신\n        drawMapAndRobots(canvasRef.current.width, canvasRef.current.height, updatedRobots);\n      };\n\n      socket.onerror = (error) => {\n        console.error('WebSocket 오류:', error);\n      };\n\n      socket.onclose = () => {\n        console.log('WebSocket 연결 종료');\n      };\n\n      return () => {\n        socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n      };\n    }\n  }, [mapUrl]); // mapUrl이 설정된 후 WebSocket 연결\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login'; // 토큰이 없으면 로그인 페이지로 리디렉션\n      return null;\n    }\n    return token;\n  };\n\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n          const ctx = canvas.getContext('2d');\n          // 캔버스 크기 설정\n          canvas.width = img.width;\n          canvas.height = img.height;\n          // 지도 이미지 그리기\n          ctx.drawImage(img, 0, 0, img.width, img.height);\n        }\n      };\n      img.onerror = (err) => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n\n  const drawMapAndRobots = (imgWidth, imgHeight, robots) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n\n    // 지도 다시 그리기\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n    mapImage.onload = () => {\n      ctx.clearRect(0, 0, imgWidth, imgHeight); // 이전 캔버스 지우기\n      ctx.drawImage(mapImage, 0, 0, imgWidth, imgHeight);\n\n      // 로봇들 위치 그리기\n      robots.forEach((robot) => {\n        const { x, y } = robot.location;\n        ctx.fillStyle = robot.status?.state === 'Tasking' ? 'blue' : 'red'; // 상태에 따라 색상 다르게\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n  };\n\n  return (\n    <div style={{\n      width: '800px',  // 고정된 너비\n      height: '600px', // 고정된 높이\n      overflow: 'auto',   // 넘치면 스크롤\n      border: '1px solid #ccc', \n      display: 'flex', \n      justifyContent: 'center', \n      alignItems: 'center'\n    }}>\n      {mapUrl ? (\n        <canvas ref={canvasRef} style={{ border: '1px solid #ccc' }}></canvas>\n      ) : (\n        <p>지도를 불러오는 중...</p>\n      )}\n    </div>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}