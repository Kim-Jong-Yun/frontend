{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask';\nimport TaskFlow from './TaskFlow';\nimport './TaskPage.css';\nfunction TaskPage() {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [assignPopupOpen, setAssignPopupOpen] = useState(false);\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n  const [deletedWorkflowNodes, setDeletedWorkflowNodes] = useState([]);\n  const [monitoredMapName, setMonitoredMapName] = useState('');\n  const taskFlowRef = useRef(null);\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskType, setTaskType] = useState('A');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    fetchTasks();\n    fetchMonitoredMapName();\n  }, [token]);\n  const fetchMonitoredMapName = async () => {\n    try {\n      const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const monitoredMapData = mapResponse.data;\n      if (monitoredMapData && monitoredMapData.name) {\n        setMonitoredMapName(monitoredMapData.name);\n      } else {\n        setMonitoredMapName('맵 정보 없음');\n      }\n    } catch (error) {\n      console.error('모니터링 중인 맵 정보를 가져오는 중 오류가 발생했습니다:', error);\n      setMonitoredMapName('오류 발생');\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const monitoredMapData = mapResponse.data;\n      if (!monitoredMapData || !monitoredMapData._id) {\n        console.error('모니터링 중인 맵 정보가 없습니다.');\n        return;\n      }\n      const taskResponse = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${monitoredMapData._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(taskResponse.data);\n      if (taskResponse.data.length > 0) handleTaskClick(taskResponse.data[0]);\n    } catch (error) {\n      console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n    }\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setTaskName(task.name);\n    setTaskDescription(task.description || '');\n    setTaskType(task.taskType || 'A');\n    setTemporaryWorkflow([]);\n    setDeletedWorkflowNodes([]);\n    if (taskFlowRef.current) {\n      taskFlowRef.current.clearTemporaryWorkflow();\n    }\n  };\n  const togglePopup = () => setIsPopupOpen(prev => !prev);\n  const toggleAssignPopup = () => setAssignPopupOpen(prev => !prev);\n  const handleTaskCreated = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    handleTaskClick(newTask);\n  };\n  const handleSaveTask = async () => {\n    if (!selectedTask) {\n      alert('저장할 작업을 선택하세요.');\n      return;\n    }\n    try {\n      const updatedTask = {\n        ...selectedTask,\n        workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n        name: taskName,\n        description: taskDescription,\n        taskType: taskType\n      };\n      await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      for (const {\n        taskId,\n        nodeId\n      } of deletedWorkflowNodes) {\n        await axios.put(`http://172.30.1.30:8080/task/tasks/${taskId}/workflow/${nodeId}/nodeToZero`, null, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      setTemporaryWorkflow([]);\n      setDeletedWorkflowNodes([]);\n      if (taskFlowRef.current) {\n        taskFlowRef.current.clearTemporaryWorkflow();\n      }\n      alert('작업이 성공적으로 저장되었습니다.');\n      await fetchTasks();\n      const updatedTasks = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${selectedTask.mapId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const savedTask = updatedTasks.data.find(task => task._id === selectedTask._id);\n      if (savedTask) handleTaskClick(savedTask);\n    } catch (error) {\n      console.error('작업 저장 중 오류가 발생했습니다.', error);\n      alert('작업 저장 중 오류가 발생했습니다.');\n    }\n  };\n  const handleTemporaryFlowAdd = newFlow => {\n    setTemporaryWorkflow(prev => [...prev, newFlow]);\n  };\n  const handleTemporaryFlowDelete = (taskId, flowId) => {\n    setDeletedWorkflowNodes(prev => [...prev, {\n      taskId,\n      nodeId: flowId\n    }]);\n  };\n  const handleDeleteTask = async () => {\n    if (!selectedTask) {\n      alert('삭제할 작업을 선택하세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('정말로 이 작업을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}/delete`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedTasks = tasks.filter(task => task._id !== selectedTask._id);\n      setTasks(updatedTasks);\n      if (updatedTasks.length > 0) {\n        handleTaskClick(updatedTasks[0]);\n      } else {\n        setSelectedTask(null);\n        setTaskName('');\n        setTaskDescription('');\n        setTaskType('A');\n        setTemporaryWorkflow([]);\n        setDeletedWorkflowNodes([]);\n      }\n      alert('작업이 성공적으로 삭제되었습니다.');\n    } catch (error) {\n      console.error('작업 삭제 중 오류가 발생했습니다.', error);\n      alert('작업 삭제 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5 \\uB9AC\\uC2A4\\uD2B8 - \", monitoredMapName), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-task-btn\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    onClick: () => handleTaskClick(task),\n    className: selectedTask && selectedTask._id === task._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, selectedTask ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uC0C1\\uC138 \\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-field\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC124\\uBA85:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea-field\",\n    value: taskDescription,\n    onChange: e => setTaskDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select-field\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 41\n    }\n  }, \"C\")))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uD50C\\uB85C\\uC6B0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TaskFlow, {\n    ref: taskFlowRef,\n    taskId: selectedTask._id,\n    workflow: selectedTask.workflow,\n    onTemporaryFlowAdd: handleTemporaryFlowAdd,\n    onTemporaryFlowDelete: handleTemporaryFlowDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\")), isPopupOpen && /*#__PURE__*/React.createElement(CreateTask, {\n    onClose: togglePopup,\n    onTaskCreated: handleTaskCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }), assignPopupOpen && /*#__PURE__*/React.createElement(AssignTaskPopup, {\n    onClose: toggleAssignPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"assign-task-btn\",\n    onClick: toggleAssignPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-task-btn\",\n    onClick: handleSaveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-task-btn\",\n    onClick: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC0AD\\uC81C\"))));\n}\nfunction AssignTaskPopup({\n  onClose\n}) {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  useEffect(() => {\n    const fetchActiveRobots = async () => {\n      try {\n        const response = await axios.get('http://172.30.1.30:5559/robot/robots/active', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Active 상태의 로봇을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    };\n    fetchActiveRobots();\n  }, []);\n  const handleRobotSelect = e => {\n    setSelectedRobot(e.target.value);\n  };\n  const handleAssign = () => {\n    if (!selectedRobot) {\n      alert('할당할 로봇을 선택하세요.');\n      return;\n    }\n    alert(`로봇 ${selectedRobot}이(가) 할당되었습니다.`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assign-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedRobot,\n    onChange: handleRobotSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), robots.map(robot => /*#__PURE__*/React.createElement(\"option\", {\n    key: robot._id,\n    value: robot._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, robot.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAssign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }, \"\\uD560\\uB2F9\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, \"\\uB2EB\\uAE30\"))));\n}\nexport default TaskPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Navbar","LogoutButton","UserInfo","CreateTask","TaskFlow","TaskPage","tasks","setTasks","selectedTask","setSelectedTask","isPopupOpen","setIsPopupOpen","assignPopupOpen","setAssignPopupOpen","temporaryWorkflow","setTemporaryWorkflow","deletedWorkflowNodes","setDeletedWorkflowNodes","monitoredMapName","setMonitoredMapName","taskFlowRef","taskName","setTaskName","taskDescription","setTaskDescription","taskType","setTaskType","token","localStorage","getItem","fetchTasks","fetchMonitoredMapName","mapResponse","get","headers","Authorization","monitoredMapData","data","name","error","console","_id","taskResponse","length","handleTaskClick","task","description","current","clearTemporaryWorkflow","togglePopup","prev","toggleAssignPopup","handleTaskCreated","newTask","prevTasks","handleSaveTask","alert","updatedTask","workflow","put","taskId","nodeId","updatedTasks","mapId","savedTask","find","handleTemporaryFlowAdd","newFlow","handleTemporaryFlowDelete","flowId","handleDeleteTask","confirmDelete","window","confirm","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","key","type","value","onChange","e","target","ref","onTemporaryFlowAdd","onTemporaryFlowDelete","onClose","onTaskCreated","AssignTaskPopup","robots","setRobots","selectedRobot","setSelectedRobot","fetchActiveRobots","response","handleRobotSelect","handleAssign","disabled","robot"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask';\nimport TaskFlow from './TaskFlow';\nimport './TaskPage.css';\n\nfunction TaskPage() {\n    const [tasks, setTasks] = useState([]);\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [assignPopupOpen, setAssignPopupOpen] = useState(false);\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n    const [deletedWorkflowNodes, setDeletedWorkflowNodes] = useState([]);\n    const [monitoredMapName, setMonitoredMapName] = useState('');\n    const taskFlowRef = useRef(null);\n\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskType, setTaskType] = useState('A');\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        fetchTasks();\n        fetchMonitoredMapName();\n    }, [token]);\n\n    const fetchMonitoredMapName = async () => {\n        try {\n            const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            const monitoredMapData = mapResponse.data;\n            if (monitoredMapData && monitoredMapData.name) {\n                setMonitoredMapName(monitoredMapData.name);\n            } else {\n                setMonitoredMapName('맵 정보 없음');\n            }\n        } catch (error) {\n            console.error('모니터링 중인 맵 정보를 가져오는 중 오류가 발생했습니다:', error);\n            setMonitoredMapName('오류 발생');\n        }\n    };\n\n    const fetchTasks = async () => {\n        try {\n            const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            const monitoredMapData = mapResponse.data;\n            if (!monitoredMapData || !monitoredMapData._id) {\n                console.error('모니터링 중인 맵 정보가 없습니다.');\n                return;\n            }\n\n            const taskResponse = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${monitoredMapData._id}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setTasks(taskResponse.data);\n            if (taskResponse.data.length > 0) handleTaskClick(taskResponse.data[0]);\n        } catch (error) {\n            console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n        }\n    };\n\n    const handleTaskClick = (task) => {\n        setSelectedTask(task);\n        setTaskName(task.name);\n        setTaskDescription(task.description || '');\n        setTaskType(task.taskType || 'A');\n        setTemporaryWorkflow([]);\n        setDeletedWorkflowNodes([]);\n\n        if (taskFlowRef.current) {\n            taskFlowRef.current.clearTemporaryWorkflow();\n        }\n    };\n\n    const togglePopup = () => setIsPopupOpen((prev) => !prev);\n    const toggleAssignPopup = () => setAssignPopupOpen((prev) => !prev);\n\n    const handleTaskCreated = (newTask) => {\n        setTasks((prevTasks) => [...prevTasks, newTask]);\n        handleTaskClick(newTask);\n    };\n\n    const handleSaveTask = async () => {\n        if (!selectedTask) {\n            alert('저장할 작업을 선택하세요.');\n            return;\n        }\n    \n        try {\n            const updatedTask = {\n                ...selectedTask,\n                workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n                name: taskName,\n                description: taskDescription,\n                taskType: taskType,\n            };\n    \n            await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n    \n            for (const { taskId, nodeId } of deletedWorkflowNodes) {\n                await axios.put(\n                    `http://172.30.1.30:8080/task/tasks/${taskId}/workflow/${nodeId}/nodeToZero`,\n                    null,\n                    { headers: { Authorization: `Bearer ${token}` } }\n                );\n            }\n    \n            setTemporaryWorkflow([]);\n            setDeletedWorkflowNodes([]);\n            if (taskFlowRef.current) {\n                taskFlowRef.current.clearTemporaryWorkflow();\n            }\n    \n            alert('작업이 성공적으로 저장되었습니다.');\n            await fetchTasks();\n    \n            const updatedTasks = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${selectedTask.mapId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            const savedTask = updatedTasks.data.find((task) => task._id === selectedTask._id);\n            if (savedTask) handleTaskClick(savedTask);\n    \n        } catch (error) {\n            console.error('작업 저장 중 오류가 발생했습니다.', error);\n            alert('작업 저장 중 오류가 발생했습니다.');\n        }\n    };\n\n    const handleTemporaryFlowAdd = (newFlow) => {\n        setTemporaryWorkflow((prev) => [...prev, newFlow]);\n    };\n\n    const handleTemporaryFlowDelete = (taskId, flowId) => {\n        setDeletedWorkflowNodes((prev) => [...prev, { taskId, nodeId: flowId }]);\n    };\n\n    const handleDeleteTask = async () => {\n        if (!selectedTask) {\n            alert('삭제할 작업을 선택하세요.');\n            return;\n        }\n    \n        const confirmDelete = window.confirm('정말로 이 작업을 삭제하시겠습니까?');\n        if (!confirmDelete) return;\n    \n        try {\n            await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}/delete`, null, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n    \n            const updatedTasks = tasks.filter((task) => task._id !== selectedTask._id);\n            setTasks(updatedTasks);\n    \n            if (updatedTasks.length > 0) {\n                handleTaskClick(updatedTasks[0]);\n            } else {\n                setSelectedTask(null);\n                setTaskName('');\n                setTaskDescription('');\n                setTaskType('A');\n                setTemporaryWorkflow([]);\n                setDeletedWorkflowNodes([]);\n            }\n    \n            alert('작업이 성공적으로 삭제되었습니다.');\n        } catch (error) {\n            console.error('작업 삭제 중 오류가 발생했습니다.', error);\n            alert('작업 삭제 중 오류가 발생했습니다.');\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <header className=\"header\">\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <Navbar className=\"navbar\" />\n            <div className=\"main-content\">\n                <div className=\"task-list\">\n                    <div className=\"task-list-header\">\n                        <h3>작업 리스트 - {monitoredMapName}</h3>\n                        <button className=\"add-task-btn\" onClick={togglePopup}>+</button>\n                    </div>\n                    <ul>\n                        {tasks.map((task) => (\n                            <li\n                                key={task._id}\n                                onClick={() => handleTaskClick(task)}\n                                className={selectedTask && selectedTask._id === task._id ? 'selected' : ''}\n                            >\n                                {task.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"task-details\">\n                    {selectedTask ? (\n                        <div>\n                            <h3>작업 상세 정보</h3>\n                            <label>\n                                <strong>작업 이름:</strong>\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    value={taskName}\n                                    onChange={(e) => setTaskName(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <label>\n                                <strong>작업 설명:</strong>\n                                <textarea\n                                    className=\"textarea-field\"\n                                    value={taskDescription}\n                                    onChange={(e) => setTaskDescription(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <div className=\"task-row\">\n                                <label>\n                                    <strong>작업 유형:</strong>\n                                    <select\n                                        className=\"select-field\"\n                                        value={taskType}\n                                        onChange={(e) => setTaskType(e.target.value)}\n                                    >\n                                        <option value=\"A\">A</option>\n                                        <option value=\"B\">B</option>\n                                        <option value=\"C\">C</option>\n                                    </select>\n                                </label>\n                            </div>\n\n                            <h4>작업 플로우</h4>\n                            <div className=\"task-flow-section\">\n                                <TaskFlow\n                                    ref={taskFlowRef}\n                                    taskId={selectedTask._id}\n                                    workflow={selectedTask.workflow}\n                                    onTemporaryFlowAdd={handleTemporaryFlowAdd}\n                                    onTemporaryFlowDelete={handleTemporaryFlowDelete}\n                                />\n                            </div>\n                        </div>\n                    ) : (\n                        <p>작업을 선택하세요.</p>\n                    )}\n                </div>\n\n                {isPopupOpen && (\n                    <CreateTask onClose={togglePopup} onTaskCreated={handleTaskCreated} />\n                )}\n\n                {assignPopupOpen && (\n                    <AssignTaskPopup onClose={toggleAssignPopup} />\n                )}\n\n                <div className=\"floating-buttons\">\n                    <button className=\"assign-task-btn\" onClick={toggleAssignPopup}>작업 할당</button>\n                    <button className=\"save-task-btn\" onClick={handleSaveTask}>작업 저장</button>\n                    <button className=\"delete-task-btn\" onClick={handleDeleteTask}>작업 삭제</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction AssignTaskPopup({ onClose }) {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n\n    useEffect(() => {\n        const fetchActiveRobots = async () => {\n            try {\n                const response = await axios.get('http://172.30.1.30:5559/robot/robots/active', {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Active 상태의 로봇을 불러오는 중 오류가 발생했습니다:', error);\n            }\n        };\n\n        fetchActiveRobots();\n    }, []);\n\n    const handleRobotSelect = (e) => {\n        setSelectedRobot(e.target.value);\n    };\n\n    const handleAssign = () => {\n        if (!selectedRobot) {\n            alert('할당할 로봇을 선택하세요.');\n            return;\n        }\n        alert(`로봇 ${selectedRobot}이(가) 할당되었습니다.`);\n    };\n\n    return (\n        <div className=\"assign-popup\">\n            <div className=\"popup-content\">\n                <h3>작업 할당</h3>\n                <label>\n                    <strong>로봇 선택:</strong>\n                    <select value={selectedRobot} onChange={handleRobotSelect}>\n                        <option value=\"\" disabled>로봇을 선택하세요</option>\n                        {robots.map((robot) => (\n                            <option key={robot._id} value={robot._id}>\n                                {robot.name}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <div className=\"popup-buttons\">\n                    <button onClick={handleAssign}>할당하기</button>\n                    <button onClick={onClose}>닫기</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}