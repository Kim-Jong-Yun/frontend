{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask';\nimport TaskFlow from './TaskFlow';\nimport './TaskPage.css';\nfunction TaskPage() {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [monitoredMap, setMonitoredMap] = useState(null);\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n  const [taskName, setTaskName] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskType, setTaskType] = useState('A');\n  const taskFlowRef = useRef();\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const monitoredMap = mapResponse.data;\n        setMonitoredMap(monitoredMap);\n        if (!monitoredMap || !monitoredMap._id) {\n          console.error('모니터링 중인 맵 정보가 없습니다.');\n          return;\n        }\n        const taskResponse = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${monitoredMap._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTasks(taskResponse.data);\n        if (taskResponse.data.length > 0) {\n          handleTaskClick(taskResponse.data[0]);\n        }\n      } catch (error) {\n        console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n      }\n    }\n    fetchTasks();\n  }, [token]);\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setTaskName(task.name);\n    setTaskDescription(task.description || '');\n    setTaskType(task.taskType || 'A');\n    setTemporaryWorkflow([]);\n  };\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const handleTaskCreated = newTask => {\n    setTasks([...tasks, newTask]);\n    handleTaskClick(newTask);\n  };\n  const handleSaveTask = async () => {\n    if (selectedTask) {\n      try {\n        const updatedTask = {\n          ...selectedTask,\n          workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n          name: taskName,\n          description: taskDescription,\n          taskType: taskType\n        };\n        await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const response = await axios.get(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const updatedSelectedTask = response.data;\n        setSelectedTask(updatedSelectedTask);\n        setTasks(prevTasks => prevTasks.map(task => task._id === updatedSelectedTask._id ? updatedSelectedTask : task));\n        taskFlowRef.current.clearTemporaryWorkflow();\n        alert('작업이 성공적으로 저장되었습니다.');\n      } catch (error) {\n        console.error('작업 저장 중 오류가 발생했습니다.', error);\n        alert('작업 저장 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('저장할 작업을 선택하세요.');\n    }\n  };\n  const handleTemporaryFlowAdd = newFlow => {\n    setTemporaryWorkflow([...temporaryWorkflow, newFlow]);\n  };\n  const handleDeleteTask = async () => {\n    if (selectedTask) {\n      try {\n        await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}/delete`, null, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 삭제된 작업을 tasks 목록에서 제거하고 최상단 작업을 선택\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task._id !== selectedTask._id);\n          const nextTask = updatedTasks[0] || null; // 최상단 작업이 있으면 선택\n          if (nextTask) {\n            handleTaskClick(nextTask);\n          } else {\n            setSelectedTask(null);\n            setTaskName('');\n            setTaskDescription('');\n            setTaskType('A');\n            setTemporaryWorkflow([]);\n          }\n          return updatedTasks;\n        });\n        alert('작업이 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error('작업 삭제 중 오류가 발생했습니다.', error);\n        alert('작업 삭제 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('삭제할 작업을 선택하세요.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list-header\",\n    style: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5 \\uB9AC\\uC2A4\\uD2B8\"), monitoredMap && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray',\n      marginLeft: '10px',\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, \"- \", monitoredMap.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-task-btn\",\n    onClick: togglePopup,\n    style: {\n      marginLeft: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    onClick: () => handleTaskClick(task),\n    className: selectedTask && selectedTask._id === task._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, selectedTask ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uC0C1\\uC138 \\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-field\",\n    value: taskName,\n    onChange: e => setTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, \"\\uC791\\uC5C5 \\uC124\\uBA85:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea-field\",\n    value: taskDescription,\n    onChange: e => setTaskDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select-field\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 41\n    }\n  }, \"C\"))), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"created-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"\\uC0DD\\uC131\\uC77C:\"), \" \", new Date(selectedTask.createdAt).toLocaleDateString())), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, \"\\uC791\\uC5C5 \\uD50C\\uB85C\\uC6B0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TaskFlow, {\n    ref: taskFlowRef,\n    workflow: selectedTask.workflow,\n    onTemporaryFlowAdd: handleTemporaryFlowAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\")), isPopupOpen && /*#__PURE__*/React.createElement(CreateTask, {\n    onClose: togglePopup,\n    onTaskCreated: handleTaskCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"assign-task-btn\",\n    onClick: () => alert('작업 할당'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uD560\\uB2F9\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-task-btn\",\n    onClick: handleSaveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-task-btn\",\n    onClick: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC5C5 \\uC0AD\\uC81C\"))));\n}\nexport default TaskPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Navbar","LogoutButton","UserInfo","CreateTask","TaskFlow","TaskPage","tasks","setTasks","selectedTask","setSelectedTask","isPopupOpen","setIsPopupOpen","monitoredMap","setMonitoredMap","temporaryWorkflow","setTemporaryWorkflow","taskName","setTaskName","taskDescription","setTaskDescription","taskType","setTaskType","taskFlowRef","token","localStorage","getItem","fetchTasks","mapResponse","get","headers","Authorization","data","_id","console","error","taskResponse","length","handleTaskClick","task","name","description","togglePopup","handleTaskCreated","newTask","handleSaveTask","updatedTask","workflow","put","response","updatedSelectedTask","prevTasks","map","current","clearTemporaryWorkflow","alert","handleTemporaryFlowAdd","newFlow","handleDeleteTask","updatedTasks","filter","nextTask","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","width","margin","color","marginLeft","fontSize","onClick","key","type","value","onChange","e","target","Date","createdAt","toLocaleDateString","ref","onTemporaryFlowAdd","onClose","onTaskCreated"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport CreateTask from './CreateTask';\nimport TaskFlow from './TaskFlow';\nimport './TaskPage.css';\n\nfunction TaskPage() {\n    const [tasks, setTasks] = useState([]);\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [monitoredMap, setMonitoredMap] = useState(null);\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskType, setTaskType] = useState('A');\n\n    const taskFlowRef = useRef();\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        async function fetchTasks() {\n            try {\n                const mapResponse = await axios.get('http://172.30.1.30:5557/map/monitored', {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                const monitoredMap = mapResponse.data;\n                setMonitoredMap(monitoredMap);\n\n                if (!monitoredMap || !monitoredMap._id) {\n                    console.error('모니터링 중인 맵 정보가 없습니다.');\n                    return;\n                }\n\n                const taskResponse = await axios.get(`http://172.30.1.30:8080/task/tasks?mapId=${monitoredMap._id}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setTasks(taskResponse.data);\n\n                if (taskResponse.data.length > 0) {\n                    handleTaskClick(taskResponse.data[0]);\n                }\n            } catch (error) {\n                console.error('작업 리스트를 가져오는 중 오류가 발생했습니다.', error);\n            }\n        }\n        fetchTasks();\n    }, [token]);\n\n    const handleTaskClick = (task) => {\n        setSelectedTask(task);\n        setTaskName(task.name);\n        setTaskDescription(task.description || '');\n        setTaskType(task.taskType || 'A');\n        setTemporaryWorkflow([]);\n    };\n\n    const togglePopup = () => {\n        setIsPopupOpen(!isPopupOpen);\n    };\n\n    const handleTaskCreated = (newTask) => {\n        setTasks([...tasks, newTask]);\n        handleTaskClick(newTask);\n    };\n\n    const handleSaveTask = async () => {\n        if (selectedTask) {\n            try {\n                const updatedTask = {\n                    ...selectedTask,\n                    workflow: [...selectedTask.workflow, ...temporaryWorkflow],\n                    name: taskName,\n                    description: taskDescription,\n                    taskType: taskType,\n                };\n\n                await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, updatedTask, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                const response = await axios.get(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                const updatedSelectedTask = response.data;\n                setSelectedTask(updatedSelectedTask);\n\n                setTasks((prevTasks) =>\n                    prevTasks.map((task) => (task._id === updatedSelectedTask._id ? updatedSelectedTask : task))\n                );\n\n                taskFlowRef.current.clearTemporaryWorkflow();\n\n                alert('작업이 성공적으로 저장되었습니다.');\n            } catch (error) {\n                console.error('작업 저장 중 오류가 발생했습니다.', error);\n                alert('작업 저장 중 오류가 발생했습니다.');\n            }\n        } else {\n            alert('저장할 작업을 선택하세요.');\n        }\n    };\n\n    const handleTemporaryFlowAdd = (newFlow) => {\n        setTemporaryWorkflow([...temporaryWorkflow, newFlow]);\n    };\n\n    const handleDeleteTask = async () => {\n        if (selectedTask) {\n            try {\n                await axios.put(`http://172.30.1.30:8080/task/tasks/${selectedTask._id}/delete`, null, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                // 삭제된 작업을 tasks 목록에서 제거하고 최상단 작업을 선택\n                setTasks((prevTasks) => {\n                    const updatedTasks = prevTasks.filter((task) => task._id !== selectedTask._id);\n                    const nextTask = updatedTasks[0] || null; // 최상단 작업이 있으면 선택\n                    if (nextTask) {\n                        handleTaskClick(nextTask);\n                    } else {\n                        setSelectedTask(null);\n                        setTaskName('');\n                        setTaskDescription('');\n                        setTaskType('A');\n                        setTemporaryWorkflow([]);\n                    }\n                    return updatedTasks;\n                });\n\n                alert('작업이 성공적으로 삭제되었습니다.');\n            } catch (error) {\n                console.error('작업 삭제 중 오류가 발생했습니다.', error);\n                alert('작업 삭제 중 오류가 발생했습니다.');\n            }\n        } else {\n            alert('삭제할 작업을 선택하세요.');\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <header className=\"header\">\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <Navbar className=\"navbar\" />\n            <div className=\"main-content\">\n                <div className=\"task-list\">\n                    <div className=\"task-list-header\" style={{ display: 'inline-flex', alignItems: 'center', width: '100%' }}>\n                        <h3 style={{ margin: 0 }}>작업 리스트</h3>\n                        {monitoredMap && (\n                            <span style={{ color: 'gray', marginLeft: '10px', fontSize: '14px' }}>\n                                - {monitoredMap.name}\n                            </span>\n                        )}\n                        <button className=\"add-task-btn\" onClick={togglePopup} style={{ marginLeft: 'auto' }}>+</button>\n                    </div>\n                    <ul>\n                        {tasks.map((task) => (\n                            <li\n                                key={task._id}\n                                onClick={() => handleTaskClick(task)}\n                                className={selectedTask && selectedTask._id === task._id ? 'selected' : ''}\n                            >\n                                {task.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"task-details\">\n                    {selectedTask ? (\n                        <div>\n                            <h3>작업 상세 정보</h3>\n                            <label>\n                                <strong>작업 이름:</strong>\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    value={taskName}\n                                    onChange={(e) => setTaskName(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <label>\n                                <strong>작업 설명:</strong>\n                                <textarea\n                                    className=\"textarea-field\"\n                                    value={taskDescription}\n                                    onChange={(e) => setTaskDescription(e.target.value)}\n                                />\n                            </label>\n                            <br />\n                            <div className=\"task-row\">\n                                <label>\n                                    <strong>작업 유형:</strong>\n                                    <select\n                                        className=\"select-field\"\n                                        value={taskType}\n                                        onChange={(e) => setTaskType(e.target.value)}\n                                    >\n                                        <option value=\"A\">A</option>\n                                        <option value=\"B\">B</option>\n                                        <option value=\"C\">C</option>\n                                    </select>\n                                </label>\n                                <label className=\"created-date\">\n                                    <strong>생성일:</strong> {new Date(selectedTask.createdAt).toLocaleDateString()}\n                                </label>\n                            </div>\n\n                            <h4>작업 플로우</h4>\n                            <div className=\"task-flow-section\">\n                                <TaskFlow\n                                    ref={taskFlowRef}\n                                    workflow={selectedTask.workflow}\n                                    onTemporaryFlowAdd={handleTemporaryFlowAdd}\n                                />\n                            </div>\n                        </div>\n                    ) : (\n                        <p>작업을 선택하세요.</p>\n                    )}\n                </div>\n\n                {isPopupOpen && (\n                    <CreateTask onClose={togglePopup} onTaskCreated={handleTaskCreated} />\n                )}\n\n                <div className=\"floating-buttons\">\n                    <button className=\"assign-task-btn\" onClick={() => alert('작업 할당')}>작업 할당</button>\n                    <button className=\"save-task-btn\" onClick={handleSaveTask}>작업 저장</button>\n                    <button className=\"delete-task-btn\" onClick={handleDeleteTask}>작업 삭제</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}