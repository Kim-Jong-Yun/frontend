{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/SlamStream.js\";\nimport React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nconst SlamStream = ({\n  selectedRobot\n}) => {\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (selectedRobot) {\n      const socket = io('http://172.30.1.40:7002');\n      socket.on('slam-stream', data => {\n        const videoElement = videoRef.current;\n        const blob = new Blob([data], {\n          type: 'video/mp2t'\n        });\n        videoElement.src = URL.createObjectURL(blob);\n        videoElement.play();\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [selectedRobot]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"SLAM Stream\"), /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\nexport default SlamStream;","map":{"version":3,"names":["React","useEffect","useRef","io","SlamStream","selectedRobot","videoRef","socket","on","data","videoElement","current","blob","Blob","type","src","URL","createObjectURL","play","disconnect","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","width"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/SlamStream.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst SlamStream = ({ selectedRobot }) => {\n    const videoRef = useRef(null);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            const socket = io('http://172.30.1.40:7002');\n            socket.on('slam-stream', (data) => {\n                const videoElement = videoRef.current;\n                const blob = new Blob([data], { type: 'video/mp2t' });\n                videoElement.src = URL.createObjectURL(blob);\n                videoElement.play();\n            });\n\n            return () => {\n                socket.disconnect();\n            };\n        }\n    }, [selectedRobot]);\n\n    return (\n        <div>\n            <h3>SLAM Stream</h3>\n            <video ref={videoRef} autoPlay playsInline style={{ width: '100%' }} />\n        </div>\n    );\n};\n\nexport default SlamStream;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EACtC,MAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ,IAAII,aAAa,EAAE;MACf,MAAME,MAAM,GAAGJ,EAAE,CAAC,yBAAyB,CAAC;MAC5CI,MAAM,CAACC,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;QAC/B,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,OAAO;QACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAE;UAAEK,IAAI,EAAE;QAAa,CAAC,CAAC;QACrDJ,YAAY,CAACK,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QAC5CF,YAAY,CAACQ,IAAI,CAAC,CAAC;MACvB,CAAC,CAAC;MAEF,OAAO,MAAM;QACTX,MAAM,CAACY,UAAU,CAAC,CAAC;MACvB,CAAC;IACL;EACJ,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;EAEnB,oBACIL,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI1B,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CAAC,eACpB1B,KAAA,CAAAoB,aAAA;IAAOO,GAAG,EAAErB,QAAS;IAACsB,QAAQ;IAACC,WAAW;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACrE,CAAC;AAEd,CAAC;AAED,eAAetB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}