{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapEditPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapEditPage() {\n  _s();\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [monitoringMapId, setMonitoringMapId] = useState('');\n  const [mapImage, setMapImage] = useState('');\n  useEffect(() => {\n    const fetchMaps = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n        const response = await axios.get('http://localhost:5557/map', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMaps(response.data);\n      } catch (error) {\n        console.error('Error fetching maps:', error);\n      }\n    };\n    fetchMaps();\n  }, []);\n  const handleMapSelect = async map => {\n    setSelectedMap(map);\n    try {\n      const token = localStorage.getItem('token'); // Add token to the request\n      const response = await axios.get(`http://localhost:5557/map/png/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'arraybuffer'\n      });\n      const base64Image = Buffer.from(response.data, 'binary').toString('base64');\n      setMapImage(`data:image/png;base64,${base64Image}`);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  const handleMonitoringMapSelect = async mapId => {\n    try {\n      const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n      if (!token) {\n        console.error('No token found in localStorage');\n        return;\n      }\n      const userId = JSON.parse(atob(token.split('.')[1])).id; // 토큰에서 사용자 ID 추출\n      await axios.post('http://localhost:5557/map/select', {\n        mapId,\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMonitoringMapId(mapId);\n      alert('Map selected for monitoring successfully');\n    } catch (error) {\n      console.error('Error selecting map for monitoring:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Map Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: maps.map(map => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleMapSelect(map),\n        style: {\n          cursor: 'pointer',\n          fontWeight: map._id === monitoringMapId ? 'bold' : 'normal'\n        },\n        children: map.name\n      }, map._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), selectedMap && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Map Details: \", selectedMap.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", selectedMap.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), mapImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapImage,\n        alt: \"Selected Map\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMonitoringMapSelect(selectedMap._id),\n        children: selectedMap._id === monitoringMapId ? 'Selected for Monitoring' : 'Select for Monitoring'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(MapEditPage, \"2EXywxoIBPia2mg27/3vSxb+l6Q=\");\n_c = MapEditPage;\nexport default MapEditPage;\nvar _c;\n$RefreshReg$(_c, \"MapEditPage\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","jsxDEV","_jsxDEV","MapEditPage","_s","maps","setMaps","selectedMap","setSelectedMap","monitoringMapId","setMonitoringMapId","mapImage","setMapImage","fetchMaps","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleMapSelect","map","_id","responseType","base64Image","Buffer","from","toString","handleMonitoringMapSelect","mapId","userId","JSON","parse","atob","split","id","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","fontWeight","name","description","src","alt","maxWidth","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction MapEditPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [monitoringMapId, setMonitoringMapId] = useState('');\n  const [mapImage, setMapImage] = useState('');\n\n  useEffect(() => {\n    const fetchMaps = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n        const response = await axios.get('http://localhost:5557/map', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMaps(response.data);\n      } catch (error) {\n        console.error('Error fetching maps:', error);\n      }\n    };\n\n    fetchMaps();\n  }, []);\n\n  const handleMapSelect = async (map) => {\n    setSelectedMap(map);\n    try {\n      const token = localStorage.getItem('token'); // Add token to the request\n      const response = await axios.get(`http://localhost:5557/map/png/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'arraybuffer'\n      });\n      const base64Image = Buffer.from(response.data, 'binary').toString('base64');\n      setMapImage(`data:image/png;base64,${base64Image}`);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  \n\n  const handleMonitoringMapSelect = async (mapId) => {\n    try {\n      const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n      if (!token) {\n        console.error('No token found in localStorage');\n        return;\n      }\n      const userId = JSON.parse(atob(token.split('.')[1])).id; // 토큰에서 사용자 ID 추출\n      await axios.post('http://localhost:5557/map/select', { mapId, userId }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMonitoringMapId(mapId);\n      alert('Map selected for monitoring successfully');\n    } catch (error) {\n      console.error('Error selecting map for monitoring:', error);\n    }\n  };\n  \n\n  return (\n    <div>\n      <header>\n          <UserInfo />\n          <LogoutButton />\n      </header>\n      <Navbar />\n      <h2>Map Edit</h2>\n      <ul>\n        {maps.map((map) => (\n          <li \n            key={map._id} \n            onClick={() => handleMapSelect(map)}\n            style={{ cursor: 'pointer', fontWeight: map._id === monitoringMapId ? 'bold' : 'normal' }}\n          >\n            {map.name}\n          </li>\n        ))}\n      </ul>\n      {selectedMap && (\n        <div>\n          <h3>Map Details: {selectedMap.name}</h3>\n          <p>Description: {selectedMap.description}</p>\n          {mapImage && <img src={mapImage} alt=\"Selected Map\" style={{ maxWidth: '100%' }} />}\n          <button onClick={() => handleMonitoringMapSelect(selectedMap._id)}>\n            {selectedMap._id === monitoringMapId ? 'Selected for Monitoring' : 'Select for Monitoring'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MapEditPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}