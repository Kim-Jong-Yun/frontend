{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css'; // CSS 파일 적용\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState(''); // 로봇 이름 상태 추가\n  const [description, setDescription] = useState(''); // 로봇 설명 상태 추가\n  const [active, setActive] = useState(1); // 로봇 active 상태 추가\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n  const fetchRobots = async (preserveSelectedRobotId = null) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      // 선택된 로봇 유지\n      if (preserveSelectedRobotId) {\n        const selected = response.data.find(robot => robot._id === preserveSelectedRobotId);\n        if (selected) {\n          setSelectedRobot(selected);\n          setName(selected.name);\n          setDescription(selected.description);\n          setActive(selected.active);\n        }\n      } else if (response.data.length > 0) {\n        setSelectedRobot(response.data[0]);\n        setName(response.data[0].name);\n        setDescription(response.data[0].description);\n        setActive(response.data[0].active);\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n  const handleSelectRobot = robot => {\n    setSelectedRobot(robot);\n    setName(robot.name);\n    setDescription(robot.description);\n    setActive(robot.active);\n  };\n  const handleToggleActive = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      // active 상태 토글 API 호출\n      await axios.put(`http://172.30.1.15:5559/robot/toggleActive/${selectedRobot._id}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      // 선택된 로봇 유지하면서 목록 새로고침\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('Error toggling active status:', error);\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.15:5559/robot/update/${selectedRobot._id}`, {\n        name,\n        description\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchRobots(selectedRobot._id); // 선택된 로봇 유지하면서 목록 새로고침\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating robot:', error);\n      alert(`Error updating robot: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  const handleDelete = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    if (window.confirm('Are you sure you want to delete this robot?')) {\n      try {\n        await axios.put(`http://172.30.1.15:5559/robot/unregister/${selectedRobot._id}`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setSelectedRobot(null); // 선택된 로봇 초기화\n        fetchRobots(); // 목록 새로고침\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error removing robot:', error);\n        alert(`Error removing robot: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"AMR\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"robot-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    onClick: () => handleSelectRobot(robot),\n    className: selectedRobot && selectedRobot._id === robot._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, robot.name, \" - \", robot.ip, \" - Battery: \", robot.status.battery, \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, selectedRobot ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"robot-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    className: \"input-field\",\n    placeholder: \"Enter robot name\",\n    style: {\n      width: '50%'\n    } // 텍스트 박스 크기 줄이기\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '20px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"\\uBC30\\uD130\\uB9AC: \", selectedRobot.status.battery, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"\\uC124\\uBA85 :\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    rows: \"4\",\n    className: \"input-field\",\n    placeholder: \"Enter robot description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 22\n    }\n  }, \"IP Address:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, selectedRobot.ip)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 22\n    }\n  }, \"Model:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, selectedRobot.model)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 22\n    }\n  }, \"Status:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, selectedRobot.status.state)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 22\n    }\n  }, \"Registration Time:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, new Date(selectedRobot.createdAt).toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 24\n    }\n  }, \"Active :\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: active === 1,\n    onChange: handleToggleActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"Please select a robot to view and edit details\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-delete-button\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, \"DELETE\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-save-button\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"SAVE\")));\n}\nexport default RobotEditPage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","RobotEditPage","robots","setRobots","selectedRobot","setSelectedRobot","name","setName","description","setDescription","active","setActive","fetchRobots","preserveSelectedRobotId","token","localStorage","getItem","alert","response","get","headers","data","selected","find","robot","_id","length","error","console","handleSelectRobot","handleToggleActive","put","handleUpdate","e","preventDefault","_error$response","_error$response$data","message","handleDelete","window","confirm","_error$response2","_error$response2$data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","onClick","ip","status","battery","type","value","onChange","target","required","placeholder","style","width","marginLeft","fontWeight","rows","model","state","Date","createdAt","toLocaleString","marginTop","checked"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css'; // CSS 파일 적용\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState(''); // 로봇 이름 상태 추가\n  const [description, setDescription] = useState(''); // 로봇 설명 상태 추가\n  const [active, setActive] = useState(1); // 로봇 active 상태 추가\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n\n  const fetchRobots = async (preserveSelectedRobotId = null) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      // 선택된 로봇 유지\n      if (preserveSelectedRobotId) {\n        const selected = response.data.find(robot => robot._id === preserveSelectedRobotId);\n        if (selected) {\n          setSelectedRobot(selected);\n          setName(selected.name);\n          setDescription(selected.description);\n          setActive(selected.active);\n        }\n      } else if (response.data.length > 0) {\n        setSelectedRobot(response.data[0]);\n        setName(response.data[0].name);\n        setDescription(response.data[0].description);\n        setActive(response.data[0].active);\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  const handleSelectRobot = (robot) => {\n    setSelectedRobot(robot);\n    setName(robot.name);\n    setDescription(robot.description);\n    setActive(robot.active);\n  };\n\n  const handleToggleActive = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      // active 상태 토글 API 호출\n      await axios.put(\n        `http://172.30.1.15:5559/robot/toggleActive/${selectedRobot._id}`,\n        {},\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      // 선택된 로봇 유지하면서 목록 새로고침\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('Error toggling active status:', error);\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.15:5559/robot/update/${selectedRobot._id}`, {\n        name,\n        description\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchRobots(selectedRobot._id); // 선택된 로봇 유지하면서 목록 새로고침\n    } catch (error) {\n      console.error('Error updating robot:', error);\n      alert(`Error updating robot: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  const handleDelete = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    if (window.confirm('Are you sure you want to delete this robot?')) {\n      try {\n        await axios.put(`http://172.30.1.15:5559/robot/unregister/${selectedRobot._id}`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setSelectedRobot(null); // 선택된 로봇 초기화\n        fetchRobots(); // 목록 새로고침\n      } catch (error) {\n        console.error('Error removing robot:', error);\n        alert(`Error removing robot: ${error.response?.data?.message || error.message}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"robot-edit-page\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar /> {/* 상단 네비게이션 바 */}\n      <div className=\"main-content\">\n        <div className=\"robot-list-container\">\n          <h3>AMR</h3>\n          <ul className=\"robot-list\">\n            {robots.map((robot) => (\n              <li\n                key={robot._id}\n                onClick={() => handleSelectRobot(robot)}\n                className={selectedRobot && selectedRobot._id === robot._id ? 'selected' : ''}\n              >\n                {robot.name} - {robot.ip} - Battery: {robot.status.battery}%\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"robot-details-container\">\n          {selectedRobot ? (\n            <form className=\"robot-form\">\n              <div className=\"robot-field\">\n                <label></label>\n                {/* 이름 입력 필드 아래 배치 */}\n                <input\n                  type=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                  className=\"input-field\"\n                  placeholder=\"Enter robot name\"\n                  style={{ width: '50%' }} // 텍스트 박스 크기 줄이기\n                />\n                {/* 배터리 상태 표시 */}\n                <span style={{ marginLeft: '20px', fontWeight: 'bold' }}>\n                  배터리: {selectedRobot.status.battery}%\n                </span>\n              </div>\n              <div className=\"robot-field\">\n                <label>설명 :</label>\n                <textarea\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  rows=\"4\"\n                  className=\"input-field\"\n                  placeholder=\"Enter robot description\"\n                />\n              </div>\n\n              {/* 읽기 전용 IP 주소, 모델, 상태, 등록 시간 */}\n              <div className=\"robot-info\">\n                <div>\n                  <p><strong>IP Address:</strong></p>\n                  <p>{selectedRobot.ip}</p>\n                </div>\n                <div>\n                  <p><strong>Model:</strong></p>\n                  <p>{selectedRobot.model}</p>\n                </div>\n                <div>\n                  <p><strong>Status:</strong></p>\n                  <p>{selectedRobot.status.state}</p>\n                </div>\n                <div>\n                  <p><strong>Registration Time:</strong></p>\n                  <p>{new Date(selectedRobot.createdAt).toLocaleString()}</p>\n                </div>\n              </div>\n\n              {/* Active 상태 텍스트 아래에 토글 스위치 */}\n              <div className=\"robot-field\">\n                <label><strong>Active :</strong></label> \n                <div style={{ marginTop: '10px' }}> {/* 라벨의 아래에 토글 스위치 배치 */}\n                 <label className=\"switch\">\n                   <input\n                    type=\"checkbox\"\n                   checked={active === 1} \n                  onChange={handleToggleActive} \n               />\n                <span className=\"slider round\"></span>\n             </label>\n            </div>\n          </div>\n\n            </form>\n          ) : (\n            <p>Please select a robot to view and edit details</p>\n          )}\n        </div>\n      </div>\n\n      {/* 오른쪽 하단에 고정된 플로팅 버튼 */}\n      <div className=\"floating-buttons\">\n        <button className=\"floating-delete-button\" onClick={handleDelete}>\n          DELETE\n        </button>\n        <button className=\"floating-save-button\" onClick={handleUpdate}>\n          SAVE\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default RobotEditPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}