{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/NodeList.js\";\nimport React, { useState, useEffect } from 'react';\nimport './NodeList.css'; // 스타일 파일 추가\nimport { FaChevronUp, FaChevronDown, FaPlus } from 'react-icons/fa';\nimport axios from 'axios'; // API 요청을 위한 axios\nimport StepList from './StepList'; // StepList 컴포넌트 임포트\n\nfunction NodeList({\n  nodes,\n  setNodes\n}) {\n  // setNodes를 props로 받음\n  const [expandedNodeIds, setExpandedNodeIds] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n  const [isStepListPopupOpen, setIsStepListPopupOpen] = useState(false); // 스텝 리스트 관리 팝업 상태\n  const [stepList, setStepList] = useState([]); // StepList 데이터를 저장할 상태\n  const [selectedStep, setSelectedStep] = useState(''); // 선택된 Step을 저장할 상태\n  const [token, setToken] = useState(''); // Bearer 토큰을 저장할 상태\n  const [currentNodeId, setCurrentNodeId] = useState(null); // 현재 선택된 노드 ID 저장\n\n  // 컴포넌트가 처음 렌더링될 때 토큰을 로컬 스토리지에서 가져옴\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token'); // 로컬 스토리지에서 토큰 가져오기\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      console.error('No token found');\n    }\n  }, []);\n\n  // 토큰이 설정된 후 StepList와 Node 데이터를 가져옴\n  useEffect(() => {\n    if (token) {\n      fetchStepList();\n      fetchNodes(); // 토큰이 설정된 후 노드 데이터도 불러옴\n    }\n  }, [token]);\n\n  // StepList 데이터를 가져오는 함수\n  const fetchStepList = async () => {\n    try {\n      const response = await axios.get('http://172.30.1.30:5557/map/steps', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Bearer 토큰을 헤더에 추가\n        }\n      });\n      console.log('API 응답:', response.data); // 응답 데이터 확인\n      setStepList(response.data || []); // Step 데이터를 상태에 저장\n    } catch (error) {\n      console.error('Error fetching step list:', error);\n      setStepList([]); // 에러가 발생할 경우 빈 배열 설정\n    }\n  };\n\n  // Node 데이터를 가져오는 함수\n  const fetchNodes = async () => {\n    try {\n      const response = await axios.get('http://172.30.1.30:5557/map/nodes', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNodes(response.data || []);\n      console.log('Nodes fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n      setNodes([]);\n    }\n  };\n\n  // 노드를 클릭할 때 펼치거나 접는 함수\n  const toggleNodeDetails = nodeId => {\n    if (expandedNodeIds.includes(nodeId)) {\n      setExpandedNodeIds(expandedNodeIds.filter(id => id !== nodeId));\n    } else {\n      setExpandedNodeIds([...expandedNodeIds, nodeId]);\n    }\n  };\n\n  // Step 추가 모달을 열고 현재 노드 ID 저장\n  const handleOpenModal = nodeId => {\n    setCurrentNodeId(nodeId); // 현재 노드 ID 설정\n    setIsModalOpen(true); // 모달 열기\n  };\n\n  // 모달 닫기 함수\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // 모달 닫기\n    setSelectedStep(''); // 선택된 Step 초기화\n  };\n\n  // 선택된 Step 변경 함수\n  const handleStepChange = e => {\n    setSelectedStep(e.target.value); // 선택된 Step 상태 업데이트\n  };\n\n  // Step을 해당 노드의 tasks에 추가하는 함수\n  const handleAddStepToNode = async () => {\n    if (!selectedStep || !currentNodeId) {\n      alert('Step 또는 Node가 선택되지 않았습니다.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://172.30.1.30:5557/map/node/add-step', {\n        nodeId: currentNodeId,\n        // 현재 노드 ID\n        stepId: selectedStep // 선택된 Step ID\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // 인증 토큰 추가\n        }\n      });\n      console.log('Node updated with new step:', response.data.node);\n      alert('Step이 노드에 추가되었습니다!');\n      handleCloseModal(); // 모달 닫기\n      fetchNodes(); // 노드 데이터 새로 고침\n    } catch (error) {\n      console.error('Step 추가 중 오류 발생:', error);\n      alert('Step 추가 중 오류가 발생했습니다.');\n    }\n  };\n\n  // stepId를 이용해 step name을 찾는 함수\n  const getStepName = stepId => {\n    const step = stepList.find(step => step._id === stepId);\n    return step ? step.name : 'Unknown Step';\n  };\n\n  // 스텝 리스트 관리 팝업 열기 함수\n  const handleOpenStepListPopup = () => {\n    setIsStepListPopupOpen(true); // 팝업 열기\n  };\n\n  // 스텝 리스트 관리 팝업 닫기 함수\n  const handleCloseStepListPopup = () => {\n    setIsStepListPopupOpen(false); // 팝업 닫기\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Nodes List\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"step-list-manage-button\",\n    onClick: handleOpenStepListPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"\\uC2A4\\uD15D \\uB9AC\\uC2A4\\uD2B8 \\uAD00\\uB9AC\")), nodes.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, nodes.map(node => /*#__PURE__*/React.createElement(\"li\", {\n    key: node._id,\n    className: \"node-list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-header\",\n    onClick: () => toggleNodeDetails(node._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, node.name), \": (\", node.x.toFixed(2), \", \", node.y.toFixed(2), \")\", expandedNodeIds.includes(node._id) ? /*#__PURE__*/React.createElement(FaChevronUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 55\n    }\n  }) : /*#__PURE__*/React.createElement(FaChevronDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `node-details-wrapper ${expandedNodeIds.includes(node._id) ? 'expanded' : 'collapsed'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }\n  }, \"Node ID:\"), \" \", node._id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 22\n    }\n  }, \"Coordinates:\"), \" (\", node.x.toFixed(2), \", \", node.y.toFixed(2), \")\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-step-button\",\n    onClick: () => handleOpenModal(node._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FaPlus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-step-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 32\n    }\n  }, \"Step \\uCD94\\uAC00\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node-tasks-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, \"Tasks:\"), node.tasks && node.tasks.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }, node.tasks.map((task, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    className: \"task-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 27\n    }\n  }, getStepName(task), index < node.tasks.length - 1 && ', '))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, \"No tasks assigned yet.\"))))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"No nodes available for this map.\"), isModalOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Step \\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"stepSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Step\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"stepSelect\",\n    value: selectedStep,\n    onChange: handleStepChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"Step\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), stepList.length > 0 && stepList.map(step => /*#__PURE__*/React.createElement(\"option\", {\n    key: step._id,\n    value: step._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, step.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddStepToNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"\\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"\\uB2EB\\uAE30\")))), isStepListPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCloseStepListPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"\\uB2EB\\uAE30\"))));\n}\nexport default NodeList;","map":{"version":3,"names":["React","useState","useEffect","FaChevronUp","FaChevronDown","FaPlus","axios","StepList","NodeList","nodes","setNodes","expandedNodeIds","setExpandedNodeIds","isModalOpen","setIsModalOpen","isStepListPopupOpen","setIsStepListPopupOpen","stepList","setStepList","selectedStep","setSelectedStep","token","setToken","currentNodeId","setCurrentNodeId","storedToken","localStorage","getItem","console","error","fetchStepList","fetchNodes","response","get","headers","log","data","toggleNodeDetails","nodeId","includes","filter","id","handleOpenModal","handleCloseModal","handleStepChange","e","target","value","handleAddStepToNode","alert","post","stepId","node","getStepName","step","find","_id","name","handleOpenStepListPopup","handleCloseStepListPopup","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","key","x","toFixed","y","tasks","task","index","htmlFor","onChange"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/NodeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './NodeList.css'; // 스타일 파일 추가\nimport { FaChevronUp, FaChevronDown, FaPlus } from 'react-icons/fa';\nimport axios from 'axios'; // API 요청을 위한 axios\nimport StepList from './StepList'; // StepList 컴포넌트 임포트\n\nfunction NodeList({ nodes, setNodes }) { // setNodes를 props로 받음\n  const [expandedNodeIds, setExpandedNodeIds] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n  const [isStepListPopupOpen, setIsStepListPopupOpen] = useState(false); // 스텝 리스트 관리 팝업 상태\n  const [stepList, setStepList] = useState([]); // StepList 데이터를 저장할 상태\n  const [selectedStep, setSelectedStep] = useState(''); // 선택된 Step을 저장할 상태\n  const [token, setToken] = useState(''); // Bearer 토큰을 저장할 상태\n  const [currentNodeId, setCurrentNodeId] = useState(null); // 현재 선택된 노드 ID 저장\n\n  // 컴포넌트가 처음 렌더링될 때 토큰을 로컬 스토리지에서 가져옴\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token'); // 로컬 스토리지에서 토큰 가져오기\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      console.error('No token found');\n    }\n  }, []);\n\n  // 토큰이 설정된 후 StepList와 Node 데이터를 가져옴\n  useEffect(() => {\n    if (token) {\n      fetchStepList(); \n      fetchNodes(); // 토큰이 설정된 후 노드 데이터도 불러옴\n    }\n  }, [token]);\n\n  // StepList 데이터를 가져오는 함수\n  const fetchStepList = async () => {\n    try {\n      const response = await axios.get('http://172.30.1.30:5557/map/steps', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Bearer 토큰을 헤더에 추가\n        }\n      });\n      console.log('API 응답:', response.data); // 응답 데이터 확인\n      setStepList(response.data || []); // Step 데이터를 상태에 저장\n    } catch (error) {\n      console.error('Error fetching step list:', error);\n      setStepList([]); // 에러가 발생할 경우 빈 배열 설정\n    }\n  };\n\n  // Node 데이터를 가져오는 함수\n  const fetchNodes = async () => {\n    try {\n      const response = await axios.get('http://172.30.1.30:5557/map/nodes', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNodes(response.data || []);\n      console.log('Nodes fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n      setNodes([]);\n    }\n  };\n\n  // 노드를 클릭할 때 펼치거나 접는 함수\n  const toggleNodeDetails = (nodeId) => {\n    if (expandedNodeIds.includes(nodeId)) {\n      setExpandedNodeIds(expandedNodeIds.filter(id => id !== nodeId));\n    } else {\n      setExpandedNodeIds([...expandedNodeIds, nodeId]);\n    }\n  };\n\n  // Step 추가 모달을 열고 현재 노드 ID 저장\n  const handleOpenModal = (nodeId) => {\n    setCurrentNodeId(nodeId); // 현재 노드 ID 설정\n    setIsModalOpen(true); // 모달 열기\n  };\n\n  // 모달 닫기 함수\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // 모달 닫기\n    setSelectedStep(''); // 선택된 Step 초기화\n  };\n\n  // 선택된 Step 변경 함수\n  const handleStepChange = (e) => {\n    setSelectedStep(e.target.value); // 선택된 Step 상태 업데이트\n  };\n\n  // Step을 해당 노드의 tasks에 추가하는 함수\n  const handleAddStepToNode = async () => {\n    if (!selectedStep || !currentNodeId) {\n      alert('Step 또는 Node가 선택되지 않았습니다.');\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        'http://172.30.1.30:5557/map/node/add-step', \n        {\n          nodeId: currentNodeId, // 현재 노드 ID\n          stepId: selectedStep // 선택된 Step ID\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}` // 인증 토큰 추가\n          }\n        }\n      );\n      \n      console.log('Node updated with new step:', response.data.node);\n      alert('Step이 노드에 추가되었습니다!');\n      handleCloseModal(); // 모달 닫기\n      fetchNodes(); // 노드 데이터 새로 고침\n    } catch (error) {\n      console.error('Step 추가 중 오류 발생:', error);\n      alert('Step 추가 중 오류가 발생했습니다.');\n    }\n  };\n\n  // stepId를 이용해 step name을 찾는 함수\n  const getStepName = (stepId) => {\n    const step = stepList.find((step) => step._id === stepId);\n    return step ? step.name : 'Unknown Step';\n  };\n\n  // 스텝 리스트 관리 팝업 열기 함수\n  const handleOpenStepListPopup = () => {\n    setIsStepListPopupOpen(true); // 팝업 열기\n  };\n\n  // 스텝 리스트 관리 팝업 닫기 함수\n  const handleCloseStepListPopup = () => {\n    setIsStepListPopupOpen(false); // 팝업 닫기\n  };\n\n  return (\n    <div className=\"node-list-container\">\n      <div className=\"node-list-header\">\n        <h3>Nodes List</h3>\n        {/* '스텝 리스트 관리' 버튼 */}\n        <button className=\"step-list-manage-button\" onClick={handleOpenStepListPopup}>\n          스텝 리스트 관리\n        </button>\n      </div>\n\n      {nodes.length > 0 ? (\n        <ul>\n          {nodes.map((node) => (\n            <li key={node._id} className=\"node-list-item\">\n              <div className=\"node-header\" onClick={() => toggleNodeDetails(node._id)}>\n                <strong>{node.name}</strong>: ({node.x.toFixed(2)}, {node.y.toFixed(2)})\n                {expandedNodeIds.includes(node._id) ? <FaChevronUp /> : <FaChevronDown />}\n              </div>\n\n              <div className={`node-details-wrapper ${expandedNodeIds.includes(node._id) ? 'expanded' : 'collapsed'}`}>\n                <div className=\"node-details\">\n                  <p><strong>Node ID:</strong> {node._id}</p>\n                  <p><strong>Coordinates:</strong> ({node.x.toFixed(2)}, {node.y.toFixed(2)})</p>\n\n                  {/* Step 추가 버튼 */}\n                  <button className=\"add-step-button\" onClick={() => handleOpenModal(node._id)}>\n                    <FaPlus /> <span className=\"add-step-text\">Step 추가</span>\n                  </button>\n\n                  {/* 해당 노드의 tasks 목록을 인라인으로 나열 */}\n                  <div className=\"node-tasks-inline\">\n                    <h4>Tasks:</h4>\n                    {node.tasks && node.tasks.length > 0 ? (\n                      <span>\n                        {node.tasks.map((task, index) => (\n                          <span key={index} className=\"task-item\">\n                            {getStepName(task)}{index < node.tasks.length - 1 && ', '}\n                          </span>\n                        ))}\n                      </span>\n                    ) : (\n                      <span>No tasks assigned yet.</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No nodes available for this map.</p>\n      )}\n\n      {/* 모달 */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Step 추가</h2>\n            {/* 드롭다운 리스트에서 Step 선택 */}\n            <label htmlFor=\"stepSelect\">Step을 선택하세요:</label>\n            <select id=\"stepSelect\" value={selectedStep} onChange={handleStepChange}>\n              <option value=\"\">Step을 선택하세요</option>\n              {stepList.length > 0 && stepList.map((step) => (\n                <option key={step._id} value={step._id}>\n                  {step.name}\n                </option>\n              ))}\n            </select>\n\n            <div className=\"modal-actions\">\n              <button onClick={handleAddStepToNode}>추가</button>\n              <button onClick={handleCloseModal}>닫기</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 스텝 리스트 관리 팝업 */}\n      {isStepListPopupOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <StepList />\n            <button onClick={handleCloseStepListPopup}>닫기</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NodeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}