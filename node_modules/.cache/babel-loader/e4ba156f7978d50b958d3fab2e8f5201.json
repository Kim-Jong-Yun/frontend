{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\n// TestPage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport './TestPage.css'; // CSS 파일 임포트\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태 관리\n  const [selectedRobot, setSelectedRobot] = useState(null); // 선택된 로봇 정보 저장\n  const [selectedTask, setSelectedTask] = useState(''); // 선택된 작업 저장\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']); // 드롭다운에 표시할 작업들\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [expandedRobotId, setExpandedRobotId] = useState(null); // 확장된 로봇 ID 저장\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      fetchRobots(); // 로봇 리스트 API 호출\n      fetchAllTasks(); // 모든 작업 로그 API 호출\n    };\n    fetchData();\n\n    // WebSocket 연결 설정\n    const socket = new WebSocket('ws://your-websocket-url'); // WebSocket 주소를 설정하세요\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n    socket.onmessage = event => {\n      const updatedRobots = JSON.parse(event.data);\n      setRobots(updatedRobots); // WebSocket으로 받은 데이터를 로봇 상태로 설정\n    };\n    socket.onerror = error => {\n      console.error('WebSocket 오류:', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n    return () => {\n      socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n    };\n  }, []);\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login'; // 토큰이 없으면 로그인 페이지로 리디렉션\n      return null;\n    }\n    return token;\n  };\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n        drawMapAndRobots(img.width, img.height); // 이미지 크기대로 캔버스 조정 및 그리기\n      };\n      img.onerror = err => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      const resolutionMatch = metadata.match(/resolution:\\s*(\\d+\\.?\\d*)/);\n      const resolution = resolutionMatch ? parseFloat(resolutionMatch[1]) : 0.05;\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n  const fetchAllTasks = async () => {\n    console.log('모든 작업 로그 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchAllTasks 종료');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n  const fetchRobots = async () => {\n    console.log('로봇 정보 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchRobots 종료');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n  const toggleExpand = robotId => {\n    if (expandedRobotId === robotId) {\n      setExpandedRobotId(null);\n    } else {\n      setExpandedRobotId(robotId);\n    }\n  };\n  const openPopup = robot => {\n    setSelectedRobot(robot);\n    setIsPopupOpen(true);\n  };\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  const handleTaskChange = event => {\n    setSelectedTask(event.target.value); // 드롭다운에서 선택된 작업 저장\n  };\n  const drawMapAndRobots = (imgWidth, imgHeight) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.error('캔버스 요소를 찾을 수 없습니다.');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n    mapImage.onload = () => {\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.drawImage(mapImage, 0, 0, imgWidth, imgHeight);\n      robots.forEach(robot => {\n        var _robot$status, _robot$status2, _robot$status3;\n        const {\n          x,\n          y\n        } = robot.location;\n        const {\n          mapX,\n          mapY\n        } = worldToMap(x, y, imgWidth, imgHeight, mapResolution);\n        let robotColor = 'gray';\n        if (((_robot$status = robot.status) === null || _robot$status === void 0 ? void 0 : _robot$status.state) === 'Tasking') {\n          robotColor = 'blue';\n        } else if (((_robot$status2 = robot.status) === null || _robot$status2 === void 0 ? void 0 : _robot$status2.state) === 'Waiting') {\n          robotColor = 'yellow';\n        } else if (((_robot$status3 = robot.status) === null || _robot$status3 === void 0 ? void 0 : _robot$status3.state) === 'Error') {\n          robotColor = 'red';\n        }\n        ctx.fillStyle = robotColor;\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n    mapImage.onerror = err => {\n      console.error('지도 이미지를 그리는 중 오류 발생:', err);\n    };\n  };\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return {\n      mapX,\n      mapY\n    };\n  };\n  const formatDate = date => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n  useEffect(() => {\n    if (mapUrl && mapDimensions.width && mapDimensions.height) {\n      drawMapAndRobots(mapDimensions.width, mapDimensions.height);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapUrl, robots, mapDimensions]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px',\n      position: 'relative',\n      minHeight: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uBD07 \\uBAA8\\uB2C8\\uD130\\uB9C1 \\uD398\\uC774\\uC9C0\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 3,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, \"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      padding: '20px',\n      borderLeft: '1px solid #ccc',\n      overflowY: 'auto',\n      maxHeight: '80vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uBD07 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, robots.length > 0 ? robots.map(robot => {\n    var _robot$status4, _robot$status5, _robot$status6;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: robot._id,\n      style: {\n        marginBottom: '10px',\n        borderBottom: '1px solid #ddd',\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }, \"\\uC774\\uB984:\"), \" \", robot.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    }, \"\\uC0C1\\uD0DC:\"), \" \", ((_robot$status4 = robot.status) === null || _robot$status4 === void 0 ? void 0 : _robot$status4.state) || 'Unknown'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }, \"\\uBC30\\uD130\\uB9AC:\"), \" \", ((_robot$status5 = robot.status) === null || _robot$status5 === void 0 ? void 0 : _robot$status5.battery) || 'N/A', \"%\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => toggleExpand(robot._id),\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      \"aria-label\": expandedRobotId === robot._id ? '접기' : '펼치기',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, expandedRobotId === robot._id ? /*#__PURE__*/React.createElement(FaChevronUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 56\n      }\n    }) : /*#__PURE__*/React.createElement(FaChevronDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 74\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `expandable-content ${expandedRobotId === robot._id ? 'expanded' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 24\n      }\n    }, \"IP:\"), \" \", robot.ip), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 24\n      }\n    }, \"\\uC704\\uCE58:\"), \" x: \", robot.location.x, \", y: \", robot.location.y), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 24\n      }\n    }, \"\\uC18D\\uB3C4:\"), \" \", ((_robot$status6 = robot.status) === null || _robot$status6 === void 0 ? void 0 : _robot$status6.speed) || 'N/A', \" m/s\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 23\n      }\n    }, \"job\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => openPopup(robot),\n      style: {\n        background: 'none',\n        border: '1px solid #ccc',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 23\n      }\n    }, \"+\"))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, \"\\uC5F0\\uACB0\\uB41C \\uB85C\\uBD07\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))), isPopupOpen && selectedRobot && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '20px',\n      backgroundColor: '#fff',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n      zIndex: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, \"\\uC791\\uC5C5 \\uC120\\uD0DD - \", selectedRobot.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694:\", ' ', /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedTask,\n    onChange: handleTaskChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, \"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"), availableTasks.map((task, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 19\n    }\n  }, task))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closePopup,\n    style: {\n      background: 'none',\n      border: '1px solid #ccc',\n      padding: '5px 10px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, \"\\uB2EB\\uAE30\")), isPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: closePopup,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      zIndex: 999\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 'calc(99% - 500px)',\n      // 모니터링 맵과 일치하게 만듦, 500px은 로봇 리스트 영역\n      padding: '10px 20px',\n      marginTop: '20px',\n      borderTop: '1px solid #ccc',\n      height: '25vh',\n      backgroundColor: '#f9f9f9',\n      overflowY: 'auto' // 'fix'에서 'auto'로 변경\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '80%',\n      overflowY: 'scroll',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: '100%',\n      borderCollapse: 'collapse'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    style: {\n      position: 'sticky',\n      top: 0,\n      backgroundColor: '#f9f9f9',\n      zIndex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07 IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uD0DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uC791 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, \"\\uC885\\uB8CC \\uC2DC\\uAC04\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, task.robotIp), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, task.taskType), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 21\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 21\n    }\n  }, formatDate(task.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 21\n    }\n  }, formatDate(task.endTime)))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    style: {\n      textAlign: 'center',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))))));\n}\nexport default TestPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","LogoutButton","UserInfo","axios","FaChevronDown","FaChevronUp","TestPage","mapUrl","setMapUrl","robots","setRobots","tasks","setTasks","isPopupOpen","setIsPopupOpen","selectedRobot","setSelectedRobot","selectedTask","setSelectedTask","availableTasks","setAvailableTasks","canvasRef","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","expandedRobotId","setExpandedRobotId","fetchData","fetchMapMetadata","fetchMonitoredMap","fetchRobots","fetchAllTasks","socket","WebSocket","onopen","console","log","onmessage","event","updatedRobots","JSON","parse","data","onerror","error","onclose","close","getToken","token","localStorage","getItem","alert","window","location","href","response","get","headers","Authorization","responseType","url","URL","createObjectURL","img","Image","src","onload","drawMapAndRobots","err","metadata","resolutionMatch","match","resolution","parseFloat","toggleExpand","robotId","openPopup","robot","closePopup","handleTaskChange","target","value","imgWidth","imgHeight","canvas","current","ctx","getContext","mapImage","drawImage","forEach","_robot$status","_robot$status2","_robot$status3","x","y","mapX","mapY","worldToMap","robotColor","status","state","fillStyle","beginPath","arc","Math","PI","fill","mapWidth","mapHeight","formatDate","date","parsedDate","Date","isNaN","toLocaleString","createElement","style","fontFamily","margin","position","minHeight","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","flexGrow","flex","alignItems","marginRight","ref","border","padding","borderLeft","overflowY","maxHeight","listStyleType","length","map","_robot$status4","_robot$status5","_robot$status6","key","_id","borderBottom","name","battery","onClick","background","cursor","fontSize","className","ip","speed","top","left","transform","backgroundColor","boxShadow","zIndex","onChange","task","index","marginTop","borderTop","borderCollapse","robotIp","taskType","startTime","endTime","colSpan"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["// TestPage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport './TestPage.css'; // CSS 파일 임포트\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태 관리\n  const [selectedRobot, setSelectedRobot] = useState(null); // 선택된 로봇 정보 저장\n  const [selectedTask, setSelectedTask] = useState(''); // 선택된 작업 저장\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']); // 드롭다운에 표시할 작업들\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n  const [expandedRobotId, setExpandedRobotId] = useState(null); // 확장된 로봇 ID 저장\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      fetchRobots(); // 로봇 리스트 API 호출\n      fetchAllTasks(); // 모든 작업 로그 API 호출\n    };\n    fetchData();\n\n    // WebSocket 연결 설정\n    const socket = new WebSocket('ws://your-websocket-url'); // WebSocket 주소를 설정하세요\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n\n    socket.onmessage = (event) => {\n      const updatedRobots = JSON.parse(event.data);\n      setRobots(updatedRobots); // WebSocket으로 받은 데이터를 로봇 상태로 설정\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket 오류:', error);\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n\n    return () => {\n      socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n    };\n  }, []);\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login'; // 토큰이 없으면 로그인 페이지로 리디렉션\n      return null;\n    }\n    return token;\n  };\n\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({ width: img.width, height: img.height });\n        drawMapAndRobots(img.width, img.height); // 이미지 크기대로 캔버스 조정 및 그리기\n      };\n      img.onerror = (err) => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      const resolutionMatch = metadata.match(/resolution:\\s*(\\d+\\.?\\d*)/);\n      const resolution = resolutionMatch ? parseFloat(resolutionMatch[1]) : 0.05;\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n\n  const fetchAllTasks = async () => {\n    console.log('모든 작업 로그 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchAllTasks 종료');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n\n  const fetchRobots = async () => {\n    console.log('로봇 정보 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchRobots 종료');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n\n  const toggleExpand = (robotId) => {\n    if (expandedRobotId === robotId) {\n      setExpandedRobotId(null);\n    } else {\n      setExpandedRobotId(robotId);\n    }\n  };\n\n  const openPopup = (robot) => {\n    setSelectedRobot(robot);\n    setIsPopupOpen(true);\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n\n  const handleTaskChange = (event) => {\n    setSelectedTask(event.target.value); // 드롭다운에서 선택된 작업 저장\n  };\n\n  const drawMapAndRobots = (imgWidth, imgHeight) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.error('캔버스 요소를 찾을 수 없습니다.');\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n\n    mapImage.onload = () => {\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.drawImage(mapImage, 0, 0, imgWidth, imgHeight);\n\n      robots.forEach((robot) => {\n        const { x, y } = robot.location;\n        const { mapX, mapY } = worldToMap(x, y, imgWidth, imgHeight, mapResolution);\n\n        let robotColor = 'gray';\n        if (robot.status?.state === 'Tasking') {\n          robotColor = 'blue';\n        } else if (robot.status?.state === 'Waiting') {\n          robotColor = 'yellow';\n        } else if (robot.status?.state === 'Error') {\n          robotColor = 'red';\n        }\n\n        ctx.fillStyle = robotColor;\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n\n    mapImage.onerror = (err) => {\n      console.error('지도 이미지를 그리는 중 오류 발생:', err);\n    };\n  };\n\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + (mapWidth * resolution) / 2) / resolution;\n    const mapY = mapHeight - (y + (mapHeight * resolution) / 2) / resolution;\n    return { mapX, mapY };\n  };\n\n  const formatDate = (date) => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n\n  useEffect(() => {\n    if (mapUrl && mapDimensions.width && mapDimensions.height) {\n      drawMapAndRobots(mapDimensions.width, mapDimensions.height);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapUrl, robots, mapDimensions]);\n\n  return (\n    <div\n      style={{\n        fontFamily: 'Arial, sans-serif',\n        margin: '20px',\n        position: 'relative',\n        minHeight: '100vh',\n      }}\n    >\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <h1 style={{ textAlign: 'center', margin: '20px 0' }}>로봇 모니터링 페이지</h1>\n      <div style={{ display: 'flex', flexGrow: 1 }}>\n        {/* 좌측 - 지도 캔버스 */}\n        <div\n          style={{\n            flex: 3,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginRight: '20px',\n          }}\n        >\n          {mapUrl ? (\n            <canvas ref={canvasRef} style={{ border: '1px solid #ccc' }}></canvas>\n          ) : (\n            <p>지도를 불러오는 중...</p>\n          )}\n        </div>\n\n        {/* 우측 - 로봇 리스트 */}\n        <div\n          style={{\n            flex: 1,\n            padding: '20px',\n            borderLeft: '1px solid #ccc',\n            overflowY: 'auto',\n            maxHeight: '80vh',\n          }}\n        >\n          <h3>로봇 리스트</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.length > 0 ? (\n              robots.map((robot) => (\n                <li\n                  key={robot._id}\n                  style={{\n                    marginBottom: '10px',\n                    borderBottom: '1px solid #ddd',\n                    padding: '10px',\n                  }}\n                >\n                  <div\n                    style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n                  >\n                    <span>\n                      <strong>이름:</strong> {robot.name}\n                    </span>\n                    <span>\n                      <strong>상태:</strong> {robot.status?.state || 'Unknown'}\n                    </span>\n                    <span>\n                      <strong>배터리:</strong> {robot.status?.battery || 'N/A'}%\n                    </span>\n                    <button\n                      onClick={() => toggleExpand(robot._id)}\n                      style={{\n                        background: 'none',\n                        border: 'none',\n                        cursor: 'pointer',\n                        fontSize: '16px',\n                      }}\n                      aria-label={expandedRobotId === robot._id ? '접기' : '펼치기'}\n                    >\n                      {expandedRobotId === robot._id ? <FaChevronUp /> : <FaChevronDown />}\n                    </button>\n                  </div>\n                  <div\n                    className={`expandable-content ${expandedRobotId === robot._id ? 'expanded' : ''}`}\n                  >\n                    {/* 로봇의 상세 정보 표시 */}\n                    <p><strong>IP:</strong> {robot.ip}</p>\n                    <p><strong>위치:</strong> x: {robot.location.x}, y: {robot.location.y}</p>\n                    <p><strong>속도:</strong> {robot.status?.speed || 'N/A'} m/s</p>\n                    \n                    {/* job 텍스트 옆에 + 버튼 추가 */}\n                    <p>\n                      <strong>job</strong>{' '}\n                      <button\n                        onClick={() => openPopup(robot)}\n                        style={{\n                          background: 'none',\n                          border: '1px solid #ccc',\n                          cursor: 'pointer',\n                          fontSize: '16px',\n                        }}\n                      >\n                        +\n                      </button>\n                    </p>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <p>연결된 로봇이 없습니다.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {/* 팝업 창 */}\n      {isPopupOpen && selectedRobot && (\n        <div\n          style={{\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            padding: '20px',\n            backgroundColor: '#fff',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n            zIndex: 1000,\n          }}\n        >\n          <h2>작업 선택 - {selectedRobot.name}</h2>\n          <div>\n            <label>\n              작업을 선택하세요:{' '}\n              <select value={selectedTask} onChange={handleTaskChange}>\n                <option value=\"\">선택하세요</option>\n                {availableTasks.map((task, index) => (\n                  <option key={index} value={task}>\n                    {task}\n                  </option>\n                ))}\n              </select>\n            </label>\n          </div>\n          <br />\n          <button\n            onClick={closePopup}\n            style={{\n              background: 'none',\n              border: '1px solid #ccc',\n              padding: '5px 10px',\n              cursor: 'pointer',\n            }}\n          >\n            닫기\n          </button>\n        </div>\n      )}\n\n      {/* 팝업 창 밖을 클릭하면 팝업 닫힘 */}\n      {isPopupOpen && (\n        <div\n          onClick={closePopup}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            zIndex: 999,\n          }}\n        ></div>\n      )}\n\n      {/* 작업 로그 섹션 */}\n      <div\n        style={{\n          width: 'calc(99% - 500px)', // 모니터링 맵과 일치하게 만듦, 500px은 로봇 리스트 영역\n          padding: '10px 20px',\n          marginTop: '20px',\n          borderTop: '1px solid #ccc',\n          height: '25vh',\n          backgroundColor: '#f9f9f9',\n          overflowY: 'auto', // 'fix'에서 'auto'로 변경\n        }}\n      >\n        <h3>작업 로그</h3>\n        <div style={{ height: '80%', overflowY: 'scroll', border: '1px solid #ccc' }}>\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead\n              style={{\n                position: 'sticky',\n                top: 0,\n                backgroundColor: '#f9f9f9',\n                zIndex: 1,\n              }}\n            >\n              <tr>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>작업 이름</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>로봇 IP</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>작업 유형</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>상태</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>시작 시간</th>\n                <th style={{ border: '1px solid #ccc', padding: '10px' }}>종료 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                  <tr key={index}>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.name}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.robotIp}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.taskType}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>{task.status}</td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>\n                      {formatDate(task.startTime)}\n                    </td>\n                    <td style={{ border: '1px solid #ccc', padding: '10px' }}>\n                      {formatDate(task.endTime)}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" style={{ textAlign: 'center', padding: '10px' }}>\n                    작업 로그가 없습니다.\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,WAAW,QAAQ,gBAAgB;AAC3D,OAAO,gBAAgB,CAAC,CAAC;;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtF,MAAMwB,SAAS,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC;IAAE6B,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAC3E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9DC,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,gBAAgB,CAAC,CAAC;MACxB,MAAMC,iBAAiB,CAAC,CAAC;MACzBC,WAAW,CAAC,CAAC,CAAC,CAAC;MACfC,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACDJ,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMK,MAAM,GAAG,IAAIC,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAAC;;IAEzDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC5CnC,SAAS,CAACgC,aAAa,CAAC,CAAC,CAAC;IAC5B,CAAC;IAEDP,MAAM,CAACW,OAAO,GAAIC,KAAK,IAAK;MAC1BT,OAAO,CAACS,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC;IAEDZ,MAAM,CAACa,OAAO,GAAG,MAAM;MACrBV,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,OAAO,MAAM;MACXJ,MAAM,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,uBAAuB,CAAC;MAC9BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;MACjC,OAAO,IAAI;IACb;IACA,OAAON,KAAK;EACd,CAAC;EAED,MAAMnB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMmB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,4CAA4C,EAAE;QAC7EC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG,CAAC;QAC7CW,YAAY,EAAE;MAChB,CAAC,CAAC;MACF,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,QAAQ,CAACb,IAAI,CAAC;MAC9CrC,SAAS,CAACuD,GAAG,CAAC;MAEd,MAAMG,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGL,GAAG;MACbG,GAAG,CAACG,MAAM,GAAG,MAAM;QACjB5C,gBAAgB,CAAC;UAAEC,KAAK,EAAEwC,GAAG,CAACxC,KAAK;UAAEC,MAAM,EAAEuC,GAAG,CAACvC;QAAO,CAAC,CAAC;QAC1D2C,gBAAgB,CAACJ,GAAG,CAACxC,KAAK,EAAEwC,GAAG,CAACvC,MAAM,CAAC,CAAC,CAAC;MAC3C,CAAC;MACDuC,GAAG,CAACpB,OAAO,GAAIyB,GAAG,IAAK;QACrBjC,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEwB,GAAG,CAAC;MAC7C,CAAC;IACH,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,MAAMhB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMoB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,gDAAgD,EAAE;QACjFC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,MAAMqB,QAAQ,GAAGd,QAAQ,CAACb,IAAI;MAC9B,MAAM4B,eAAe,GAAGD,QAAQ,CAACE,KAAK,CAAC,2BAA2B,CAAC;MACnE,MAAMC,UAAU,GAAGF,eAAe,GAAGG,UAAU,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MAC1ElD,gBAAgB,CAACoD,UAAU,CAAC;IAC9B,CAAC,CAAC,OAAO5B,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,MAAMb,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCI,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,MAAMY,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;MACVb,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC;IACF;IAEA,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,kCAAkC,EAAE;QACnEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,KAAK;QAChC;MACF,CAAC,CAAC;MACFvC,QAAQ,CAAC8C,QAAQ,CAACb,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,MAAMd,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,MAAMY,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,EAAE;MACVb,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC;IACF;IAEA,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,sCAAsC,EAAE;QACvEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,KAAK;QAChC;MACF,CAAC,CAAC;MACFzC,SAAS,CAACgD,QAAQ,CAACb,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,MAAM8B,YAAY,GAAIC,OAAO,IAAK;IAChC,IAAIlD,eAAe,KAAKkD,OAAO,EAAE;MAC/BjD,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLA,kBAAkB,CAACiD,OAAO,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3BhE,gBAAgB,CAACgE,KAAK,CAAC;IACvBlE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMmE,UAAU,GAAGA,CAAA,KAAM;IACvBnE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMoE,gBAAgB,GAAIzC,KAAK,IAAK;IAClCvB,eAAe,CAACuB,KAAK,CAAC0C,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAMd,gBAAgB,GAAGA,CAACe,QAAQ,EAAEC,SAAS,KAAK;IAChD,MAAMC,MAAM,GAAGlE,SAAS,CAACmE,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;MACXjD,OAAO,CAACS,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF;IAEA,MAAM0C,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAIxB,KAAK,CAAC,CAAC;IAC5BwB,QAAQ,CAACvB,GAAG,GAAG7D,MAAM;IAErBoF,QAAQ,CAACtB,MAAM,GAAG,MAAM;MACtBkB,MAAM,CAAC7D,KAAK,GAAG2D,QAAQ;MACvBE,MAAM,CAAC5D,MAAM,GAAG2D,SAAS;MACzBG,GAAG,CAACG,SAAS,CAACD,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAEN,QAAQ,EAAEC,SAAS,CAAC;MAElD7E,MAAM,CAACoF,OAAO,CAAEb,KAAK,IAAK;QAAA,IAAAc,aAAA,EAAAC,cAAA,EAAAC,cAAA;QACxB,MAAM;UAAEC,CAAC;UAAEC;QAAE,CAAC,GAAGlB,KAAK,CAACxB,QAAQ;QAC/B,MAAM;UAAE2C,IAAI;UAAEC;QAAK,CAAC,GAAGC,UAAU,CAACJ,CAAC,EAAEC,CAAC,EAAEb,QAAQ,EAAEC,SAAS,EAAEhE,aAAa,CAAC;QAE3E,IAAIgF,UAAU,GAAG,MAAM;QACvB,IAAI,EAAAR,aAAA,GAAAd,KAAK,CAACuB,MAAM,cAAAT,aAAA,uBAAZA,aAAA,CAAcU,KAAK,MAAK,SAAS,EAAE;UACrCF,UAAU,GAAG,MAAM;QACrB,CAAC,MAAM,IAAI,EAAAP,cAAA,GAAAf,KAAK,CAACuB,MAAM,cAAAR,cAAA,uBAAZA,cAAA,CAAcS,KAAK,MAAK,SAAS,EAAE;UAC5CF,UAAU,GAAG,QAAQ;QACvB,CAAC,MAAM,IAAI,EAAAN,cAAA,GAAAhB,KAAK,CAACuB,MAAM,cAAAP,cAAA,uBAAZA,cAAA,CAAcQ,KAAK,MAAK,OAAO,EAAE;UAC1CF,UAAU,GAAG,KAAK;QACpB;QAEAb,GAAG,CAACgB,SAAS,GAAGH,UAAU;QAC1Bb,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACkB,GAAG,CAACR,IAAI,EAAEC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGQ,IAAI,CAACC,EAAE,CAAC;QACtCpB,GAAG,CAACqB,IAAI,CAAC,CAAC;MACZ,CAAC,CAAC;IACJ,CAAC;IAEDnB,QAAQ,CAAC7C,OAAO,GAAIyB,GAAG,IAAK;MAC1BjC,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEwB,GAAG,CAAC;IAC5C,CAAC;EACH,CAAC;EAED,MAAM8B,UAAU,GAAGA,CAACJ,CAAC,EAAEC,CAAC,EAAEa,QAAQ,EAAEC,SAAS,EAAErC,UAAU,KAAK;IAC5D,MAAMwB,IAAI,GAAG,CAACF,CAAC,GAAIc,QAAQ,GAAGpC,UAAU,GAAI,CAAC,IAAIA,UAAU;IAC3D,MAAMyB,IAAI,GAAGY,SAAS,GAAG,CAACd,CAAC,GAAIc,SAAS,GAAGrC,UAAU,GAAI,CAAC,IAAIA,UAAU;IACxE,OAAO;MAAEwB,IAAI;MAAEC;IAAK,CAAC;EACvB,CAAC;EAED,MAAMa,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IACjC,OAAOG,KAAK,CAACF,UAAU,CAAC,GAAG,KAAK,GAAGA,UAAU,CAACG,cAAc,CAAC,CAAC;EAChE,CAAC;EAEDxH,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,IAAIiB,aAAa,CAACE,KAAK,IAAIF,aAAa,CAACG,MAAM,EAAE;MACzD2C,gBAAgB,CAAC9C,aAAa,CAACE,KAAK,EAAEF,aAAa,CAACG,MAAM,CAAC;IAC7D;IACA;EACF,CAAC,EAAE,CAACpB,MAAM,EAAEE,MAAM,EAAEe,aAAa,CAAC,CAAC;EAEnC,oBACE5B,KAAA,CAAA2H,aAAA;IACEC,KAAK,EAAE;MACLC,UAAU,EAAE,mBAAmB;MAC/BC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE;IACb,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFtI,KAAA,CAAA2H,aAAA;IAAQC,KAAK,EAAE;MAAEW,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,eAAe;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxFtI,KAAA,CAAA2H,aAAA,CAACrH,QAAQ;IAAA2H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACZtI,KAAA,CAAA2H,aAAA,CAACtH,YAAY;IAAA4H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACT,CAAC,eACTtI,KAAA,CAAA2H,aAAA,CAACvH,MAAM;IAAA6H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEc,SAAS,EAAE,QAAQ;MAAEZ,MAAM,EAAE;IAAS,CAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0DAAe,CAAC,eACtEtI,KAAA,CAAA2H,aAAA;IAAKC,KAAK,EAAE;MAAEW,OAAO,EAAE,MAAM;MAAEI,QAAQ,EAAE;IAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3CtI,KAAA,CAAA2H,aAAA;IACEC,KAAK,EAAE;MACLgB,IAAI,EAAE,CAAC;MACPL,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBK,UAAU,EAAE,QAAQ;MACpBC,WAAW,EAAE;IACf,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED3H,MAAM,gBACLX,KAAA,CAAA2H,aAAA;IAAQoB,GAAG,EAAEtH,SAAU;IAACmG,KAAK,EAAE;MAAEoB,MAAM,EAAE;IAAiB,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAS,CAAC,gBAEtEtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uDAAgB,CAElB,CAAC,eAGNtI,KAAA,CAAA2H,aAAA;IACEC,KAAK,EAAE;MACLgB,IAAI,EAAE,CAAC;MACPK,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,gBAAgB;MAC5BC,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE;IACb,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iCAAU,CAAC,eACftI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEyB,aAAa,EAAE,MAAM;MAAEJ,OAAO,EAAE;IAAE,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9CzH,MAAM,CAACyI,MAAM,GAAG,CAAC,GAChBzI,MAAM,CAAC0I,GAAG,CAAEnE,KAAK;IAAA,IAAAoE,cAAA,EAAAC,cAAA,EAAAC,cAAA;IAAA,oBACf1J,KAAA,CAAA2H,aAAA;MACEgC,GAAG,EAAEvE,KAAK,CAACwE,GAAI;MACfhC,KAAK,EAAE;QACLa,YAAY,EAAE,MAAM;QACpBoB,YAAY,EAAE,gBAAgB;QAC9BZ,OAAO,EAAE;MACX,CAAE;MAAAhB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAEFtI,KAAA,CAAA2H,aAAA;MACEC,KAAK,EAAE;QAAEW,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEK,UAAU,EAAE;MAAS,CAAE;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAElFtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,KAAC,EAAClD,KAAK,CAAC0E,IACxB,CAAC,eACP9J,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,KAAC,EAAC,EAAAkB,cAAA,GAAApE,KAAK,CAACuB,MAAM,cAAA6C,cAAA,uBAAZA,cAAA,CAAc5C,KAAK,KAAI,SACzC,CAAC,eACP5G,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,qBAAY,CAAC,KAAC,EAAC,EAAAmB,cAAA,GAAArE,KAAK,CAACuB,MAAM,cAAA8C,cAAA,uBAAZA,cAAA,CAAcM,OAAO,KAAI,KAAK,EAAC,GAClD,CAAC,eACP/J,KAAA,CAAA2H,aAAA;MACEqC,OAAO,EAAEA,CAAA,KAAM/E,YAAY,CAACG,KAAK,CAACwE,GAAG,CAAE;MACvChC,KAAK,EAAE;QACLqC,UAAU,EAAE,MAAM;QAClBjB,MAAM,EAAE,MAAM;QACdkB,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAE;MACF,cAAYnI,eAAe,KAAKoD,KAAK,CAACwE,GAAG,GAAG,IAAI,GAAG,KAAM;MAAA3B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAExDtG,eAAe,KAAKoD,KAAK,CAACwE,GAAG,gBAAG5J,KAAA,CAAA2H,aAAA,CAAClH,WAAW;MAAAwH,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,gBAAGtI,KAAA,CAAA2H,aAAA,CAACnH,aAAa;MAAAyH,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC7D,CACL,CAAC,eACNtI,KAAA,CAAA2H,aAAA;MACEyC,SAAS,EAAE,sBAAsBpI,eAAe,KAAKoD,KAAK,CAACwE,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;MAAA3B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAGnFtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAGtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,KAAW,CAAC,KAAC,EAAClD,KAAK,CAACiF,EAAM,CAAC,eACtCrK,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAGtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,QAAI,EAAClD,KAAK,CAACxB,QAAQ,CAACyC,CAAC,EAAC,OAAK,EAACjB,KAAK,CAACxB,QAAQ,CAAC0C,CAAK,CAAC,eACxEtG,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAAGtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,eAAW,CAAC,KAAC,EAAC,EAAAoB,cAAA,GAAAtE,KAAK,CAACuB,MAAM,cAAA+C,cAAA,uBAAZA,cAAA,CAAcY,KAAK,KAAI,KAAK,EAAC,MAAO,CAAC,eAG9DtK,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEtI,KAAA,CAAA2H,aAAA;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,KAAW,CAAC,EAAC,GAAG,eACxBtI,KAAA,CAAA2H,aAAA;MACEqC,OAAO,EAAEA,CAAA,KAAM7E,SAAS,CAACC,KAAK,CAAE;MAChCwC,KAAK,EAAE;QACLqC,UAAU,EAAE,MAAM;QAClBjB,MAAM,EAAE,gBAAgB;QACxBkB,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAE;MAAAlC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACH,GAEO,CACP,CACA,CACH,CAAC;EAAA,CACN,CAAC,gBAEFtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iEAAgB,CAEnB,CACD,CACF,CAAC,EAGLrH,WAAW,IAAIE,aAAa,iBAC3BnB,KAAA,CAAA2H,aAAA;IACEC,KAAK,EAAE;MACLG,QAAQ,EAAE,OAAO;MACjBwC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,uBAAuB;MAClCxB,OAAO,EAAE,MAAM;MACfyB,eAAe,EAAE,MAAM;MACvBC,SAAS,EAAE,8BAA8B;MACzCC,MAAM,EAAE;IACV,CAAE;IAAA3C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,8BAAQ,EAACnH,aAAa,CAAC2I,IAAS,CAAC,eACrC9J,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,oDACK,EAAC,GAAG,eACdtI,KAAA,CAAA2H,aAAA;IAAQnC,KAAK,EAAEnE,YAAa;IAACwJ,QAAQ,EAAEvF,gBAAiB;IAAA2C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtDtI,KAAA,CAAA2H,aAAA;IAAQnC,KAAK,EAAC,EAAE;IAAAyC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gCAAa,CAAC,EAC9B/G,cAAc,CAACgI,GAAG,CAAC,CAACuB,IAAI,EAAEC,KAAK,kBAC9B/K,KAAA,CAAA2H,aAAA;IAAQgC,GAAG,EAAEoB,KAAM;IAACvF,KAAK,EAAEsF,IAAK;IAAA7C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BwC,IACK,CACT,CACK,CACH,CACJ,CAAC,eACN9K,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eACNtI,KAAA,CAAA2H,aAAA;IACEqC,OAAO,EAAE3E,UAAW;IACpBuC,KAAK,EAAE;MACLqC,UAAU,EAAE,MAAM;MAClBjB,MAAM,EAAE,gBAAgB;MACxBC,OAAO,EAAE,UAAU;MACnBiB,MAAM,EAAE;IACV,CAAE;IAAAjC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,cAEO,CACL,CACN,EAGArH,WAAW,iBACVjB,KAAA,CAAA2H,aAAA;IACEqC,OAAO,EAAE3E,UAAW;IACpBuC,KAAK,EAAE;MACLG,QAAQ,EAAE,OAAO;MACjBwC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACP1I,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACd2I,eAAe,EAAE,oBAAoB;MACrCE,MAAM,EAAE;IACV,CAAE;IAAA3C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACE,CACP,eAGDtI,KAAA,CAAA2H,aAAA;IACEC,KAAK,EAAE;MACL9F,KAAK,EAAE,mBAAmB;MAAE;MAC5BmH,OAAO,EAAE,WAAW;MACpB+B,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE,gBAAgB;MAC3BlJ,MAAM,EAAE,MAAM;MACd2I,eAAe,EAAE,SAAS;MAC1BvB,SAAS,EAAE,MAAM,CAAE;IACrB,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAS,CAAC,eACdtI,KAAA,CAAA2H,aAAA;IAAKC,KAAK,EAAE;MAAE7F,MAAM,EAAE,KAAK;MAAEoH,SAAS,EAAE,QAAQ;MAAEH,MAAM,EAAE;IAAiB,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3EtI,KAAA,CAAA2H,aAAA;IAAOC,KAAK,EAAE;MAAE9F,KAAK,EAAE,MAAM;MAAEoJ,cAAc,EAAE;IAAW,CAAE;IAAAjD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1DtI,KAAA,CAAA2H,aAAA;IACEC,KAAK,EAAE;MACLG,QAAQ,EAAE,QAAQ;MAClBwC,GAAG,EAAE,CAAC;MACNG,eAAe,EAAE,SAAS;MAC1BE,MAAM,EAAE;IACV,CAAE;IAAA3C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAS,CAAC,eACpEtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAS,CAAC,eACpEtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAS,CAAC,eACpEtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAM,CAAC,eACjEtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAS,CAAC,eACpEtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAS,CACjE,CACC,CAAC,eACRtI,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGvH,KAAK,CAACuI,MAAM,GAAG,CAAC,GACfvI,KAAK,CAACwI,GAAG,CAAC,CAACuB,IAAI,EAAEC,KAAK,kBACpB/K,KAAA,CAAA2H,aAAA;IAAIgC,GAAG,EAAEoB,KAAM;IAAA9C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbtI,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEwC,IAAI,CAAChB,IAAS,CAAC,eAC1E9J,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEwC,IAAI,CAACK,OAAY,CAAC,eAC7EnL,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEwC,IAAI,CAACM,QAAa,CAAC,eAC9EpL,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEwC,IAAI,CAACnE,MAAW,CAAC,eAC5E3G,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtDjB,UAAU,CAACyD,IAAI,CAACO,SAAS,CACxB,CAAC,eACLrL,KAAA,CAAA2H,aAAA;IAAIC,KAAK,EAAE;MAAEoB,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtDjB,UAAU,CAACyD,IAAI,CAACQ,OAAO,CACtB,CACF,CACL,CAAC,gBAEFtL,KAAA,CAAA2H,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEtI,KAAA,CAAA2H,aAAA;IAAI4D,OAAO,EAAC,GAAG;IAAC3D,KAAK,EAAE;MAAEc,SAAS,EAAE,QAAQ;MAAEO,OAAO,EAAE;IAAO,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2DAE7D,CACF,CAED,CACF,CACJ,CACF,CACF,CAAC;AAEV;AAEA,eAAe5H,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}