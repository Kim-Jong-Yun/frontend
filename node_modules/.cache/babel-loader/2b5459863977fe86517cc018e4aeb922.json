{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './RobotEditPage.css'; // CSS 파일 적용\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n  const fetchRobots = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      // 첫 번째 로봇을 기본 선택\n      if (response.data.length > 0) {\n        setSelectedRobot(response.data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n  const handleSelectRobot = robot => {\n    setSelectedRobot(robot);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Your Robots\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"robot-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    onClick: () => handleSelectRobot(robot),\n    className: selectedRobot && selectedRobot._id === robot._id ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, robot.name, \" - \", robot.ip)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, selectedRobot ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Robot Details\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Name: \", selectedRobot.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"IP: \", selectedRobot.ip), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Model: \", selectedRobot.model), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Battery: \", selectedRobot.status.battery, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Status: \", selectedRobot.status.state)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Please select a robot to view details\")));\n}\nexport default RobotEditPage;","map":{"version":3,"names":["React","useState","useEffect","axios","RobotEditPage","robots","setRobots","selectedRobot","setSelectedRobot","fetchRobots","token","localStorage","getItem","alert","response","get","headers","data","length","error","console","handleSelectRobot","robot","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","_id","onClick","name","ip","model","status","battery","state"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './RobotEditPage.css'; // CSS 파일 적용\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n\n  const fetchRobots = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      // 첫 번째 로봇을 기본 선택\n      if (response.data.length > 0) {\n        setSelectedRobot(response.data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  const handleSelectRobot = (robot) => {\n    setSelectedRobot(robot);\n  };\n\n  return (\n    <div className=\"robot-edit-page\">\n      <div className=\"robot-list-container\">\n        <h3>Your Robots</h3>\n        <ul className=\"robot-list\">\n          {robots.map((robot) => (\n            <li\n              key={robot._id}\n              onClick={() => handleSelectRobot(robot)}\n              className={selectedRobot && selectedRobot._id === robot._id ? 'selected' : ''}\n            >\n              {robot.name} - {robot.ip}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"robot-details-container\">\n        {selectedRobot ? (\n          <div>\n            <h3>Robot Details</h3>\n            <p>Name: {selectedRobot.name}</p>\n            <p>IP: {selectedRobot.ip}</p>\n            <p>Model: {selectedRobot.model}</p>\n            <p>Battery: {selectedRobot.status.battery}%</p>\n            <p>Status: {selectedRobot.status.state}</p>\n          </div>\n        ) : (\n          <p>Please select a robot to view details</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RobotEditPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}