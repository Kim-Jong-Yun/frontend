{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/frontend/src/pages/Robot/RobotEditPage.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css';\nimport RobotRegisterPage from './RobotRegisterPage';\n\n// 환경 변수로 API URL 관리 (필요 시 .env 파일에 추가)\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://172.30.1.33:5559/robot';\nfunction RobotEditPage() {\n  var _selectedRobot$status, _selectedRobot$status2;\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [ip, setIp] = useState(''); // IP 주소 상태 추가\n  const [active, setActive] = useState(1);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [workflowQueue, setWorkflowQueue] = useState([]); // 작업 큐 상태 추가\n  const [selectedRobotId, setSelectedRobotId] = useState(null); // 선택한 로봇의 _id 상태 추가\n  const [pendingWorkflowDeletions, setPendingWorkflowDeletions] = useState([]); // 워크플로우 삭제 대기 목록\n  const [isSaving, setIsSaving] = useState(false); // Save 버튼 상태 관리\n  const [isStarting, setIsStarting] = useState(false); // \"작동\" 버튼 상태 관리\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n\n  const token = localStorage.getItem('token');\n\n  // API 요청 헤더 설정\n  const axiosConfig = {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // 로봇 데이터 가져오기\n  const fetchRobots = useCallback(async (preserveSelectedRobotId = null) => {\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/robots`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n      let robotToSelect;\n      if (preserveSelectedRobotId) {\n        robotToSelect = response.data.find(robot => robot._id === preserveSelectedRobotId);\n      } else if (response.data.length > 0) {\n        robotToSelect = response.data[0];\n      }\n      if (robotToSelect) {\n        handleSelectRobot(robotToSelect);\n      }\n    } catch (error) {\n      console.error('로봇을 가져오는 중 오류 발생:', error);\n      alert('로봇을 가져오는 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE_URL, token]);\n\n  // 워크플로우 큐 가져오기\n  const fetchWorkflowQueue = useCallback(async robotId => {\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_BASE_URL}/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // API 응답 구조 확인 (필요 시 수정)\n      console.log('워크플로우 API 응답:', response.data);\n\n      // 예시: response.data.robot.currentWorkflow\n      const robotData = response.data.robot || response.data; // API 응답에 따라 조정\n\n      let workflows = robotData.workflows || [];\n\n      // \"In Progress\" 상태인 워크플로우 찾기 (단일 워크플로우 가정)\n      const inProgressWorkflow = workflows.find(wf => wf.status === 'In Progress');\n      if (inProgressWorkflow) {\n        // \"In Progress\" 워크플로우를 배열에서 제거\n        workflows = workflows.filter(wf => wf._id !== inProgressWorkflow._id);\n        // \"In Progress\" 워크플로우를 첫 번째에 배치\n        setWorkflowQueue([inProgressWorkflow, ...workflows]);\n      } else {\n        // \"In Progress\" 워크플로우가 없을 경우, 첫 번째 칸을 공란으로 설정\n        const placeholder = {\n          isPlaceholder: true\n        };\n        setWorkflowQueue([placeholder, ...workflows]);\n      }\n    } catch (error) {\n      console.error('워크플로우 큐를 가져오는 중 오류 발생:', error);\n      alert('워크플로우 큐를 가져오는 중 오류가 발생했습니다.');\n    }\n  }, [API_BASE_URL, token]);\n  useEffect(() => {\n    fetchRobots();\n  }, [fetchRobots]);\n  const handleSelectRobot = robot => {\n    setSelectedRobot(robot);\n    setSelectedRobotId(robot._id); // 선택한 로봇의 _id 저장\n    setName(robot.name);\n    setDescription(robot.description);\n    setIp(robot.ip); // IP 주소 상태 설정\n    setActive(robot.active);\n    setPendingWorkflowDeletions([]); // 이전 삭제 요청 초기화\n    fetchWorkflowQueue(robot._id); // 작업 큐 불러오기\n  };\n  const handleToggleActive = async () => {\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.put(`${API_BASE_URL}/toggleActive/${selectedRobot._id}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('활성 상태를 전환하는 중 오류 발생:', error);\n      alert('활성 상태를 전환하는 중 오류가 발생했습니다.');\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    // 이름 유효성 검사: 한글 입력 불가, 영문자, 숫자, 하이픈, 밑줄만 허용\n    const nameRegex = /^[a-zA-Z0-9-_]+$/;\n    if (!nameRegex.test(name)) {\n      alert('Robot name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    // IP 주소 유효성 검사\n    const ipRegex = /^(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)$/;\n    if (!ipRegex.test(ip)) {\n      alert('유효한 IP 주소를 입력해주세요.');\n      return;\n    }\n    setIsSaving(true); // Save 시작\n\n    try {\n      // 로봇 정보 업데이트\n      await axios.put(`${API_BASE_URL}/update/${selectedRobot._id}`, {\n        name,\n        description,\n        ip // IP 주소 포함\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // 워크플로우 삭제 요청\n      if (pendingWorkflowDeletions.length > 0) {\n        const deleteWorkflowPromises = pendingWorkflowDeletions.map(workflowId => axios.delete(`${API_BASE_URL}/workflows/${workflowId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }));\n        await Promise.all(deleteWorkflowPromises);\n      }\n\n      // 성공적으로 업데이트 및 삭제 후 데이터 재조회\n      fetchRobots(selectedRobot._id);\n      alert('로봇이 성공적으로 업데이트되었습니다.');\n      setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('로봇을 업데이트하는 중 오류 발생:', error);\n      alert(`로봇을 업데이트하는 중 오류가 발생했습니다: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setIsSaving(false); // Save 종료\n    }\n  };\n\n  // 플로팅 Delete 버튼 핸들러 (즉시 삭제)\n  const handleDelete = async () => {\n    if (selectedRobot) {\n      const confirmDelete = window.confirm(`\"${selectedRobot.name}\" 로봇을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`);\n      if (!confirmDelete) return;\n      if (!token) {\n        alert('토큰이 없습니다. 다시 로그인해주세요.');\n        return;\n      }\n      setIsSaving(true); // 삭제 진행 중 표시\n\n      try {\n        // DELETE 요청으로 API 호출\n        await axios.delete(`${API_BASE_URL}/robots/${selectedRobot._id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        alert('로봇이 성공적으로 삭제되었습니다.');\n        // 로봇 목록에서 삭제된 로봇 제거\n        setRobots(prevRobots => prevRobots.filter(robot => robot._id !== selectedRobot._id));\n        // 선택된 로봇 초기화\n        setSelectedRobot(null);\n        setSelectedRobotId(null);\n        setName('');\n        setDescription('');\n        setIp('');\n        setActive(1);\n        setWorkflowQueue([]);\n        setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('로봇을 삭제하는 중 오류 발생:', error);\n        alert(`로봇을 삭제하는 중 오류가 발생했습니다: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n      } finally {\n        setIsSaving(false); // 삭제 종료\n      }\n    }\n  };\n\n  // 워크플로우 삭제 핸들러 (프론트엔드에서만 삭제하고 임시 저장)\n  const handleDeleteWorkflow = workflowId => {\n    if (window.confirm('임시로 삭제하시겠습니까? 저장 시 최종 반영됩니다.')) {\n      // 워크플로우를 workflowQueue에서 제거\n      setWorkflowQueue(prevQueue => prevQueue.filter(workflow => workflow._id !== workflowId));\n      // 삭제 대기 목록에 워크플로우 ID 추가\n      setPendingWorkflowDeletions(prev => [...prev, workflowId]);\n    }\n  };\n\n  // \"작동\" 버튼 핸들러 함수\n  const handleStartWorkflows = async () => {\n    if (!selectedRobotId) {\n      alert('로봇을 선택해주세요.');\n      return;\n    }\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    setIsStarting(true);\n    try {\n      // 1. 워크플로우 할당 API 호출\n      const assignResponse = await axios.post(`${API_BASE_URL}/assignNextWorkflow`, {\n        robotId: selectedRobotId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (assignResponse.status === 200) {\n        alert('워크플로우가 성공적으로 할당되었습니다.');\n        // 워크플로우 큐 재조회\n        fetchWorkflowQueue(selectedRobotId);\n\n        // 2. 로봇을 작업으로 이동시키는 API 호출\n        const moveResponse = await axios.post(`${API_BASE_URL}/move-to-task`, {\n          robotId: selectedRobotId\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (moveResponse.status === 200) {\n          alert('로봇이 작업으로 이동되었습니다.');\n          // 필요한 경우 추가적인 상태 업데이트 수행\n          fetchRobots(selectedRobotId);\n        } else {\n          alert('로봇을 작업으로 이동하는 데 실패했습니다.');\n        }\n      } else {\n        alert('할당할 워크플로우가 없습니다.');\n      }\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error) {\n        alert(`오류: ${error.response.data.error}`);\n      } else {\n        alert(`오류가 발생했습니다: ${error.message}`);\n      }\n      console.error('작동 중 오류:', error);\n    } finally {\n      setIsStarting(false);\n    }\n  };\n  const totalRobots = robots.length;\n  const activeRobots = robots.filter(robot => robot.active === 1).length;\n\n  // 이름 입력 시 한글 검증 로직 추가\n  const handleNameChange = e => {\n    const inputName = e.target.value;\n    if (!/^[a-zA-Z0-9-_]*$/.test(inputName)) {\n      alert('Robot name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n    setName(inputName);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, \"AMR\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '18px',\n      color: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, activeRobots, \"/\", totalRobots, \" Act\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowRegisterModal(true),\n    style: {\n      padding: '5px 10px',\n      borderRadius: '50%',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginLeft: 'auto'\n    },\n    \"aria-label\": \"Register New Robot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"+\")), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uBD07\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"robot-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    onClick: () => handleSelectRobot(robot),\n    className: selectedRobotId === robot._id ? 'selected' : '',\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 19\n    }\n  }, robot.name, \" - \", robot.ip), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray',\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, robot.active === 1 ? 'Act' : 'Inact'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }\n  }, selectedRobot ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"robot-form\",\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 39\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    value: name,\n    onChange: handleNameChange // 이름 변경 검증 로직\n    ,\n    required: true,\n    className: \"input-field\",\n    placeholder: \"Enter robot name\",\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '20px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }, \"\\uBC30\\uD130\\uB9AC \", ((_selectedRobot$status = selectedRobot.status) === null || _selectedRobot$status === void 0 ? void 0 : _selectedRobot$status.battery) || 0, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 46\n    }\n  }, \"\\uC124\\uBA85\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    rows: \"4\",\n    className: \"input-field\",\n    placeholder: \"Enter robot description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 37\n    }\n  }, \"IP \\uC8FC\\uC18C\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"ip\",\n    type: \"text\",\n    value: ip,\n    onChange: e => setIp(e.target.value),\n    required: true,\n    className: \"input-field\",\n    placeholder: \"Enter robot IP address\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 22\n    }\n  }, \"\\uBAA8\\uB378\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 19\n    }\n  }, selectedRobot.model)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 22\n    }\n  }, \"\\uC0C1\\uD0DC\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  }, ((_selectedRobot$status2 = selectedRobot.status) === null || _selectedRobot$status2 === void 0 ? void 0 : _selectedRobot$status2.state) || 'Unknown')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 22\n    }\n  }, \"\\uB4F1\\uB85D\\uC77C\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }\n  }, new Date(selectedRobot.createdAt).toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 24\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: active === 1,\n    onChange: handleToggleActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, workflowQueue.length > 0 ? workflowQueue.map((workflow, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: workflow.isPlaceholder ? 'placeholder' : workflow._id,\n    className: `robot-flow-item ${workflow.isPlaceholder ? 'placeholder' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }, index !== 0 && workflow && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteWorkflow(workflow._id),\n    className: \"delete-button\",\n    title: \"Delete Workflow\",\n    \"aria-label\": `Delete workflow ${workflow.node} - ${workflow.step}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 29\n    }\n  }, \"\\xD7\"), workflow.isPlaceholder ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workflow-details placeholder-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '24px',\n      color: '#ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 31\n    }\n  }, \" \")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workflow-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 31\n    }\n  }, workflow.node), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 31\n    }\n  }, workflow.step), /*#__PURE__*/React.createElement(\"div\", {\n    className: `workflow-status-${workflow.status.replace(' ', '-').toLowerCase()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 31\n    }\n  }, workflow.status)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 23\n    }\n  }, \"No workflow steps assigned.\"))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, \"\\uC138\\uBD80 \\uC815\\uBCF4\\uB97C \\uBCF4\\uB824\\uBA74 \\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"))), showRegisterModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowRegisterModal(false),\n    style: {\n      position: 'absolute',\n      top: '10px',\n      right: '10px',\n      background: 'transparent',\n      border: 'none',\n      fontSize: '18px',\n      cursor: 'pointer'\n    },\n    \"aria-label\": \"Close Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(RobotRegisterPage, {\n    onClose: () => {\n      setShowRegisterModal(false);\n      fetchRobots();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 13\n    }\n  }))), selectedRobot ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-delete-button\",\n    onClick: handleDelete,\n    disabled: isSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 11\n    }\n  }, isSaving ? 'Deleting...' : 'DELETE'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-save-button\",\n    onClick: handleUpdate,\n    disabled: isSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, isSaving ? 'Saving...' : 'SAVE'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-start-button\",\n    onClick: handleStartWorkflows,\n    disabled: isSaving || isStarting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 11\n    }\n  }, isStarting ? '작동 중...' : '작동')) : null);\n}\nexport default RobotEditPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Navbar","LogoutButton","UserInfo","axios","RobotRegisterPage","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","RobotEditPage","_selectedRobot$status","_selectedRobot$status2","robots","setRobots","selectedRobot","setSelectedRobot","name","setName","description","setDescription","ip","setIp","active","setActive","showRegisterModal","setShowRegisterModal","workflowQueue","setWorkflowQueue","selectedRobotId","setSelectedRobotId","pendingWorkflowDeletions","setPendingWorkflowDeletions","isSaving","setIsSaving","isStarting","setIsStarting","loading","setLoading","token","localStorage","getItem","axiosConfig","headers","fetchRobots","preserveSelectedRobotId","alert","response","get","data","robotToSelect","find","robot","_id","length","handleSelectRobot","error","console","fetchWorkflowQueue","robotId","log","robotData","workflows","inProgressWorkflow","wf","status","filter","placeholder","isPlaceholder","handleToggleActive","put","handleUpdate","e","preventDefault","nameRegex","test","ipRegex","deleteWorkflowPromises","map","workflowId","delete","Promise","all","_error$response","_error$response$data","message","handleDelete","confirmDelete","window","confirm","prevRobots","_error$response2","_error$response2$data","handleDeleteWorkflow","prevQueue","workflow","prev","handleStartWorkflows","assignResponse","post","moveResponse","totalRobots","activeRobots","handleNameChange","inputName","target","value","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","marginRight","fontSize","color","onClick","padding","borderRadius","backgroundColor","border","cursor","marginLeft","key","justifyContent","onSubmit","htmlFor","id","type","onChange","required","width","fontWeight","battery","rows","model","state","Date","createdAt","toLocaleString","marginTop","checked","index","title","node","step","replace","toLowerCase","position","top","right","background","onClose","disabled"],"sources":["/home/ketgintern/Desktop/frontend/src/pages/Robot/RobotEditPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css';\nimport RobotRegisterPage from './RobotRegisterPage';\n\n// 환경 변수로 API URL 관리 (필요 시 .env 파일에 추가)\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://172.30.1.33:5559/robot';\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [ip, setIp] = useState(''); // IP 주소 상태 추가\n  const [active, setActive] = useState(1);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [workflowQueue, setWorkflowQueue] = useState([]); // 작업 큐 상태 추가\n  const [selectedRobotId, setSelectedRobotId] = useState(null); // 선택한 로봇의 _id 상태 추가\n  const [pendingWorkflowDeletions, setPendingWorkflowDeletions] = useState([]); // 워크플로우 삭제 대기 목록\n  const [isSaving, setIsSaving] = useState(false); // Save 버튼 상태 관리\n  const [isStarting, setIsStarting] = useState(false); // \"작동\" 버튼 상태 관리\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n\n  const token = localStorage.getItem('token');\n\n  // API 요청 헤더 설정\n  const axiosConfig = {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // 로봇 데이터 가져오기\n  const fetchRobots = useCallback(async (preserveSelectedRobotId = null) => {\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/robots`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      let robotToSelect;\n      if (preserveSelectedRobotId) {\n        robotToSelect = response.data.find(robot => robot._id === preserveSelectedRobotId);\n      } else if (response.data.length > 0) {\n        robotToSelect = response.data[0];\n      }\n\n      if (robotToSelect) {\n        handleSelectRobot(robotToSelect);\n      }\n    } catch (error) {\n      console.error('로봇을 가져오는 중 오류 발생:', error);\n      alert('로봇을 가져오는 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE_URL, token]);\n\n  // 워크플로우 큐 가져오기\n  const fetchWorkflowQueue = useCallback(async (robotId) => {\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_BASE_URL}/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // API 응답 구조 확인 (필요 시 수정)\n      console.log('워크플로우 API 응답:', response.data);\n\n      // 예시: response.data.robot.currentWorkflow\n      const robotData = response.data.robot || response.data; // API 응답에 따라 조정\n\n      let workflows = robotData.workflows || [];\n\n      // \"In Progress\" 상태인 워크플로우 찾기 (단일 워크플로우 가정)\n      const inProgressWorkflow = workflows.find(wf => wf.status === 'In Progress');\n\n      if (inProgressWorkflow) {\n        // \"In Progress\" 워크플로우를 배열에서 제거\n        workflows = workflows.filter(wf => wf._id !== inProgressWorkflow._id);\n        // \"In Progress\" 워크플로우를 첫 번째에 배치\n        setWorkflowQueue([inProgressWorkflow, ...workflows]);\n      } else {\n        // \"In Progress\" 워크플로우가 없을 경우, 첫 번째 칸을 공란으로 설정\n        const placeholder = { isPlaceholder: true };\n        setWorkflowQueue([placeholder, ...workflows]);\n      }\n    } catch (error) {\n      console.error('워크플로우 큐를 가져오는 중 오류 발생:', error);\n      alert('워크플로우 큐를 가져오는 중 오류가 발생했습니다.');\n    }\n  }, [API_BASE_URL, token]);\n\n  useEffect(() => {\n    fetchRobots();\n  }, [fetchRobots]);\n\n  const handleSelectRobot = (robot) => {\n    setSelectedRobot(robot);\n    setSelectedRobotId(robot._id); // 선택한 로봇의 _id 저장\n    setName(robot.name);\n    setDescription(robot.description);\n    setIp(robot.ip); // IP 주소 상태 설정\n    setActive(robot.active);\n    setPendingWorkflowDeletions([]); // 이전 삭제 요청 초기화\n    fetchWorkflowQueue(robot._id); // 작업 큐 불러오기\n  };\n\n  const handleToggleActive = async () => {\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.put(\n        `${API_BASE_URL}/toggleActive/${selectedRobot._id}`,\n        {},\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('활성 상태를 전환하는 중 오류 발생:', error);\n      alert('활성 상태를 전환하는 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    // 이름 유효성 검사: 한글 입력 불가, 영문자, 숫자, 하이픈, 밑줄만 허용\n    const nameRegex = /^[a-zA-Z0-9-_]+$/;\n    if (!nameRegex.test(name)) {\n      alert('Robot name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    // IP 주소 유효성 검사\n    const ipRegex = /^(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d\\d?)$/;\n    if (!ipRegex.test(ip)) {\n      alert('유효한 IP 주소를 입력해주세요.');\n      return;\n    }\n\n    setIsSaving(true); // Save 시작\n\n    try {\n      // 로봇 정보 업데이트\n      await axios.put(`${API_BASE_URL}/update/${selectedRobot._id}`, {\n        name,\n        description,\n        ip // IP 주소 포함\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // 워크플로우 삭제 요청\n      if (pendingWorkflowDeletions.length > 0) {\n        const deleteWorkflowPromises = pendingWorkflowDeletions.map(workflowId =>\n          axios.delete(`${API_BASE_URL}/workflows/${workflowId}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n        );\n\n        await Promise.all(deleteWorkflowPromises);\n      }\n\n      // 성공적으로 업데이트 및 삭제 후 데이터 재조회\n      fetchRobots(selectedRobot._id);\n      alert('로봇이 성공적으로 업데이트되었습니다.');\n      setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n    } catch (error) {\n      console.error('로봇을 업데이트하는 중 오류 발생:', error);\n      alert(`로봇을 업데이트하는 중 오류가 발생했습니다: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setIsSaving(false); // Save 종료\n    }\n  };\n\n  // 플로팅 Delete 버튼 핸들러 (즉시 삭제)\n  const handleDelete = async () => {\n    if (selectedRobot) {\n      const confirmDelete = window.confirm(`\"${selectedRobot.name}\" 로봇을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`);\n      if (!confirmDelete) return;\n\n      if (!token) {\n        alert('토큰이 없습니다. 다시 로그인해주세요.');\n        return;\n      }\n\n      setIsSaving(true); // 삭제 진행 중 표시\n\n      try {\n        // DELETE 요청으로 API 호출\n        await axios.delete(`${API_BASE_URL}/robots/${selectedRobot._id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n\n        alert('로봇이 성공적으로 삭제되었습니다.');\n        // 로봇 목록에서 삭제된 로봇 제거\n        setRobots((prevRobots) => prevRobots.filter((robot) => robot._id !== selectedRobot._id));\n        // 선택된 로봇 초기화\n        setSelectedRobot(null);\n        setSelectedRobotId(null);\n        setName('');\n        setDescription('');\n        setIp('');\n        setActive(1);\n        setWorkflowQueue([]);\n        setPendingWorkflowDeletions([]); // 삭제 대기 목록 초기화\n      } catch (error) {\n        console.error('로봇을 삭제하는 중 오류 발생:', error);\n        alert(`로봇을 삭제하는 중 오류가 발생했습니다: ${error.response?.data?.message || error.message}`);\n      } finally {\n        setIsSaving(false); // 삭제 종료\n      }\n    }\n  };\n\n  // 워크플로우 삭제 핸들러 (프론트엔드에서만 삭제하고 임시 저장)\n  const handleDeleteWorkflow = (workflowId) => {\n    if (window.confirm('임시로 삭제하시겠습니까? 저장 시 최종 반영됩니다.')) {\n      // 워크플로우를 workflowQueue에서 제거\n      setWorkflowQueue(prevQueue => prevQueue.filter(workflow => workflow._id !== workflowId));\n      // 삭제 대기 목록에 워크플로우 ID 추가\n      setPendingWorkflowDeletions(prev => [...prev, workflowId]);\n    }\n  };\n\n  // \"작동\" 버튼 핸들러 함수\n  const handleStartWorkflows = async () => {\n    if (!selectedRobotId) {\n      alert('로봇을 선택해주세요.');\n      return;\n    }\n\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    setIsStarting(true);\n\n    try {\n      // 1. 워크플로우 할당 API 호출\n      const assignResponse = await axios.post(`${API_BASE_URL}/assignNextWorkflow`, {\n        robotId: selectedRobotId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (assignResponse.status === 200) {\n        alert('워크플로우가 성공적으로 할당되었습니다.');\n        // 워크플로우 큐 재조회\n        fetchWorkflowQueue(selectedRobotId);\n\n        // 2. 로봇을 작업으로 이동시키는 API 호출\n        const moveResponse = await axios.post(`${API_BASE_URL}/move-to-task`, {\n          robotId: selectedRobotId\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (moveResponse.status === 200) {\n          alert('로봇이 작업으로 이동되었습니다.');\n          // 필요한 경우 추가적인 상태 업데이트 수행\n          fetchRobots(selectedRobotId);\n        } else {\n          alert('로봇을 작업으로 이동하는 데 실패했습니다.');\n        }\n      } else {\n        alert('할당할 워크플로우가 없습니다.');\n      }\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error) {\n        alert(`오류: ${error.response.data.error}`);\n      } else {\n        alert(`오류가 발생했습니다: ${error.message}`);\n      }\n      console.error('작동 중 오류:', error);\n    } finally {\n      setIsStarting(false);\n    }\n  };\n\n  const totalRobots = robots.length;\n  const activeRobots = robots.filter(robot => robot.active === 1).length;\n\n  // 이름 입력 시 한글 검증 로직 추가\n  const handleNameChange = (e) => {\n    const inputName = e.target.value;\n    if (!/^[a-zA-Z0-9-_]*$/.test(inputName)) {\n      alert('Robot name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n    setName(inputName);\n  };\n\n  return (\n    <div className=\"robot-edit-page\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"robot-list-container\">\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <h3 style={{ marginRight: '10px' }}>AMR</h3>\n            <span style={{ fontSize: '18px', color: 'gray' }}>\n              {activeRobots}/{totalRobots} Act\n            </span>\n            <button\n              onClick={() => setShowRegisterModal(true)}\n              style={{\n                padding: '5px 10px',\n                borderRadius: '50%',\n                backgroundColor: '#4CAF50',\n                color: '#fff',\n                border: 'none',\n                cursor: 'pointer',\n                fontSize: '16px',\n                marginLeft: 'auto'\n              }}\n              aria-label=\"Register New Robot\"\n            >\n              +\n            </button>\n          </div>\n          {loading ? (\n            <p>로봇을 불러오는 중...</p>\n          ) : (\n            <ul className=\"robot-list\">\n              {robots.map((robot) => (\n                <li\n                  key={robot._id}\n                  onClick={() => handleSelectRobot(robot)}\n                  className={selectedRobotId === robot._id ? 'selected' : ''}\n                  style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n                >\n                  <span>\n                    {robot.name} - {robot.ip}\n                  </span>\n                  <span style={{ color: 'gray', marginLeft: '10px' }}>\n                    {robot.active === 1 ? 'Act' : 'Inact'}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"robot-details-container\">\n          {selectedRobot ? (\n            <form className=\"robot-form\" onSubmit={handleUpdate}>\n              <div className=\"robot-field\">\n                <label htmlFor=\"name\"><strong>Name</strong></label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={handleNameChange} // 이름 변경 검증 로직\n                  required\n                  className=\"input-field\"\n                  placeholder=\"Enter robot name\"\n                  style={{ width: '50%' }}\n                />\n                <span style={{ marginLeft: '20px', fontWeight: 'bold' }}>\n                  배터리 {selectedRobot.status?.battery || 0}%\n                </span>\n              </div>\n              <div className=\"robot-field\">\n                <label htmlFor=\"description\"><strong>설명</strong></label>\n                <textarea\n                  id=\"description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  rows=\"4\"\n                  className=\"input-field\"\n                  placeholder=\"Enter robot description\"\n                />\n              </div>\n              <div className=\"robot-field\">\n                <label htmlFor=\"ip\"><strong>IP 주소</strong></label>\n                <input\n                  id=\"ip\"\n                  type=\"text\"\n                  value={ip}\n                  onChange={(e) => setIp(e.target.value)}\n                  required\n                  className=\"input-field\"\n                  placeholder=\"Enter robot IP address\"\n                  style={{ width: '10%' }}\n                />\n              </div>\n\n              <div className=\"robot-info\">\n                <div>\n                  <p><strong>모델</strong></p>\n                  <p>{selectedRobot.model}</p>\n                </div>\n                <div>\n                  <p><strong>상태</strong></p>\n                  <p>{selectedRobot.status?.state || 'Unknown'}</p>\n                </div>\n                <div>\n                  <p><strong>등록일</strong></p>\n                  <p>{new Date(selectedRobot.createdAt).toLocaleString()}</p>\n                </div>\n              </div>\n\n              <div className=\"robot-field\">\n                <label><strong>Active</strong></label>\n                <div style={{ marginTop: '10px' }}>\n                  <label className=\"switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={active === 1}\n                      onChange={handleToggleActive}\n                    />\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n\n              {/* 작업 플로우 디자인 - 첫번째 플로우는 \"In Progress\"이거나 공란 */}\n              <div className=\"robot-flow-container\">\n                <div className=\"robot-flow-background\">\n                  <div className=\"robot-flow-list\">\n                    {workflowQueue.length > 0 ? (\n                      workflowQueue.map((workflow, index) => (\n                        <div\n                          key={workflow.isPlaceholder ? 'placeholder' : workflow._id}\n                          className={`robot-flow-item ${workflow.isPlaceholder ? 'placeholder' : ''}`}\n                        >\n                          {/* 첫 번째 플로우가 placeholder가 아닐 경우만 삭제 버튼 표시 */}\n                          {index !== 0 && workflow && (\n                            <button\n                              onClick={() => handleDeleteWorkflow(workflow._id)}\n                              className=\"delete-button\"\n                              title=\"Delete Workflow\"\n                              aria-label={`Delete workflow ${workflow.node} - ${workflow.step}`}\n                            >\n                              ×\n                            </button>\n                          )}\n                          {/* 첫 번째 플로우가 placeholder일 경우 공란 유지 */}\n                          {workflow.isPlaceholder ? (\n                            <div className=\"workflow-details placeholder-details\">\n                              {/* 공란에 대한 추가 내용 또는 아이콘 */}\n                              <span style={{ fontSize: '24px', color: '#ccc' }}> </span>\n                            </div>\n                          ) : (\n                            <div className=\"workflow-details\">\n                              <strong>{workflow.node}</strong>\n                              <div>{workflow.step}</div>\n                              <div className={`workflow-status-${workflow.status.replace(' ', '-').toLowerCase()}`}>\n                                {workflow.status}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))\n                    ) : (\n                      <p>No workflow steps assigned.</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* 추가적인 작업 플로우 기능을 원할 경우 여기에 구현 */}\n            </form>\n          ) : (\n            <p>세부 정보를 보려면 로봇을 선택해주세요.</p>\n          )}\n        </div>\n      </div>\n\n      {showRegisterModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <button\n              onClick={() => setShowRegisterModal(false)}\n              style={{\n                position: 'absolute',\n                top: '10px',\n                right: '10px',\n                background: 'transparent',\n                border: 'none',\n                fontSize: '18px',\n                cursor: 'pointer'\n              }}\n              aria-label=\"Close Modal\"\n            >\n              &times;\n            </button>\n            <RobotRegisterPage onClose={() => { setShowRegisterModal(false); fetchRobots(); }} />\n          </div>\n        </div>\n      )}\n\n      {selectedRobot ? (\n        <div className=\"floating-buttons\">\n          <button\n            className=\"floating-delete-button\"\n            onClick={handleDelete}\n            disabled={isSaving}\n          >\n            {isSaving ? 'Deleting...' : 'DELETE'}\n          </button>\n          <button\n            className=\"floating-save-button\"\n            onClick={handleUpdate}\n            disabled={isSaving}\n          >\n            {isSaving ? 'Saving...' : 'SAVE'}\n          </button>\n          <button\n            className=\"floating-start-button\"\n            onClick={handleStartWorkflows}\n            disabled={isSaving || isStarting}\n          >\n            {isStarting ? '작동 중...' : '작동'}\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default RobotEditPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}