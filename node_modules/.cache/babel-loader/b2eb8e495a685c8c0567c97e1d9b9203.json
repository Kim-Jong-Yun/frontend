{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js\";\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport './TaskFlow.css';\nimport CreateTaskFlow from './CreateTaskFlow';\nconst TaskFlow = forwardRef(({\n  workflow,\n  onTemporaryFlowAdd,\n  onRemovedFlowsUpdate\n}, ref) => {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n  const [hiddenFlows, setHiddenFlows] = useState(new Set()); // 숨길 항목의 인덱스 저장\n  const [removedFlowIDs, setRemovedFlowIDs] = useState([]); // 삭제된 항목의 objectID 저장\n\n  // 팝업 열기/닫기 토글\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  // CreateTaskFlow 컴포넌트로부터 새로운 작업 플로우를 추가하는 함수\n  const handleTaskFlowAdd = (nodeName, stepName) => {\n    if (nodeName.trim() === '' || stepName.trim() === '') return;\n    const newFlow = {\n      node: nodeName,\n      step: stepName\n    };\n    setTemporaryWorkflow([...temporaryWorkflow, newFlow]); // 임시 플로우에 추가\n    onTemporaryFlowAdd(newFlow); // 부모 컴포넌트에 임시 플로우 전달\n    togglePopup();\n  };\n\n  // 개별 워크플로우 항목을 일시적으로 숨기고 objectID를 저장하는 함수\n  const handleRemoveFlow = index => {\n    const removedFlow = temporaryWorkflow[index];\n    if (removedFlow && removedFlow.objectID) {\n      // objectID가 있는 경우 저장\n      const updatedRemovedFlowIDs = [...removedFlowIDs, removedFlow.objectID];\n      setRemovedFlowIDs(updatedRemovedFlowIDs); // 삭제된 항목의 ID 업데이트\n      onRemovedFlowsUpdate(updatedRemovedFlowIDs); // 부모 컴포넌트에 업데이트 전달\n      console.log(\"Removed Flow IDs:\", updatedRemovedFlowIDs); // 배열 출력\n    }\n    setHiddenFlows(new Set(hiddenFlows).add(index));\n  };\n\n  // 임시 플로우 초기화 함수\n  useImperativeHandle(ref, () => ({\n    clearTemporaryWorkflow() {\n      setTemporaryWorkflow([]);\n      setHiddenFlows(new Set()); // 숨김 상태 초기화\n      setRemovedFlowIDs([]); // 삭제된 ID 초기화\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, workflow.concat(temporaryWorkflow).map((flow, index) => hiddenFlows.has(index - workflow.length) ? null :\n  /*#__PURE__*/\n  // 숨긴 항목은 렌더링하지 않음\n  React.createElement(\"div\", {\n    key: index,\n    className: \"task-flow-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }), \" \", flow.node), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }), \" \", flow.step), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"task-flow-remove-btn\",\n    onClick: () => handleRemoveFlow(index - workflow.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePopup,\n    className: \"task-flow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"+\")))), isPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CreateTaskFlow, {\n    onClose: togglePopup,\n    onTaskFlowAdd: handleTaskFlowAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }))));\n});\nexport default TaskFlow;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","CreateTaskFlow","TaskFlow","workflow","onTemporaryFlowAdd","onRemovedFlowsUpdate","ref","isPopupOpen","setIsPopupOpen","temporaryWorkflow","setTemporaryWorkflow","hiddenFlows","setHiddenFlows","Set","removedFlowIDs","setRemovedFlowIDs","togglePopup","handleTaskFlowAdd","nodeName","stepName","trim","newFlow","node","step","handleRemoveFlow","index","removedFlow","objectID","updatedRemovedFlowIDs","console","log","add","clearTemporaryWorkflow","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","concat","map","flow","has","length","key","onClick","onClose","onTaskFlowAdd"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport './TaskFlow.css';\nimport CreateTaskFlow from './CreateTaskFlow';\n\nconst TaskFlow = forwardRef(({ workflow, onTemporaryFlowAdd, onRemovedFlowsUpdate }, ref) => {\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n    const [hiddenFlows, setHiddenFlows] = useState(new Set()); // 숨길 항목의 인덱스 저장\n    const [removedFlowIDs, setRemovedFlowIDs] = useState([]); // 삭제된 항목의 objectID 저장\n\n    // 팝업 열기/닫기 토글\n    const togglePopup = () => {\n        setIsPopupOpen(!isPopupOpen);\n    };\n\n    // CreateTaskFlow 컴포넌트로부터 새로운 작업 플로우를 추가하는 함수\n    const handleTaskFlowAdd = (nodeName, stepName) => {\n        if (nodeName.trim() === '' || stepName.trim() === '') return;\n        const newFlow = { node: nodeName, step: stepName };\n        setTemporaryWorkflow([...temporaryWorkflow, newFlow]); // 임시 플로우에 추가\n        onTemporaryFlowAdd(newFlow); // 부모 컴포넌트에 임시 플로우 전달\n        togglePopup();\n    };\n\n    // 개별 워크플로우 항목을 일시적으로 숨기고 objectID를 저장하는 함수\n    const handleRemoveFlow = (index) => {\n        const removedFlow = temporaryWorkflow[index];\n        if (removedFlow && removedFlow.objectID) { // objectID가 있는 경우 저장\n            const updatedRemovedFlowIDs = [...removedFlowIDs, removedFlow.objectID];\n            setRemovedFlowIDs(updatedRemovedFlowIDs); // 삭제된 항목의 ID 업데이트\n            onRemovedFlowsUpdate(updatedRemovedFlowIDs); // 부모 컴포넌트에 업데이트 전달\n            console.log(\"Removed Flow IDs:\", updatedRemovedFlowIDs); // 배열 출력\n        }\n        setHiddenFlows(new Set(hiddenFlows).add(index));\n    };\n\n    // 임시 플로우 초기화 함수\n    useImperativeHandle(ref, () => ({\n        clearTemporaryWorkflow() {\n            setTemporaryWorkflow([]);\n            setHiddenFlows(new Set()); // 숨김 상태 초기화\n            setRemovedFlowIDs([]); // 삭제된 ID 초기화\n        }\n    }));\n\n    return (\n        <div className=\"task-flow-container\">\n            <div className=\"task-flow-background\">\n                <div className=\"task-flow-list\">\n                    {/* 저장된 workflow와 임시 저장된 temporaryWorkflow 병합하여 표시 */}\n                    {workflow.concat(temporaryWorkflow).map((flow, index) => (\n                        hiddenFlows.has(index - workflow.length) ? null : ( // 숨긴 항목은 렌더링하지 않음\n                            <div key={index} className=\"task-flow-item\">\n                                <div>\n                                    <strong></strong> {flow.node}\n                                </div>\n                                <div>\n                                    <strong></strong> {flow.step}\n                                </div>\n                                {/* 삭제 버튼 추가 */}\n                                <button\n                                    className=\"task-flow-remove-btn\"\n                                    onClick={() => handleRemoveFlow(index - workflow.length)}\n                                >\n                                    ×\n                                </button>\n                            </div>\n                        )\n                    ))}\n                    <div className=\"task-flow-add\">\n                        <button onClick={togglePopup} className=\"task-flow-button\">+</button>\n                    </div>\n                </div>\n            </div>\n            {isPopupOpen && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup-content\">\n                        <CreateTaskFlow onClose={togglePopup} onTaskFlowAdd={handleTaskFlowAdd} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default TaskFlow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}