{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css';\nimport RobotRegisterPage from './RobotRegisterPage';\nfunction RobotEditPage() {\n  var _selectedRobot$status, _selectedRobot$status2;\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [active, setActive] = useState(1);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [workflowQueue, setWorkflowQueue] = useState([]); // 작업 큐 상태 추가\n  const [selectedRobotId, setSelectedRobotId] = useState(null); // 선택한 로봇의 _id 상태 추가\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n  const fetchRobots = async (preserveSelectedRobotId = null) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.31:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n      if (preserveSelectedRobotId) {\n        const selected = response.data.find(robot => robot._id === preserveSelectedRobotId);\n        if (selected) {\n          setSelectedRobot(selected);\n          setSelectedRobotId(selected._id); // 선택한 로봇의 _id 저장\n          setName(selected.name);\n          setDescription(selected.description);\n          setActive(selected.active);\n          fetchWorkflowQueue(selected._id); // 작업 큐 불러오기\n        }\n      } else if (response.data.length > 0) {\n        setSelectedRobot(response.data[0]);\n        setSelectedRobotId(response.data[0]._id); // 첫 번째 로봇의 _id 저장\n        setName(response.data[0].name);\n        setDescription(response.data[0].description);\n        setActive(response.data[0].active);\n        fetchWorkflowQueue(response.data[0]._id); // 작업 큐 불러오기\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n      alert('Error fetching robots.');\n    }\n  };\n\n  // 특정 robotId에 해당하는 작업 큐 불러오기\n  const fetchWorkflowQueue = async robotId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.31:5559/robot/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setWorkflowQueue(response.data.workflows || []); // 작업 큐의 workflows 배열 저장\n    } catch (error) {\n      console.error('Error fetching workflow queue:', error);\n      alert('Error fetching workflow queue.');\n    }\n  };\n  const handleSelectRobot = robot => {\n    setSelectedRobot(robot);\n    setSelectedRobotId(robot._id); // 선택한 로봇의 _id 저장\n    setName(robot.name);\n    setDescription(robot.description);\n    setActive(robot.active);\n    fetchWorkflowQueue(robot._id); // 작업 큐 불러오기\n  };\n  const handleToggleActive = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.31:5559/robot/toggleActive/${selectedRobot._id}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('Error toggling active status:', error);\n      alert('Error toggling active status.');\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.31:5559/robot/update/${selectedRobot._id}`, {\n        name,\n        description\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchRobots(selectedRobot._id);\n      alert('Robot updated successfully.');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating robot:', error);\n      alert(`Error updating robot: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  const handleDelete = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    if (window.confirm('Are you sure you want to delete this robot?')) {\n      try {\n        await axios.put(`http://172.30.1.31:5559/robot/unregister/${selectedRobot._id}`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setSelectedRobot(null);\n        setWorkflowQueue([]);\n        fetchRobots();\n        alert('Robot deleted successfully.');\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error removing robot:', error);\n        alert(`Error removing robot: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n      }\n    }\n  };\n  const totalRobots = robots.length;\n  const activeRobots = robots.filter(robot => robot.active === 1).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"AMR\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '18px',\n      color: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, activeRobots, \"/\", totalRobots, \" Act\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowRegisterModal(true),\n    style: {\n      padding: '5px 10px',\n      borderRadius: '50%',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '16px',\n      marginLeft: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"robot-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    onClick: () => handleSelectRobot(robot),\n    className: selectedRobotId === robot._id ? 'selected' : '',\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, robot.name, \" - \", robot.ip), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray',\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, robot.active === 1 ? 'Act' : 'Inact'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, selectedRobot ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"robot-form\",\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 39\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    className: \"input-field\",\n    placeholder: \"Enter robot name\",\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '20px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"\\uBC30\\uD130\\uB9AC \", ((_selectedRobot$status = selectedRobot.status) === null || _selectedRobot$status === void 0 ? void 0 : _selectedRobot$status.battery) || 0, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 46\n    }\n  }, \"\\uC124\\uBA85\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    rows: \"4\",\n    className: \"input-field\",\n    placeholder: \"Enter robot description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 22\n    }\n  }, \"IP \\uC8FC\\uC18C\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, selectedRobot.ip)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 22\n    }\n  }, \"\\uBAA8\\uB378\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, selectedRobot.model)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 22\n    }\n  }, \"\\uC0C1\\uD0DC\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, ((_selectedRobot$status2 = selectedRobot.status) === null || _selectedRobot$status2 === void 0 ? void 0 : _selectedRobot$status2.state) || 'Unknown')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 22\n    }\n  }, \"\\uB4F1\\uB85D\\uC77C\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, new Date(selectedRobot.createdAt).toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 24\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: active === 1,\n    onChange: handleToggleActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  }, workflowQueue.length > 0 ? workflowQueue.map((workflow, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"robot-flow-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 32\n    }\n  }, workflow.node)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 27\n    }\n  }, workflow.step), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 27\n    }\n  }, workflow.status))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }\n  }, \"No workflow steps assigned.\"))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, \"Please select a robot to view and edit details\"))), showRegisterModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowRegisterModal(false),\n    style: {\n      position: 'absolute',\n      top: '10px',\n      right: '10px',\n      background: 'transparent',\n      border: 'none',\n      fontSize: '18px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(RobotRegisterPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }))), selectedRobot && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-delete-button\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, \"DELETE\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"floating-save-button\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, \"SAVE\")));\n}\nexport default RobotEditPage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","RobotRegisterPage","RobotEditPage","_selectedRobot$status","_selectedRobot$status2","robots","setRobots","selectedRobot","setSelectedRobot","name","setName","description","setDescription","active","setActive","showRegisterModal","setShowRegisterModal","workflowQueue","setWorkflowQueue","selectedRobotId","setSelectedRobotId","fetchRobots","preserveSelectedRobotId","token","localStorage","getItem","alert","response","get","headers","data","selected","find","robot","_id","fetchWorkflowQueue","length","error","console","robotId","workflows","handleSelectRobot","handleToggleActive","put","handleUpdate","e","preventDefault","_error$response","_error$response$data","message","handleDelete","window","confirm","_error$response2","_error$response2$data","totalRobots","activeRobots","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","marginRight","fontSize","color","onClick","padding","borderRadius","backgroundColor","border","cursor","marginLeft","map","key","justifyContent","ip","onSubmit","htmlFor","id","type","value","onChange","target","required","placeholder","width","fontWeight","status","battery","rows","model","state","Date","createdAt","toLocaleString","marginTop","checked","workflow","index","node","step","position","top","right","background"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './RobotEditPage.css';\nimport RobotRegisterPage from './RobotRegisterPage';\n\nfunction RobotEditPage() {\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [active, setActive] = useState(1);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [workflowQueue, setWorkflowQueue] = useState([]); // 작업 큐 상태 추가\n  const [selectedRobotId, setSelectedRobotId] = useState(null); // 선택한 로봇의 _id 상태 추가\n\n  useEffect(() => {\n    fetchRobots();\n  }, []);\n\n  const fetchRobots = async (preserveSelectedRobotId = null) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.31:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n\n      if (preserveSelectedRobotId) {\n        const selected = response.data.find(robot => robot._id === preserveSelectedRobotId);\n        if (selected) {\n          setSelectedRobot(selected);\n          setSelectedRobotId(selected._id); // 선택한 로봇의 _id 저장\n          setName(selected.name);\n          setDescription(selected.description);\n          setActive(selected.active);\n          fetchWorkflowQueue(selected._id); // 작업 큐 불러오기\n        }\n      } else if (response.data.length > 0) {\n        setSelectedRobot(response.data[0]);\n        setSelectedRobotId(response.data[0]._id); // 첫 번째 로봇의 _id 저장\n        setName(response.data[0].name);\n        setDescription(response.data[0].description);\n        setActive(response.data[0].active);\n        fetchWorkflowQueue(response.data[0]._id); // 작업 큐 불러오기\n      }\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n      alert('Error fetching robots.');\n    }\n  };\n\n  // 특정 robotId에 해당하는 작업 큐 불러오기\n  const fetchWorkflowQueue = async (robotId) => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`http://172.30.1.31:5559/robot/robot/${robotId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setWorkflowQueue(response.data.workflows || []); // 작업 큐의 workflows 배열 저장\n    } catch (error) {\n      console.error('Error fetching workflow queue:', error);\n      alert('Error fetching workflow queue.');\n    }\n  };\n\n  const handleSelectRobot = (robot) => {\n    setSelectedRobot(robot);\n    setSelectedRobotId(robot._id); // 선택한 로봇의 _id 저장\n    setName(robot.name);\n    setDescription(robot.description);\n    setActive(robot.active);\n    fetchWorkflowQueue(robot._id); // 작업 큐 불러오기\n  };\n\n  const handleToggleActive = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.put(\n        `http://172.30.1.31:5559/robot/toggleActive/${selectedRobot._id}`,\n        {},\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      fetchRobots(selectedRobot._id);\n    } catch (error) {\n      console.error('Error toggling active status:', error);\n      alert('Error toggling active status.');\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.31:5559/robot/update/${selectedRobot._id}`, {\n        name,\n        description\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchRobots(selectedRobot._id);\n      alert('Robot updated successfully.');\n    } catch (error) {\n      console.error('Error updating robot:', error);\n      alert(`Error updating robot: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  const handleDelete = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    if (window.confirm('Are you sure you want to delete this robot?')) {\n      try {\n        await axios.put(`http://172.30.1.31:5559/robot/unregister/${selectedRobot._id}`, {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setSelectedRobot(null);\n        setWorkflowQueue([]);\n        fetchRobots();\n        alert('Robot deleted successfully.');\n      } catch (error) {\n        console.error('Error removing robot:', error);\n        alert(`Error removing robot: ${error.response?.data?.message || error.message}`);\n      }\n    }\n  };\n\n  const totalRobots = robots.length;\n  const activeRobots = robots.filter(robot => robot.active === 1).length;\n\n  return (\n    <div className=\"robot-edit-page\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"robot-list-container\">\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <h3 style={{ marginRight: '10px' }}>AMR</h3>\n            <span style={{ fontSize: '18px', color: 'gray' }}>\n              {activeRobots}/{totalRobots} Act\n            </span>\n            <button\n              onClick={() => setShowRegisterModal(true)}\n              style={{\n                padding: '5px 10px',\n                borderRadius: '50%',\n                backgroundColor: '#4CAF50',\n                color: '#fff',\n                border: 'none',\n                cursor: 'pointer',\n                fontSize: '16px',\n                marginLeft: 'auto'\n              }}\n            >\n              +\n            </button>\n          </div>\n          <ul className=\"robot-list\">\n            {robots.map((robot) => (\n              <li\n                key={robot._id}\n                onClick={() => handleSelectRobot(robot)}\n                className={selectedRobotId === robot._id ? 'selected' : ''}\n                style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n              >\n                <span>\n                  {robot.name} - {robot.ip}\n                </span>\n                <span style={{ color: 'gray', marginLeft: '10px' }}>\n                  {robot.active === 1 ? 'Act' : 'Inact'}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"robot-details-container\">\n          {selectedRobot ? (\n            <form className=\"robot-form\" onSubmit={handleUpdate}>\n              <div className=\"robot-field\">\n                <label htmlFor=\"name\"><strong>Name</strong></label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                  className=\"input-field\"\n                  placeholder=\"Enter robot name\"\n                  style={{ width: '50%' }}\n                />\n                <span style={{ marginLeft: '20px', fontWeight: 'bold' }}>\n                  배터리 {selectedRobot.status?.battery || 0}%\n                </span>\n              </div>\n              <div className=\"robot-field\">\n                <label htmlFor=\"description\"><strong>설명</strong></label>\n                <textarea\n                  id=\"description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  rows=\"4\"\n                  className=\"input-field\"\n                  placeholder=\"Enter robot description\"\n                />\n              </div>\n\n              <div className=\"robot-info\">\n                <div>\n                  <p><strong>IP 주소</strong></p>\n                  <p>{selectedRobot.ip}</p>\n                </div>\n                <div>\n                  <p><strong>모델</strong></p>\n                  <p>{selectedRobot.model}</p>\n                </div>\n                <div>\n                  <p><strong>상태</strong></p>\n                  <p>{selectedRobot.status?.state || 'Unknown'}</p>\n                </div>\n                <div>\n                  <p><strong>등록일</strong></p>\n                  <p>{new Date(selectedRobot.createdAt).toLocaleString()}</p>\n                </div>\n              </div>\n\n              <div className=\"robot-field\">\n                <label><strong>Active</strong></label>\n                <div style={{ marginTop: '10px' }}>\n                  <label className=\"switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={active === 1}\n                      onChange={handleToggleActive}\n                    />\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n\n              {/* 작업 플로우 디자인에 작업 큐 데이터 표시 */}\n              <div className=\"robot-flow-container\">\n                <div className=\"robot-flow-background\">\n                  <div className=\"robot-flow-list\">\n                    {workflowQueue.length > 0 ? (\n                      workflowQueue.map((workflow, index) => (\n                        <div key={index} className=\"robot-flow-item\">\n                          <div><strong>{workflow.node}</strong></div>\n                          <div>{workflow.step}</div>\n                          <div style={{ color: 'gray' }}>{workflow.status}</div>\n                        </div>\n                      ))\n                    ) : (\n                      <p>No workflow steps assigned.</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* 추가적인 작업 플로우 기능을 원할 경우 여기에 구현 */}\n            </form>\n          ) : (\n            <p>Please select a robot to view and edit details</p>\n          )}\n        </div>\n      </div>\n\n      {showRegisterModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <button\n              onClick={() => setShowRegisterModal(false)}\n              style={{ position: 'absolute', top: '10px', right: '10px', background: 'transparent', border: 'none', fontSize: '18px', cursor: 'pointer' }}\n            >\n              &times;\n            </button>\n            <RobotRegisterPage />\n          </div>\n        </div>\n      )}\n\n      {selectedRobot && (\n        <div className=\"floating-buttons\">\n          <button className=\"floating-delete-button\" onClick={handleDelete}>\n            DELETE\n          </button>\n          <button className=\"floating-save-button\" onClick={handleUpdate}>\n            SAVE\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RobotEditPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}