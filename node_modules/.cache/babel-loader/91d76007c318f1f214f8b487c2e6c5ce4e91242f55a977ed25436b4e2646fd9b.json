{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://172.30.1.76:3000', {\n  // 시그널링 서버의 IP 주소와 포트\n  transports: ['websocket'],\n  upgrade: true,\n  forceNew: true,\n  withCredentials: true\n});\nfunction MapCreatePage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const videoRef = useRef();\n  const peerRef = useRef(null);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedRobot) {\n      const peer = new SimplePeer({\n        initiator: true,\n        trickle: false\n      });\n      peer.on('signal', data => {\n        socket.emit('signal', {\n          signal: data,\n          robot_id: selectedRobot\n        });\n      });\n      peer.on('stream', stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n      peerRef.current = peer;\n      socket.on('signal', data => {\n        peer.signal(data.signal);\n      });\n\n      // WebSocket을 사용하여 ROS 비디오 스트림 구독\n      const connectWebSocket = () => {\n        const ws = new WebSocket('ws://172.30.1.76:6000'); // 시그널링 서버의 WebSocket URL\n        ws.onopen = () => {\n          console.log('WebSocket connected');\n        };\n        ws.onmessage = async message => {\n          const data = JSON.parse(message.data);\n          if (data.type === 'offer') {\n            await peer.setRemoteDescription(new RTCSessionDescription(data));\n            const answer = await peer.createAnswer();\n            await peer.setLocalDescription(answer);\n            ws.send(JSON.stringify(peer.localDescription));\n          } else if (data.type === 'answer') {\n            await peer.setRemoteDescription(new RTCSessionDescription(data));\n          } else if (data.type === 'candidate') {\n            await peer.addIceCandidate(new RTCIceCandidate(data));\n          } else if (data.image) {\n            // 이미지 데이터를 비디오 스트림으로 변환\n            const img = new Image();\n            img.src = data.image;\n            img.onload = () => {\n              const canvas = document.createElement('canvas');\n              const ctx = canvas.getContext('2d');\n              canvas.width = img.width;\n              canvas.height = img.height;\n              ctx.drawImage(img, 0, 0);\n              if (videoRef.current) {\n                videoRef.current.srcObject = canvas.captureStream();\n              }\n            };\n          }\n        };\n      };\n      connectWebSocket();\n\n      // ROS 연결 설정 및 SLAM 데이터 처리 부분\n      const ros = new window.ROSLIB.Ros({\n        url: 'ws://172.30.1.40:9090'\n      });\n      ros.on('connection', () => {\n        console.log('Connected to ROS websocket server.');\n      });\n      ros.on('error', error => {\n        console.log('Error connecting to ROS websocket server: ', error);\n      });\n      ros.on('close', () => {\n        console.log('Connection to ROS websocket server closed.');\n      });\n      const mapTopic = new window.ROSLIB.Topic({\n        ros: ros,\n        name: '/map',\n        messageType: 'nav_msgs/OccupancyGrid'\n      });\n      mapTopic.subscribe(message => {\n        console.log('Received message on /map: ', message);\n        if (message.info && message.data) {\n          const {\n            width,\n            height\n          } = message.info;\n          const data = message.data;\n          const canvas = mapRef.current;\n          const context = canvas.getContext('2d');\n          const imageData = context.createImageData(width, height);\n          for (let i = 0; i < data.length; i++) {\n            const value = data[i];\n            const color = value === -1 ? 255 : 255 - value;\n            imageData.data[i * 4] = color;\n            imageData.data[i * 4 + 1] = color;\n            imageData.data[i * 4 + 2] = color;\n            imageData.data[i * 4 + 3] = 255;\n          }\n          context.putImageData(imageData, 0, 0);\n        } else {\n          console.error('Received invalid /map message:', message);\n        }\n      });\n      return () => {\n        ros.close();\n      };\n    }\n  }, [selectedRobot]);\n  const handleKeyDown = useCallback(e => {\n    const velocityCommands = {\n      w: {\n        linear: 0.1,\n        angular: 0\n      },\n      a: {\n        linear: 0,\n        angular: 0.1\n      },\n      s: {\n        linear: -0.1,\n        angular: 0\n      },\n      d: {\n        linear: 0,\n        angular: -0.1\n      },\n      ' ': {\n        linear: 0,\n        angular: 0\n      }\n    };\n    if (velocityCommands[e.key]) {\n      socket.emit('key_press', {\n        robot_id: selectedRobot,\n        velocity: velocityCommands[e.key]\n      });\n    }\n  }, [selectedRobot]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedRobot, handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SLAM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRobot(e.target.value),\n        value: selectedRobot,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: robot._id,\n          children: robot.name\n        }, robot._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SLAM \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: mapRef,\n          width: \"600\",\n          height: \"600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"WebCam \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n_s(MapCreatePage, \"lFXSwbqffOYty/iht+vTPXgyML0=\");\n_c = MapCreatePage;\nexport default MapCreatePage;\nvar _c;\n$RefreshReg$(_c, \"MapCreatePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Navbar","LogoutButton","UserInfo","axios","io","SimplePeer","jsxDEV","_jsxDEV","socket","connect","transports","upgrade","forceNew","withCredentials","MapCreatePage","_s","robots","setRobots","selectedRobot","setSelectedRobot","videoRef","peerRef","mapRef","fetchRobots","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","disconnect","peer","initiator","trickle","on","emit","signal","robot_id","stream","current","srcObject","connectWebSocket","ws","WebSocket","onopen","log","onmessage","message","JSON","parse","type","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","send","stringify","localDescription","addIceCandidate","RTCIceCandidate","image","img","Image","src","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","captureStream","ros","window","ROSLIB","Ros","url","mapTopic","Topic","name","messageType","subscribe","info","context","imageData","createImageData","i","length","value","color","putImageData","close","handleKeyDown","e","velocityCommands","w","linear","angular","a","s","d","key","velocity","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","target","map","robot","_id","justifyContent","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\n\nconst socket = io.connect('http://172.30.1.76:3000', { // 시그널링 서버의 IP 주소와 포트\n    transports: ['websocket'],\n    upgrade: true,\n    forceNew: true,\n    withCredentials: true\n});\n\nfunction MapCreatePage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n    const videoRef = useRef();\n    const peerRef = useRef(null);\n    const mapRef = useRef(null);\n\n    useEffect(() => {\n        const fetchRobots = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            const peer = new SimplePeer({\n                initiator: true,\n                trickle: false\n            });\n\n            peer.on('signal', data => {\n                socket.emit('signal', { signal: data, robot_id: selectedRobot });\n            });\n\n            peer.on('stream', stream => {\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            });\n\n            peerRef.current = peer;\n\n            socket.on('signal', data => {\n                peer.signal(data.signal);\n            });\n\n            // WebSocket을 사용하여 ROS 비디오 스트림 구독\n            const connectWebSocket = () => {\n                const ws = new WebSocket('ws://172.30.1.76:6000'); // 시그널링 서버의 WebSocket URL\n                ws.onopen = () => {\n                    console.log('WebSocket connected');\n                };\n                ws.onmessage = async (message) => {\n                    const data = JSON.parse(message.data);\n                    if (data.type === 'offer') {\n                        await peer.setRemoteDescription(new RTCSessionDescription(data));\n                        const answer = await peer.createAnswer();\n                        await peer.setLocalDescription(answer);\n                        ws.send(JSON.stringify(peer.localDescription));\n                    } else if (data.type === 'answer') {\n                        await peer.setRemoteDescription(new RTCSessionDescription(data));\n                    } else if (data.type === 'candidate') {\n                        await peer.addIceCandidate(new RTCIceCandidate(data));\n                    } else if (data.image) {\n                        // 이미지 데이터를 비디오 스트림으로 변환\n                        const img = new Image();\n                        img.src = data.image;\n                        img.onload = () => {\n                            const canvas = document.createElement('canvas');\n                            const ctx = canvas.getContext('2d');\n                            canvas.width = img.width;\n                            canvas.height = img.height;\n                            ctx.drawImage(img, 0, 0);\n                            if (videoRef.current) {\n                                videoRef.current.srcObject = canvas.captureStream();\n                            }\n                        };\n                    }\n                };\n            };\n\n            connectWebSocket();\n\n            // ROS 연결 설정 및 SLAM 데이터 처리 부분\n            const ros = new window.ROSLIB.Ros({\n                url: 'ws://172.30.1.40:9090'\n            });\n\n            ros.on('connection', () => {\n                console.log('Connected to ROS websocket server.');\n            });\n\n            ros.on('error', (error) => {\n                console.log('Error connecting to ROS websocket server: ', error);\n            });\n\n            ros.on('close', () => {\n                console.log('Connection to ROS websocket server closed.');\n            });\n\n            const mapTopic = new window.ROSLIB.Topic({\n                ros: ros,\n                name: '/map',\n                messageType: 'nav_msgs/OccupancyGrid'\n            });\n\n            mapTopic.subscribe((message) => {\n                console.log('Received message on /map: ', message);\n                if (message.info && message.data) {\n                    const { width, height } = message.info;\n                    const data = message.data;\n                    const canvas = mapRef.current;\n                    const context = canvas.getContext('2d');\n                    const imageData = context.createImageData(width, height);\n\n                    for (let i = 0; i < data.length; i++) {\n                        const value = data[i];\n                        const color = value === -1 ? 255 : 255 - value;\n                        imageData.data[i * 4] = color;\n                        imageData.data[i * 4 + 1] = color;\n                        imageData.data[i * 4 + 2] = color;\n                        imageData.data[i * 4 + 3] = 255;\n                    }\n\n                    context.putImageData(imageData, 0, 0);\n                } else {\n                    console.error('Received invalid /map message:', message);\n                }\n            });\n\n            return () => {\n                ros.close();\n            };\n        }\n    }, [selectedRobot]);\n\n    const handleKeyDown = useCallback((e) => {\n        const velocityCommands = {\n            w: { linear: 0.1, angular: 0 },\n            a: { linear: 0, angular: 0.1 },\n            s: { linear: -0.1, angular: 0 },\n            d: { linear: 0, angular: -0.1 },\n            ' ': { linear: 0, angular: 0 }\n        };\n        if (velocityCommands[e.key]) {\n            socket.emit('key_press', { robot_id: selectedRobot, velocity: velocityCommands[e.key] });\n        }\n    }, [selectedRobot]);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [selectedRobot, handleKeyDown]);\n\n    return (\n        <div>\n            <header>\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div style={{ display: 'flex' }}>\n                <Navbar />\n            </div>\n            <h2>SLAM Control</h2>\n            <div>\n                <label>로봇 선택:</label>\n                <select onChange={(e) => setSelectedRobot(e.target.value)} value={selectedRobot}>\n                    <option value=\"\">로봇을 선택하세요</option>\n                    {robots.map(robot => (\n                        <option key={robot._id} value={robot._id}>{robot.name}</option>\n                    ))}\n                </select>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div style={{ width: '50%' }}>\n                    <h3>SLAM 화면</h3>\n                    <canvas ref={mapRef} width=\"600\" height=\"600\" />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <h3>WebCam 화면</h3>\n                    <video ref={videoRef} autoPlay playsInline style={{ width: '100%' }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MapCreatePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}