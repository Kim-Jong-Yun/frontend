{"ast":null,"code":"const mapResolution = 0.05; // 미터 당 픽셀 (meters per pixel)\nconst mapOrigin = [-10.0, -10.0]; // 맵의 원점 좌표 (x, y)\n\n/**\n * 월드 좌표 (미터)를 화면(맵) 좌표 (픽셀)로 변환\n * @param {number} worldX - 월드 좌표 X\n * @param {number} worldY - 월드 좌표 Y\n * @param {number} imageNaturalWidth - 자연 크기의 맵 너비 (픽셀)\n * @param {number} imageNaturalHeight - 자연 크기의 맵 높이 (픽셀)\n * @returns {object} - 화면 좌표 {x, y}\n */\nexport const worldToMap = (worldX, worldY, imageNaturalWidth, imageNaturalHeight) => {\n  const mapX = (worldX - mapOrigin[0]) / mapResolution;\n  const mapY = imageNaturalHeight - (worldY - mapOrigin[1]) / mapResolution; // Y 좌표 반전\n\n  return {\n    x: mapX,\n    y: mapY\n  };\n};\n\n/**\n * 화면(맵) 좌표 (픽셀)를 월드 좌표 (미터)로 변환\n * @param {number} mapX - 화면 좌표 X\n * @param {number} mapY - 화면 좌표 Y\n * @param {number} imageNaturalWidth - 자연 크기의 맵 너비 (픽셀)\n * @param {number} imageNaturalHeight - 자연 크기의 맵 높이 (픽셀)\n * @returns {object} - 월드 좌표 {x, y}\n */\nexport const mapToWorld = (mapX, mapY, imageNaturalWidth, imageNaturalHeight) => {\n  const worldX = mapX * mapResolution + mapOrigin[0];\n  const worldY = (imageNaturalHeight - mapY) * mapResolution + mapOrigin[1];\n  return {\n    x: worldX,\n    y: worldY\n  };\n};","map":{"version":3,"names":["mapResolution","mapOrigin","worldToMap","worldX","worldY","imageNaturalWidth","imageNaturalHeight","mapX","mapY","x","y","mapToWorld"],"sources":["/home/ketgintern/Desktop/frontend/src/utils/coordinateUtils.js"],"sourcesContent":["const mapResolution = 0.05; // 미터 당 픽셀 (meters per pixel)\nconst mapOrigin = [-10.0, -10.0]; // 맵의 원점 좌표 (x, y)\n\n/**\n * 월드 좌표 (미터)를 화면(맵) 좌표 (픽셀)로 변환\n * @param {number} worldX - 월드 좌표 X\n * @param {number} worldY - 월드 좌표 Y\n * @param {number} imageNaturalWidth - 자연 크기의 맵 너비 (픽셀)\n * @param {number} imageNaturalHeight - 자연 크기의 맵 높이 (픽셀)\n * @returns {object} - 화면 좌표 {x, y}\n */\nexport const worldToMap = (worldX, worldY, imageNaturalWidth, imageNaturalHeight) => {\n  const mapX = (worldX - mapOrigin[0]) / mapResolution;\n  const mapY = imageNaturalHeight - (worldY - mapOrigin[1]) / mapResolution; // Y 좌표 반전\n\n  return { x: mapX, y: mapY };\n};\n\n/**\n * 화면(맵) 좌표 (픽셀)를 월드 좌표 (미터)로 변환\n * @param {number} mapX - 화면 좌표 X\n * @param {number} mapY - 화면 좌표 Y\n * @param {number} imageNaturalWidth - 자연 크기의 맵 너비 (픽셀)\n * @param {number} imageNaturalHeight - 자연 크기의 맵 높이 (픽셀)\n * @returns {object} - 월드 좌표 {x, y}\n */\nexport const mapToWorld = (mapX, mapY, imageNaturalWidth, imageNaturalHeight) => {\n  const worldX = mapX * mapResolution + mapOrigin[0];\n  const worldY = (imageNaturalHeight - mapY) * mapResolution + mapOrigin[1];\n\n  return { x: worldX, y: worldY };\n};\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,IAAI,CAAC,CAAC;AAC5B,MAAMC,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,kBAAkB,KAAK;EACnF,MAAMC,IAAI,GAAG,CAACJ,MAAM,GAAGF,SAAS,CAAC,CAAC,CAAC,IAAID,aAAa;EACpD,MAAMQ,IAAI,GAAGF,kBAAkB,GAAG,CAACF,MAAM,GAAGH,SAAS,CAAC,CAAC,CAAC,IAAID,aAAa,CAAC,CAAC;;EAE3E,OAAO;IAAES,CAAC,EAAEF,IAAI;IAAEG,CAAC,EAAEF;EAAK,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,UAAU,GAAGA,CAACJ,IAAI,EAAEC,IAAI,EAAEH,iBAAiB,EAAEC,kBAAkB,KAAK;EAC/E,MAAMH,MAAM,GAAGI,IAAI,GAAGP,aAAa,GAAGC,SAAS,CAAC,CAAC,CAAC;EAClD,MAAMG,MAAM,GAAG,CAACE,kBAAkB,GAAGE,IAAI,IAAIR,aAAa,GAAGC,SAAS,CAAC,CAAC,CAAC;EAEzE,OAAO;IAAEQ,CAAC,EAAEN,MAAM;IAAEO,CAAC,EAAEN;EAAO,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}