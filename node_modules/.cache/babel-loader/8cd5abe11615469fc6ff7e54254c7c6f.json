{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './TestPage.css'; // CSS 파일을 불러옵니다\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태 관리\n  const [selectedRobot, setSelectedRobot] = useState(null); // 선택된 로봇 정보 저장\n  const [selectedTask, setSelectedTask] = useState(''); // 선택된 작업 저장\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']); // 드롭다운에 표시할 작업들\n  const canvasRef = useRef(null);\n  const [mapImage, setMapImage] = useState(null); // 맵 이미지 객체 저장\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [dragging, setDragging] = useState(false); // 드래그 상태 관리\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  }); // 드래그 위치 상태 저장\n  const [lastMousePos, setLastMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      fetchRobots(); // 로봇 리스트 API 호출\n      fetchAllTasks(); // 모든 작업 로그 API 호출\n    };\n    fetchData();\n\n    // WebSocket 연결 설정\n    const socket = new WebSocket('ws://your-websocket-url'); // WebSocket 주소를 설정하세요\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n    socket.onmessage = event => {\n      const updatedRobots = JSON.parse(event.data);\n      setRobots(updatedRobots); // WebSocket으로 받은 데이터를 로봇 상태로 설정\n    };\n    socket.onerror = error => {\n      console.error('WebSocket 오류:', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n    return () => {\n      socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n    };\n  }, []);\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login'; // 토큰이 없으면 로그인 페이지로 리디렉션\n      return null;\n    }\n    return token;\n  };\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapImage(img); // 이미지 객체 저장\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n        drawMap(img, 0, 0); // 초기 이미지를 그리기\n      };\n      img.onerror = err => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n  const fetchAllTasks = async () => {\n    console.log('모든 작업 로그 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchAllTasks 종료');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n  const fetchRobots = async () => {\n    console.log('로봇 정보 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchRobots 종료');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n  const toggleExpand = robotId => {\n    if (expandedRobotId === robotId) {\n      setExpandedRobotId(null);\n    } else {\n      setExpandedRobotId(robotId);\n    }\n  };\n  const openPopup = robot => {\n    setSelectedRobot(robot);\n    setIsPopupOpen(true);\n  };\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  const handleTaskChange = event => {\n    setSelectedTask(event.target.value); // 드롭다운에서 선택된 작업 저장\n  };\n  const drawMap = (image, offsetX, offsetY) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // 이미지 그리기\n    ctx.drawImage(image, offsetX,\n    // 드래그한 X 좌표 반영\n    offsetY,\n    // 드래그한 Y 좌표 반영\n    image.width, image.height);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleMouseMove = e => {\n    if (dragging && mapImage) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n      const newOffsetX = dragOffset.x + deltaX;\n      const newOffsetY = dragOffset.y + deltaY;\n\n      // 이미지가 캔버스 영역을 벗어나지 않도록 제한\n      const limitedX = Math.min(0, Math.max(canvasRef.current.width - mapImage.width, newOffsetX));\n      const limitedY = Math.min(0, Math.max(canvasRef.current.height - mapImage.height, newOffsetY));\n      drawMap(mapImage, limitedX, limitedY);\n      setDragOffset({\n        x: limitedX,\n        y: limitedY\n      });\n      setLastMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const handleMouseLeave = () => {\n    setDragging(false);\n  };\n  const formatDate = date => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n  useEffect(() => {\n    if (mapUrl && mapDimensions.width && mapDimensions.height) {\n      drawMap(mapImage, dragOffset.x, dragOffset.y);\n    }\n  }, [mapUrl, robots, mapDimensions]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: \"800\" // 캔버스 크기를 고정 또는 반응형으로 설정\n    ,\n    height: \"600\",\n    className: \"map-canvas\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, \"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uBD07 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, robots.length > 0 ? robots.map(robot => {\n    var _robot$status, _robot$status2, _robot$status3;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: robot._id,\n      className: \"robot-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, \"\\uC774\\uB984:\"), \" \", robot.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"\\uC0C1\\uD0DC:\"), \" \", ((_robot$status = robot.status) === null || _robot$status === void 0 ? void 0 : _robot$status.state) || 'Unknown'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }, \"\\uBC30\\uD130\\uB9AC:\"), \" \", ((_robot$status2 = robot.status) === null || _robot$status2 === void 0 ? void 0 : _robot$status2.battery) || 'N/A', \"%\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => toggleExpand(robot._id),\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, expandedRobotId === robot._id ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 58\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 100\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `robot-details ${expandedRobotId === robot._id ? 'expanded' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 24\n      }\n    }, \"IP:\"), \" \", robot.ip), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 24\n      }\n    }, \"\\uC704\\uCE58:\"), \" x: \", robot.location.x, \", y: \", robot.location.y), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 24\n      }\n    }, \"\\uC18D\\uB3C4:\"), \" \", ((_robot$status3 = robot.status) === null || _robot$status3 === void 0 ? void 0 : _robot$status3.speed) || 'N/A', \" m/s\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, \"job\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => openPopup(robot),\n      style: {\n        background: 'none',\n        border: '1px solid #ccc',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 23\n      }\n    }, \"+\"))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, \"\\uC5F0\\uACB0\\uB41C \\uB85C\\uBD07\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))), isPopupOpen && selectedRobot && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC5C5 \\uC120\\uD0DD - \", selectedRobot.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedTask,\n    onChange: handleTaskChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, \"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"), availableTasks.map((task, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, task))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"popup-close-button\",\n    onClick: closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, \"\\uB2EB\\uAE30\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-log-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '80%',\n      overflowY: 'scroll',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"task-log-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07 IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uD0DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uC791 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, \"\\uC885\\uB8CC \\uC2DC\\uAC04\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, task.robotIp), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, task.taskType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, formatDate(task.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, formatDate(task.endTime)))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    style: {\n      textAlign: 'center',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))))));\n}\nexport default TestPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","LogoutButton","UserInfo","axios","TestPage","mapUrl","setMapUrl","robots","setRobots","tasks","setTasks","isPopupOpen","setIsPopupOpen","selectedRobot","setSelectedRobot","selectedTask","setSelectedTask","availableTasks","setAvailableTasks","canvasRef","mapImage","setMapImage","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","dragging","setDragging","dragOffset","setDragOffset","x","y","lastMousePos","setLastMousePos","fetchData","fetchMapMetadata","fetchMonitoredMap","fetchRobots","fetchAllTasks","socket","WebSocket","onopen","console","log","onmessage","event","updatedRobots","JSON","parse","data","onerror","error","onclose","close","getToken","token","localStorage","getItem","alert","window","location","href","response","get","headers","Authorization","responseType","url","URL","createObjectURL","img","Image","src","onload","drawMap","err","metadata","resolution","parseFloat","match","toggleExpand","robotId","expandedRobotId","setExpandedRobotId","openPopup","robot","closePopup","handleTaskChange","target","value","image","offsetX","offsetY","canvas","current","ctx","getContext","clearRect","drawImage","handleMouseDown","e","clientX","clientY","handleMouseMove","deltaX","deltaY","newOffsetX","newOffsetY","limitedX","Math","min","max","limitedY","handleMouseUp","handleMouseLeave","formatDate","date","parsedDate","Date","isNaN","toLocaleString","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","listStyleType","padding","length","map","_robot$status","_robot$status2","_robot$status3","key","_id","display","justifyContent","alignItems","name","status","state","battery","onClick","background","border","cursor","fontSize","ip","speed","stopPropagation","onChange","task","index","overflowY","robotIp","taskType","startTime","endTime","colSpan","textAlign"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './TestPage.css'; // CSS 파일을 불러옵니다\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태 관리\n  const [selectedRobot, setSelectedRobot] = useState(null); // 선택된 로봇 정보 저장\n  const [selectedTask, setSelectedTask] = useState(''); // 선택된 작업 저장\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']); // 드롭다운에 표시할 작업들\n  const canvasRef = useRef(null);\n  const [mapImage, setMapImage] = useState(null); // 맵 이미지 객체 저장\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n  const [dragging, setDragging] = useState(false); // 드래그 상태 관리\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 }); // 드래그 위치 상태 저장\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      fetchRobots(); // 로봇 리스트 API 호출\n      fetchAllTasks(); // 모든 작업 로그 API 호출\n    };\n    fetchData();\n\n    // WebSocket 연결 설정\n    const socket = new WebSocket('ws://your-websocket-url'); // WebSocket 주소를 설정하세요\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n\n    socket.onmessage = (event) => {\n      const updatedRobots = JSON.parse(event.data);\n      setRobots(updatedRobots); // WebSocket으로 받은 데이터를 로봇 상태로 설정\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket 오류:', error);\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n\n    return () => {\n      socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n    };\n  }, []);\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login'; // 토큰이 없으면 로그인 페이지로 리디렉션\n      return null;\n    }\n    return token;\n  };\n\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapImage(img); // 이미지 객체 저장\n        setMapDimensions({ width: img.width, height: img.height });\n        drawMap(img, 0, 0); // 초기 이미지를 그리기\n      };\n      img.onerror = (err) => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n\n  const fetchAllTasks = async () => {\n    console.log('모든 작업 로그 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchAllTasks 종료');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n\n  const fetchRobots = async () => {\n    console.log('로봇 정보 가져오는 중');\n    const token = getToken();\n    if (!token) {\n      console.log('토큰이 없어 fetchRobots 종료');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n\n  const toggleExpand = (robotId) => {\n    if (expandedRobotId === robotId) {\n      setExpandedRobotId(null);\n    } else {\n      setExpandedRobotId(robotId);\n    }\n  };\n\n  const openPopup = (robot) => {\n    setSelectedRobot(robot);\n    setIsPopupOpen(true);\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n\n  const handleTaskChange = (event) => {\n    setSelectedTask(event.target.value); // 드롭다운에서 선택된 작업 저장\n  };\n\n  const drawMap = (image, offsetX, offsetY) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // 이미지 그리기\n    ctx.drawImage(\n      image,\n      offsetX, // 드래그한 X 좌표 반영\n      offsetY, // 드래그한 Y 좌표 반영\n      image.width,\n      image.height\n    );\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging && mapImage) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n      const newOffsetX = dragOffset.x + deltaX;\n      const newOffsetY = dragOffset.y + deltaY;\n      \n      // 이미지가 캔버스 영역을 벗어나지 않도록 제한\n      const limitedX = Math.min(0, Math.max(canvasRef.current.width - mapImage.width, newOffsetX));\n      const limitedY = Math.min(0, Math.max(canvasRef.current.height - mapImage.height, newOffsetY));\n\n      drawMap(mapImage, limitedX, limitedY);\n      setDragOffset({ x: limitedX, y: limitedY });\n      setLastMousePos({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const handleMouseLeave = () => {\n    setDragging(false);\n  };\n\n  const formatDate = (date) => {\n    const parsedDate = new Date(date);\n    return isNaN(parsedDate) ? 'N/A' : parsedDate.toLocaleString();\n  };\n\n  useEffect(() => {\n    if (mapUrl && mapDimensions.width && mapDimensions.height) {\n      drawMap(mapImage, dragOffset.x, dragOffset.y);\n    }\n  }, [mapUrl, robots, mapDimensions]);\n\n  return (\n    <div className=\"test-page-container\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <div className=\"main-content\">\n        {/* 좌측 - 지도 캔버스 */}\n        <div className=\"map-container\">\n          {mapUrl ? (\n            <canvas\n              ref={canvasRef}\n              width=\"800\" // 캔버스 크기를 고정 또는 반응형으로 설정\n              height=\"600\"\n              className=\"map-canvas\"\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={handleMouseLeave}\n            ></canvas>\n          ) : (\n            <p>지도를 불러오는 중...</p>\n          )}\n        </div>\n\n        {/* 우측 - 로봇 리스트 */}\n        <div className=\"robot-list-container\">\n          <h3>로봇 리스트</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.length > 0 ? (\n              robots.map((robot) => (\n                <li key={robot._id} className=\"robot-list-item\">\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span>\n                      <strong>이름:</strong> {robot.name}\n                    </span>\n                    <span>\n                      <strong>상태:</strong> {robot.status?.state || 'Unknown'}\n                    </span>\n                    <span>\n                      <strong>배터리:</strong> {robot.status?.battery || 'N/A'}%\n                    </span>\n                    <button\n                      onClick={() => toggleExpand(robot._id)}\n                      style={{ background: 'none', border: 'none', cursor: 'pointer', fontSize: '16px' }}\n                    >\n                      {expandedRobotId === robot._id ? ( <i className=\"fas fa-chevron-up\"></i>) : (<i className=\"fas fa-chevron-down\"></i> )}\n                    </button>\n                  </div>\n                  {/* 부드럽게 열리는 애니메이션 적용 */}\n                  <div className={`robot-details ${expandedRobotId === robot._id ? 'expanded' : ''}`}>\n                    <p><strong>IP:</strong> {robot.ip}</p>\n                    <p><strong>위치:</strong> x: {robot.location.x}, y: {robot.location.y}</p>\n                    <p><strong>속도:</strong> {robot.status?.speed || 'N/A'} m/s</p>\n                    <p>\n                      <strong>job</strong>\n                      <button onClick={() => openPopup(robot)} style={{ background: 'none', border: '1px solid #ccc', cursor: 'pointer', fontSize: '16px' }}>+</button>\n                    </p>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <p>연결된 로봇이 없습니다.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {/* 팝업 창 */}\n      {isPopupOpen && selectedRobot && (\n        <div className=\"popup-overlay\" onClick={closePopup}>\n          <div className=\"popup-container\" onClick={(e) => e.stopPropagation()}>\n            <h2>작업 선택 - {selectedRobot.name}</h2>\n            <div>\n              <label>\n                작업을 선택하세요:\n                <select value={selectedTask} onChange={handleTaskChange}>\n                  <option value=\"\">선택하세요</option>\n                  {availableTasks.map((task, index) => (\n                    <option key={index} value={task}>\n                      {task}\n                    </option>\n                  ))}\n                </select>\n              </label>\n            </div>\n            <br />\n            <button className=\"popup-close-button\" onClick={closePopup}>닫기</button>\n          </div>\n        </div>\n      )}\n\n      {/* 작업 로그 섹션 */}\n      <div className=\"task-log-container\">\n        <h3>작업 로그</h3>\n        <div style={{ height: '80%', overflowY: 'scroll', border: '1px solid #ccc' }}>\n          <table className=\"task-log-table\">\n            <thead>\n              <tr>\n                <th>작업 이름</th>\n                <th>로봇 IP</th>\n                <th>작업 유형</th>\n                <th>상태</th>\n                <th>시작 시간</th>\n                <th>종료 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                  <tr key={index}>\n                    <td>{task.name}</td>\n                    <td>{task.robotIp}</td>\n                    <td>{task.taskType}</td>\n                    <td>{task.status}</td>\n                    <td>{formatDate(task.startTime)}</td>\n                    <td>{formatDate(task.endTime)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" style={{ textAlign: 'center', padding: '10px' }}>작업 로그가 없습니다.</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}