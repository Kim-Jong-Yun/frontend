{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js\";\n// WebcamStream.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nconst WebcamStream = ({\n  selectedRobot\n}) => {\n  const videoRef = useRef(null);\n  const [peer, setPeer] = useState(null);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    if (selectedRobot) {\n      socketRef.current = io('http://172.30.1.40:7001'); // WebRTC 서버 주소\n\n      const peerConnection = new RTCPeerConnection();\n      peerConnection.onicecandidate = event => {\n        if (event.candidate) {\n          socketRef.current.emit('candidate', event.candidate);\n        }\n      };\n      peerConnection.ontrack = event => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n        }\n      };\n      socketRef.current.on('signal', async data => {\n        if (data.type === 'offer') {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n          const answer = await peerConnection.createAnswer();\n          await peerConnection.setLocalDescription(answer);\n          socketRef.current.emit('signal', peerConnection.localDescription);\n        } else if (data.type === 'answer') {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n        }\n      });\n      socketRef.current.on('candidate', async candidate => {\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      socketRef.current.emit('join');\n      setPeer(peerConnection);\n      return () => {\n        peerConnection.close();\n        socketRef.current.disconnect();\n      };\n    }\n  }, [selectedRobot]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n};\nexport default WebcamStream;","map":{"version":3,"names":["React","useEffect","useRef","useState","io","WebcamStream","selectedRobot","videoRef","peer","setPeer","socketRef","current","peerConnection","RTCPeerConnection","onicecandidate","event","candidate","emit","ontrack","srcObject","streams","on","data","type","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","localDescription","addIceCandidate","RTCIceCandidate","close","disconnect","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/components/WebcamStream.js"],"sourcesContent":["// WebcamStream.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst WebcamStream = ({ selectedRobot }) => {\n    const videoRef = useRef(null);\n    const [peer, setPeer] = useState(null);\n    const socketRef = useRef(null);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            socketRef.current = io('http://172.30.1.40:7001'); // WebRTC 서버 주소\n\n            const peerConnection = new RTCPeerConnection();\n\n            peerConnection.onicecandidate = (event) => {\n                if (event.candidate) {\n                    socketRef.current.emit('candidate', event.candidate);\n                }\n            };\n\n            peerConnection.ontrack = (event) => {\n                if (videoRef.current) {\n                    videoRef.current.srcObject = event.streams[0];\n                }\n            };\n\n            socketRef.current.on('signal', async (data) => {\n                if (data.type === 'offer') {\n                    await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n                    const answer = await peerConnection.createAnswer();\n                    await peerConnection.setLocalDescription(answer);\n                    socketRef.current.emit('signal', peerConnection.localDescription);\n                } else if (data.type === 'answer') {\n                    await peerConnection.setRemoteDescription(new RTCSessionDescription(data));\n                }\n            });\n\n            socketRef.current.on('candidate', async (candidate) => {\n                await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n            });\n\n            socketRef.current.emit('join');\n\n            setPeer(peerConnection);\n\n            return () => {\n                peerConnection.close();\n                socketRef.current.disconnect();\n            };\n        }\n    }, [selectedRobot]);\n\n    return (\n        <div>\n            <video ref={videoRef} autoPlay playsInline />\n        </div>\n    );\n};\n\nexport default WebcamStream;\n\n\n\n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EACxC,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMO,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,IAAIK,aAAa,EAAE;MACfI,SAAS,CAACC,OAAO,GAAGP,EAAE,CAAC,yBAAyB,CAAC,CAAC,CAAC;;MAEnD,MAAMQ,cAAc,GAAG,IAAIC,iBAAiB,CAAC,CAAC;MAE9CD,cAAc,CAACE,cAAc,GAAIC,KAAK,IAAK;QACvC,IAAIA,KAAK,CAACC,SAAS,EAAE;UACjBN,SAAS,CAACC,OAAO,CAACM,IAAI,CAAC,WAAW,EAAEF,KAAK,CAACC,SAAS,CAAC;QACxD;MACJ,CAAC;MAEDJ,cAAc,CAACM,OAAO,GAAIH,KAAK,IAAK;QAChC,IAAIR,QAAQ,CAACI,OAAO,EAAE;UAClBJ,QAAQ,CAACI,OAAO,CAACQ,SAAS,GAAGJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;QACjD;MACJ,CAAC;MAEDV,SAAS,CAACC,OAAO,CAACU,EAAE,CAAC,QAAQ,EAAE,MAAOC,IAAI,IAAK;QAC3C,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;UACvB,MAAMX,cAAc,CAACY,oBAAoB,CAAC,IAAIC,qBAAqB,CAACH,IAAI,CAAC,CAAC;UAC1E,MAAMI,MAAM,GAAG,MAAMd,cAAc,CAACe,YAAY,CAAC,CAAC;UAClD,MAAMf,cAAc,CAACgB,mBAAmB,CAACF,MAAM,CAAC;UAChDhB,SAAS,CAACC,OAAO,CAACM,IAAI,CAAC,QAAQ,EAAEL,cAAc,CAACiB,gBAAgB,CAAC;QACrE,CAAC,MAAM,IAAIP,IAAI,CAACC,IAAI,KAAK,QAAQ,EAAE;UAC/B,MAAMX,cAAc,CAACY,oBAAoB,CAAC,IAAIC,qBAAqB,CAACH,IAAI,CAAC,CAAC;QAC9E;MACJ,CAAC,CAAC;MAEFZ,SAAS,CAACC,OAAO,CAACU,EAAE,CAAC,WAAW,EAAE,MAAOL,SAAS,IAAK;QACnD,MAAMJ,cAAc,CAACkB,eAAe,CAAC,IAAIC,eAAe,CAACf,SAAS,CAAC,CAAC;MACxE,CAAC,CAAC;MAEFN,SAAS,CAACC,OAAO,CAACM,IAAI,CAAC,MAAM,CAAC;MAE9BR,OAAO,CAACG,cAAc,CAAC;MAEvB,OAAO,MAAM;QACTA,cAAc,CAACoB,KAAK,CAAC,CAAC;QACtBtB,SAAS,CAACC,OAAO,CAACsB,UAAU,CAAC,CAAC;MAClC,CAAC;IACL;EACJ,CAAC,EAAE,CAAC3B,aAAa,CAAC,CAAC;EAEnB,oBACIN,KAAA,CAAAkC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIxC,KAAA,CAAAkC,aAAA;IAAOO,GAAG,EAAElC,QAAS;IAACmC,QAAQ;IAACC,WAAW;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3C,CAAC;AAEd,CAAC;AAED,eAAenC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}