{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\n// src/components/MapManage/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nimport NodeList from './NodeList'; // NodeList 컴포넌트 임포트\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null); // 선택된 맵 상태\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false); // 모니터링 설정 체크박스 상태\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false); // 업로드 팝업 상태\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // 수정 팝업 상태\n  const [isCreatingNode, setIsCreatingNode] = useState(false); // 노드 생성 모드\n  const [nodeX, setNodeX] = useState(null); // X 좌표\n  const [nodeY, setNodeY] = useState(null); // Y 좌표\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false); // 노드 팝업 상태\n  const canvasRef = useRef(null); // 캔버스 참조\n  const mapImageRef = useRef(null); // 지도 이미지 참조\n  const [nodes, setNodes] = useState([]); // 노드 목록 저장\n  const [isDeletingNode, setIsDeletingNode] = useState(false);\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  // Hover 상태 관리\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  // 맵 목록을 서버에서 가져오는 함수\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n      alert('Failed to fetch maps.');\n    }\n  };\n\n  // 맵을 선택했을 때 호출되는 함수\n  const handleSelectMap = async map => {\n    setSelectedMap(map); // 맵 선택 상태 업데이트\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false); // 모니터링 지도 상태 설정\n\n    // 맵 선택 후에 노드를 비동기로 가져오기\n    await fetchNodes(map._id); // 노드 데이터를 비동기로 가져옴\n\n    // 맵 이미지 가져오기\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl); // 이미지 설정\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n      alert('Failed to fetch map image.');\n    }\n  };\n\n  // 노드 목록을 서버에서 가져오는 함수\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data); // 노드 리스트 상태 업데이트\n      } else {\n        setNodes([]); // 실패 시 빈 배열로 초기화\n      }\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n      setNodes([]); // 오류 발생 시에도 빈 배열로 초기화\n      alert('Failed to fetch nodes.');\n    }\n  };\n\n  // 이미지 로드 시 호출되는 함수 (지도 이미지를 캔버스에 그리기)\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n\n      // 캔버스 크기 조정\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n\n      // 지도 이미지를 캔버스에 그리기\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawNodes(); // 노드 그리기\n    };\n  };\n\n  // 노드를 캔버스에 그리는 함수\n  const drawNodes = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n    nodes.forEach(node => {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n\n      // 노드를 빨간 정사각형으로 그리기\n      const size = 10; // 정사각형의 크기\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size); // 중심을 기준으로 그리기\n    });\n  };\n\n  // 이미지 로드 후 캔버스에 지도 그리기\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n  }, [mapImage]);\n\n  // 노드 변경 시마다 노드를 다시 그리기\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawNodes(); // 노드를 다시 그리기\n    }\n  }, [nodes]);\n\n  // 마우스가 노드 캔버스 위를 움직일 때 노드 호버 상태 업데이트\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    let foundNode = null;\n    for (let node of nodes) {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 5) {\n        // 노드 반경 5px 내에 있을 때\n        foundNode = node;\n        break;\n      }\n    }\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else {\n      setHoveredNode(null);\n    }\n  };\n\n  // 마우스가 캔버스를 벗어났을 때 호버 상태 초기화\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n  };\n\n  // 맵 이미지 클릭 시 노드 생성 또는 삭제\n  const handleMapClick = async e => {\n    if (!selectedMap) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n    const {\n      x,\n      y\n    } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n    if (isCreatingNode) {\n      // 노드 생성 로직\n      setNodeX(x);\n      setNodeY(y);\n      setIsCreatingNode(false);\n      setIsNodePopupOpen(true);\n      document.body.style.cursor = 'default';\n    } else if (isDeletingNode) {\n      // 클릭한 위치 근처에 있는 노드를 찾아 삭제\n      let nodeToDelete = null;\n      for (let node of nodes) {\n        const {\n          x: nodeX,\n          y: nodeY\n        } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n        const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n        if (distance < 5) {\n          nodeToDelete = node;\n          break;\n        }\n      }\n      if (nodeToDelete) {\n        const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n        if (confirmDelete) {\n          try {\n            const token = localStorage.getItem('token');\n            await axios.put(`http://172.30.1.15:5557/map/node/${nodeToDelete._id}`, {}, {\n              // 수정된 부분: 두 번째 인자를 빈 객체로\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            alert('노드가 성공적으로 삭제되었습니다.');\n            fetchNodes(selectedMap._id); // 삭제 후 노드 목록 갱신\n            setIsDeletingNode(false); // 삭제 후 삭제 모드 종료\n          } catch (error) {\n            console.error('노드 삭제 중 오류 발생:', error);\n            alert('노드 삭제에 실패했습니다.');\n          }\n        }\n      } else {\n        alert('해당 위치에 노드를 찾을 수 없습니다.');\n      }\n    }\n  };\n\n  // 노드 생성을 제출하는 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    if (nodeName.trim().length === 0) {\n      alert('Node name cannot be empty.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Node created successfully.');\n      setIsNodePopupOpen(false);\n      setNodeName(''); // 입력 필드 초기화\n      setNodeX(null);\n      setNodeY(null);\n      fetchNodes(selectedMap._id); // 노드 목록 갱신\n    } catch (error) {\n      console.error('Error creating node:', error);\n      alert('Failed to create node.');\n    }\n  };\n\n  // 맵 삭제하는 함수\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null); // 선택된 맵을 삭제한 경우 초기화\n        setMapImage(null); // 맵 이미지 초기화\n        setNodes([]); // 노드 목록 초기화\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  // 맵 파일 변경 시 호출되는 함수\n  const handleFileChange = e => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 시 호출되는 함수\n  const handleYamlFileChange = e => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 맵 업데이트를 처리하는 함수\n  const handleUpdateMap = async e => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored // 모니터링 지도 상태 포함\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Map updated successfully');\n      setIsEditPopupOpen(false); // 수정 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating map:', error);\n      alert(`Error updating map: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n\n  // 맵 업로드를 처리하는 함수\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false); // 업로드 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n      alert('Error uploading map.');\n    }\n  };\n\n  // 맵 수정 팝업을 여는 함수\n  const openEditPopup = map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false); // 모니터링 상태 설정\n    setIsEditPopupOpen(true); // 수정 팝업 열기\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('Please select a map first.');\n      return;\n    }\n    setIsCreatingNode(true);\n    document.body.style.cursor = 'crosshair'; // 마우스 커서 십자가 모양 변경\n  };\n\n  // 이미지 로드 시 실제 크기와 렌더링된 크기를 저장하는 함수\n  const handleImageLoad = e => {\n    const img = e.target;\n    setImageNaturalWidth(img.naturalWidth);\n    setImageNaturalHeight(img.naturalHeight);\n    console.log(`Image Loaded: Natural (${img.naturalWidth}, ${img.naturalHeight})`);\n  };\n\n  // URL 객체 해제를 위한 useEffect\n  useEffect(() => {\n    return () => {\n      if (mapImage) {\n        URL.revokeObjectURL(mapImage);\n      }\n    };\n  }, [mapImage]);\n\n  // 노드 삭제 모드를 활성화하는 함수\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    document.body.style.cursor = 'not-allowed'; // 커서를 삭제 모드로 변경\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNodeMode,\n    className: \"create-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }), \" Create Node\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDeleteNodeMode,\n    className: \"delete-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }), \" Delete Node\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, \"Map List\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${(selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id) === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 15\n    }\n  }, selectedMap.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-and-node-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-container\",\n    style: {\n      position: 'relative'\n    },\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    className: \"map-canvas\",\n    style: {\n      cursor: isCreatingNode ? 'crosshair' : 'default'\n    },\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 15\n    }\n  }, \"Select a map to view its image\")), /*#__PURE__*/React.createElement(NodeList, {\n    nodes: nodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 11\n    }\n  }), \" \")), isNodePopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 11\n    }\n  }, \"Create Node\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 11\n    }\n  }, \"X: \", nodeX.toFixed(2), \", Y: \", nodeY.toFixed(2)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"Enter node name\",\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitNode,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsNodePopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 11\n    }\n  }, \"Upload Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"Map Description\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 13\n    }\n  }, \"Map File (.pgm, .png, .jpg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }, \"YAML File (.yaml)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 15\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 11\n    }\n  }, \"Edit Map\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"Map Name\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"Map Description\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginTop: '10px',\n      color: '#333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isMonitored,\n    onChange: e => setIsMonitored(e.target.checked),\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 15\n    }\n  }), \"\\uBAA8\\uB2C8\\uD130\\uB9C1 \\uB9F5\\uC73C\\uB85C \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), hoveredNode && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip\",\n    style: {\n      position: 'fixed',\n      top: `${tooltipPosition.y + 10}px`,\n      left: `${tooltipPosition.x + 10}px`,\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      color: 'white',\n      padding: '5px 10px',\n      borderRadius: '4px',\n      pointerEvents: 'none',\n      zIndex: 1000,\n      fontSize: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }\n  }, hoveredNode.name));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faEdit","faPlus","Navbar","LogoutButton","UserInfo","worldToMap","mapToWorld","NodeList","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","isMonitored","setIsMonitored","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isCreatingNode","setIsCreatingNode","nodeX","setNodeX","nodeY","setNodeY","nodeName","setNodeName","isNodePopupOpen","setIsNodePopupOpen","canvasRef","mapImageRef","nodes","setNodes","isDeletingNode","setIsDeletingNode","imageNaturalWidth","setImageNaturalWidth","imageNaturalHeight","setImageNaturalHeight","hoveredNode","setHoveredNode","tooltipPosition","setTooltipPosition","x","y","fetchMaps","token","localStorage","getItem","alert","response","get","headers","data","error","console","handleSelectMap","map","name","description","fetchNodes","_id","Authorization","responseType","imageUrl","URL","createObjectURL","mapId","status","loadMapImage","canvas","current","ctx","getContext","Image","src","onload","imgWidth","width","imgHeight","height","drawImage","drawNodes","forEach","node","size","fillStyle","fillRect","handleMouseMove","e","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","foundNode","distance","Math","sqrt","handleMouseLeave","handleMapClick","clickX","clickY","document","body","style","cursor","nodeToDelete","confirmDelete","window","confirm","put","handleSubmitNode","trim","length","post","handleDeleteMap","handleFileChange","target","files","handleYamlFileChange","handleUpdateMap","preventDefault","_error$response","_error$response$data","message","handleUploadMap","formData","FormData","append","openEditPopup","handleCreateNodeMode","handleImageLoad","img","naturalWidth","naturalHeight","log","revokeObjectURL","handleDeleteNodeMode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","key","position","ref","onMouseMove","onMouseLeave","toFixed","type","value","onChange","placeholder","onSubmit","required","accept","marginTop","color","checked","marginRight","backgroundColor","padding","borderRadius","pointerEvents","zIndex","fontSize"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["// src/components/MapManage/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nimport NodeList from './NodeList'; // NodeList 컴포넌트 임포트\n\nfunction Mapmanage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null); // 선택된 맵 상태\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false); // 모니터링 설정 체크박스 상태\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false); // 업로드 팝업 상태\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // 수정 팝업 상태\n  const [isCreatingNode, setIsCreatingNode] = useState(false); // 노드 생성 모드\n  const [nodeX, setNodeX] = useState(null); // X 좌표\n  const [nodeY, setNodeY] = useState(null); // Y 좌표\n  const [nodeName, setNodeName] = useState(''); // 노드 이름\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false); // 노드 팝업 상태\n  const canvasRef = useRef(null); // 캔버스 참조\n  const mapImageRef = useRef(null); // 지도 이미지 참조\n  const [nodes, setNodes] = useState([]); // 노드 목록 저장\n  const [isDeletingNode, setIsDeletingNode] = useState(false);\n\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  // Hover 상태 관리\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  // 맵 목록을 서버에서 가져오는 함수\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n      alert('Failed to fetch maps.');\n    }\n  };\n\n  // 맵을 선택했을 때 호출되는 함수\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map); // 맵 선택 상태 업데이트\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false); // 모니터링 지도 상태 설정\n\n    // 맵 선택 후에 노드를 비동기로 가져오기\n    await fetchNodes(map._id); // 노드 데이터를 비동기로 가져옴\n\n    // 맵 이미지 가져오기\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl); // 이미지 설정\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n      alert('Failed to fetch map image.');\n    }\n  };\n\n  // 노드 목록을 서버에서 가져오는 함수\n  const fetchNodes = async (mapId) => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data); // 노드 리스트 상태 업데이트\n      } else {\n        setNodes([]); // 실패 시 빈 배열로 초기화\n      }\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n      setNodes([]); // 오류 발생 시에도 빈 배열로 초기화\n      alert('Failed to fetch nodes.');\n    }\n  };\n\n  // 이미지 로드 시 호출되는 함수 (지도 이미지를 캔버스에 그리기)\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n\n      // 캔버스 크기 조정\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n\n      // 지도 이미지를 캔버스에 그리기\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawNodes(); // 노드 그리기\n    };\n  };\n\n  // 노드를 캔버스에 그리는 함수\n  const drawNodes = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n\n    nodes.forEach((node) => {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n\n      // 노드를 빨간 정사각형으로 그리기\n      const size = 10; // 정사각형의 크기\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size); // 중심을 기준으로 그리기\n    });\n  };\n\n  // 이미지 로드 후 캔버스에 지도 그리기\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n  }, [mapImage]);\n\n  // 노드 변경 시마다 노드를 다시 그리기\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawNodes(); // 노드를 다시 그리기\n    }\n  }, [nodes]);\n\n  // 마우스가 노드 캔버스 위를 움직일 때 노드 호버 상태 업데이트\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    let foundNode = null;\n\n    for (let node of nodes) {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 5) { // 노드 반경 5px 내에 있을 때\n        foundNode = node;\n        break;\n      }\n    }\n\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({ x: e.clientX, y: e.clientY });\n    } else {\n      setHoveredNode(null);\n    }\n  };\n\n  // 마우스가 캔버스를 벗어났을 때 호버 상태 초기화\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n  };\n\n  // 맵 이미지 클릭 시 노드 생성 또는 삭제\n  const handleMapClick = async (e) => {\n    if (!selectedMap) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    const { x, y } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n\n    if (isCreatingNode) {\n      // 노드 생성 로직\n      setNodeX(x);\n      setNodeY(y);\n      setIsCreatingNode(false);\n      setIsNodePopupOpen(true);\n      document.body.style.cursor = 'default';\n    } else if (isDeletingNode) {\n      // 클릭한 위치 근처에 있는 노드를 찾아 삭제\n      let nodeToDelete = null;\n      for (let node of nodes) {\n        const { x: nodeX, y: nodeY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n        const distance = Math.sqrt((clickX - nodeX) ** 2 + (clickY - nodeY) ** 2);\n        if (distance < 5) {\n          nodeToDelete = node;\n          break;\n        }\n      }\n\n      if (nodeToDelete) {\n        const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n        if (confirmDelete) {\n          try {\n            const token = localStorage.getItem('token');\n            await axios.put(`http://172.30.1.15:5557/map/node/${nodeToDelete._id}`, {}, { // 수정된 부분: 두 번째 인자를 빈 객체로\n              headers: { Authorization: `Bearer ${token}` },\n            });\n            alert('노드가 성공적으로 삭제되었습니다.');\n            fetchNodes(selectedMap._id); // 삭제 후 노드 목록 갱신\n            setIsDeletingNode(false); // 삭제 후 삭제 모드 종료\n          } catch (error) {\n            console.error('노드 삭제 중 오류 발생:', error);\n            alert('노드 삭제에 실패했습니다.');\n          }\n        }\n      } else {\n        alert('해당 위치에 노드를 찾을 수 없습니다.');\n      }\n    }\n  };\n\n  // 노드 생성을 제출하는 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    if (nodeName.trim().length === 0) {\n      alert('Node name cannot be empty.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id,\n      }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('Node created successfully.');\n      setIsNodePopupOpen(false);\n      setNodeName(''); // 입력 필드 초기화\n      setNodeX(null);\n      setNodeY(null);\n      fetchNodes(selectedMap._id); // 노드 목록 갱신\n    } catch (error) {\n      console.error('Error creating node:', error);\n      alert('Failed to create node.');\n    }\n  };\n\n  // 맵 삭제하는 함수\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null); // 선택된 맵을 삭제한 경우 초기화\n        setMapImage(null); // 맵 이미지 초기화\n        setNodes([]); // 노드 목록 초기화\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  // 맵 파일 변경 시 호출되는 함수\n  const handleFileChange = (e) => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 시 호출되는 함수\n  const handleYamlFileChange = (e) => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 맵 업데이트를 처리하는 함수\n  const handleUpdateMap = async (e) => {\n    e.preventDefault();\n\n    if (editName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored // 모니터링 지도 상태 포함\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Map updated successfully');\n      setIsEditPopupOpen(false); // 수정 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error updating map:', error);\n      alert(`Error updating map: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  // 맵 업로드를 처리하는 함수\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n\n    if (uploadName.length < 2) {\n      alert('Map name must be at least 2 characters long.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.15:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Map uploaded successfully');\n      setIsUploadPopupOpen(false); // 업로드 후 팝업 닫기\n      fetchMaps();\n    } catch (error) {\n      console.error('Error uploading map:', error);\n      alert('Error uploading map.');\n    }\n  };\n\n  // 맵 수정 팝업을 여는 함수\n  const openEditPopup = (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false); // 모니터링 상태 설정\n    setIsEditPopupOpen(true); // 수정 팝업 열기\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('Please select a map first.');\n      return;\n    }\n    setIsCreatingNode(true);\n    document.body.style.cursor = 'crosshair'; // 마우스 커서 십자가 모양 변경\n  };\n\n  // 이미지 로드 시 실제 크기와 렌더링된 크기를 저장하는 함수\n  const handleImageLoad = (e) => {\n    const img = e.target;\n    setImageNaturalWidth(img.naturalWidth);\n    setImageNaturalHeight(img.naturalHeight);\n    console.log(`Image Loaded: Natural (${img.naturalWidth}, ${img.naturalHeight})`);\n  };\n\n  // URL 객체 해제를 위한 useEffect\n  useEffect(() => {\n    return () => {\n      if (mapImage) {\n        URL.revokeObjectURL(mapImage);\n      }\n    };\n  }, [mapImage]);\n\n  // 노드 삭제 모드를 활성화하는 함수\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    document.body.style.cursor = 'not-allowed'; // 커서를 삭제 모드로 변경\n  };\n\n  return (\n    <div className=\"map-management-page\">\n      {/* 상단 네비게이션 바 */}\n      <header className=\"map-management-header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      {/* 툴바: 네비게이션 아래에 위치 */}\n      <div className=\"toolbar\">\n        <button onClick={handleCreateNodeMode} className=\"create-node-button\">\n          <FontAwesomeIcon icon={faPlus} /> Create Node\n        </button>\n        <button onClick={handleDeleteNodeMode} className=\"delete-node-button\">\n          <FontAwesomeIcon icon={faEdit} /> Delete Node\n        </button>\n      </div>\n\n      {/* 맵 리스트와 이미지 컨텐츠 */}\n      <div className=\"map-management-content\">\n        {/* 맵 리스트 컨테이너 */}\n        <div className=\"map-list-container\">\n          <h2 className=\"map-list-header\">\n            Map List\n            <button\n              onClick={() => setIsUploadPopupOpen(true)}\n              className=\"add-map-button\"\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </h2>\n          <ul className=\"map-list\">\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={`map-list-item ${selectedMap?._id === map._id ? 'selected-map' : ''}`}\n              >\n                <span\n                  onClick={() => handleSelectMap(map)}\n                  className=\"map-list-item-name\"\n                >\n                  {map.name}\n                </span>\n                <button\n                  onClick={() => openEditPopup(map)}\n                  className=\"edit-map-button\"\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button\n                  onClick={() => handleDeleteMap(map._id)}\n                  className=\"delete-map-button\"\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {selectedMap && (\n            <div className=\"map-description\">\n              <h3>맵 설명</h3>\n              <p>{selectedMap.description}</p>\n            </div>\n          )}\n        </div>\n\n        {/* 지도 이미지와 노드 렌더링 및 노드 리스트 영역 */}\n        <div className=\"map-image-and-node-list\">\n          {/* 지도 이미지와 노드 렌더링 영역 */}\n          <div\n            className=\"map-image-container\"\n            style={{ position: 'relative' }}\n            onClick={handleMapClick}\n          >\n            {mapImage ? (\n              <canvas\n                ref={canvasRef}\n                className=\"map-canvas\"\n                style={{ cursor: isCreatingNode ? 'crosshair' : 'default' }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n              />\n            ) : (\n              <p>Select a map to view its image</p>\n            )}\n          </div>\n\n          {/* 오른쪽에 노드 목록 표시 */}\n          <NodeList nodes={nodes} /> {/* NodeList 컴포넌트 사용 */}\n        </div>\n      </div>\n\n      {/* Node 생성 팝업 */}\n      {isNodePopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Create Node</h3>\n          <p>X: {nodeX.toFixed(2)}, Y: {nodeY.toFixed(2)}</p>\n          <input\n            type=\"text\"\n            value={nodeName}\n            onChange={(e) => setNodeName(e.target.value)}\n            placeholder=\"Enter node name\"\n            className=\"popup-input\"\n          />\n          <div className=\"popup-button-container\">\n            <button onClick={handleSubmitNode} className=\"popup-submit-button\">\n              Create\n            </button>\n            <button\n              onClick={() => setIsNodePopupOpen(false)}\n              className=\"popup-cancel-button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Map Upload Popup */}\n      {isUploadPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Upload Map</h3>\n          <form onSubmit={handleUploadMap}>\n            <input\n              type=\"text\"\n              value={uploadName}\n              onChange={(e) => setUploadName(e.target.value)}\n              placeholder=\"Map Name\"\n              required\n              className=\"popup-input\"\n            />\n            <textarea\n              value={uploadDescription}\n              onChange={(e) => setUploadDescription(e.target.value)}\n              placeholder=\"Map Description\"\n              required\n              className=\"popup-textarea\"\n            />\n            <label>Map File (.pgm, .png, .jpg)</label>\n            <input\n              type=\"file\"\n              accept=\".pgm,.png,.jpg\"\n              onChange={handleFileChange}\n              required\n              className=\"popup-file-input\"\n            />\n            <label>YAML File (.yaml)</label>\n            <input\n              type=\"file\"\n              accept=\".yaml\"\n              onChange={handleYamlFileChange}\n              required\n              className=\"popup-file-input\"\n            />\n            <div className=\"popup-button-container\">\n              <button type=\"submit\" className=\"popup-submit-button\">\n                Upload\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setIsUploadPopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Edit Map Popup */}\n      {isEditPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>Edit Map</h3>\n          <form onSubmit={handleUpdateMap}>\n            <input\n              type=\"text\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              placeholder=\"Map Name\"\n              required\n              className=\"popup-input\"\n            />\n            <textarea\n              value={editDescription}\n              onChange={(e) => setEditDescription(e.target.value)}\n              placeholder=\"Map Description\"\n              required\n              className=\"popup-textarea\"\n            />\n            {/* 모니터링 지도 설정 체크박스 추가 */}\n            <label style={{ marginTop: '10px', color: '#333' }}>\n              <input\n                type=\"checkbox\"\n                checked={isMonitored}\n                onChange={(e) => setIsMonitored(e.target.checked)}\n                style={{ marginRight: '10px' }}\n              />\n              모니터링 맵으로 설정\n            </label>\n            <div className=\"popup-button-container\">\n              <button type=\"submit\" className=\"popup-submit-button\">\n                Update\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setIsEditPopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Hover Tooltip */}\n      {hoveredNode && (\n        <div\n          className=\"tooltip\"\n          style={{\n            position: 'fixed',\n            top: `${tooltipPosition.y + 10}px`,\n            left: `${tooltipPosition.x + 10}px`,\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            pointerEvents: 'none',\n            zIndex: 1000,\n            fontSize: '12px',\n          }}\n        >\n          {hoveredNode.name}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Mapmanage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}