{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css'; // CSS 파일 import\n\nfunction MapManagementPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isAddingNode, setIsAddingNode] = useState(false);\n  const [nodeCoordinates, setNodeCoordinates] = useState({\n    x: 0,\n    y: 0\n  });\n  const canvasRef = useRef(null); // Canvas 참조\n  const imageRef = useRef(new Image()); // 이미지 참조\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n  const handleSelectMap = async map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    fetchNodes(map._id); // 노드 가져오기\n    loadMapImage(map.FileId); // 맵 이미지 가져오기\n  };\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      setSelectedMap(prev => ({\n        ...prev,\n        nodes: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n    }\n  };\n  const loadMapImage = async fileId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${fileId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      imageRef.current.src = imageUrl;\n      imageRef.current.onload = () => {\n        drawNodes(); // 이미지 로드 후 노드 그리기\n      };\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error loading map image:', error);\n    }\n  };\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n  const drawNodes = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!selectedMap || !selectedMap.nodes) return;\n    canvas.width = imageRef.current.width;\n    canvas.height = imageRef.current.height;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(imageRef.current, 0, 0, canvas.width, canvas.height);\n    selectedMap.nodes.forEach(node => {\n      ctx.beginPath();\n      ctx.arc(node.x, node.y, 8, 0, 2 * Math.PI);\n      ctx.fillStyle = 'red';\n      ctx.fill();\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n    });\n  };\n  useEffect(() => {\n    drawNodes();\n  }, [selectedMap]);\n  const handleMapClick = e => {\n    if (!isAddingNode) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNodeCoordinates({\n      x,\n      y\n    });\n    alert(`좌표가 설정되었습니다: (${x}, ${y})`);\n    setIsAddingNode(false);\n  };\n  const handleNodeAdd = async () => {\n    const {\n      x,\n      y\n    } = nodeCoordinates;\n    if (x === 0 && y === 0) {\n      alert('맵을 클릭하여 좌표를 선택해주세요.');\n      return;\n    }\n    const nodeName = prompt('노드 이름을 입력하세요:');\n    if (!nodeName) return;\n    try {\n      const response = await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x,\n        y,\n        mapId: selectedMap._id\n      });\n      alert('Node added successfully!');\n      setSelectedMap(prev => ({\n        ...prev,\n        nodes: [...prev.nodes, response.data.node]\n      }));\n    } catch (error) {\n      console.error('Error adding node:', error);\n      alert('Error adding node');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Map List\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-map-button\",\n    onClick: () => setIsUploadPopupOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: selectedMap && selectedMap._id === map._id ? 'selected' : '',\n    onClick: () => handleSelectMap(map),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditPopupOpen(true),\n    className: \"edit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"node-add-button\",\n    onClick: () => setIsAddingNode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC \\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-node-button\",\n    onClick: handleNodeAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC \\uC800\\uC7A5\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-view\",\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    alt: \"Selected Map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Select a map to view its image\")))));\n}\nexport default MapManagementPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faEdit","Navbar","LogoutButton","UserInfo","MapManagementPage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","isAddingNode","setIsAddingNode","nodeCoordinates","setNodeCoordinates","x","y","canvasRef","imageRef","Image","fetchMaps","token","localStorage","getItem","alert","response","get","headers","Authorization","data","error","console","handleSelectMap","map","name","description","fetchNodes","_id","loadMapImage","FileId","mapId","prev","nodes","fileId","responseType","imageUrl","URL","createObjectURL","current","src","onload","drawNodes","handleDeleteMap","confirmDelete","window","confirm","put","canvas","ctx","getContext","width","height","clearRect","drawImage","forEach","node","beginPath","arc","Math","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","handleMapClick","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleNodeAdd","nodeName","prompt","post","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","key","icon","alt"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport './Mapmanage.css'; // CSS 파일 import\n\nfunction MapManagementPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n  const [isAddingNode, setIsAddingNode] = useState(false);\n  const [nodeCoordinates, setNodeCoordinates] = useState({ x: 0, y: 0 });\n\n  const canvasRef = useRef(null); // Canvas 참조\n  const imageRef = useRef(new Image()); // 이미지 참조\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.15:5557/map/maps', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    fetchNodes(map._id); // 노드 가져오기\n    loadMapImage(map.FileId); // 맵 이미지 가져오기\n  };\n\n  const fetchNodes = async (mapId) => {\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/nodes/${mapId}`);\n      setSelectedMap((prev) => ({ ...prev, nodes: response.data }));\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n    }\n  };\n\n  const loadMapImage = async (fileId) => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.15:5557/map/file/${fileId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      imageRef.current.src = imageUrl;\n\n      imageRef.current.onload = () => {\n        drawNodes(); // 이미지 로드 후 노드 그리기\n      };\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('Error loading map image:', error);\n    }\n  };\n\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('Are you sure you want to delete this map?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.put(`http://172.30.1.15:5557/map/delete/${mapId}`, {}, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('Map deleted successfully');\n      fetchMaps();\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n      }\n    } catch (error) {\n      console.error('Error deleting map:', error);\n      alert('Error deleting map');\n    }\n  };\n\n  const drawNodes = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    if (!selectedMap || !selectedMap.nodes) return;\n\n    canvas.width = imageRef.current.width;\n    canvas.height = imageRef.current.height;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(imageRef.current, 0, 0, canvas.width, canvas.height);\n\n    selectedMap.nodes.forEach((node) => {\n      ctx.beginPath();\n      ctx.arc(node.x, node.y, 8, 0, 2 * Math.PI);\n      ctx.fillStyle = 'red';\n      ctx.fill();\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n    });\n  };\n\n  useEffect(() => {\n    drawNodes();\n  }, [selectedMap]);\n\n  const handleMapClick = (e) => {\n    if (!isAddingNode) return;\n\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    setNodeCoordinates({ x, y });\n    alert(`좌표가 설정되었습니다: (${x}, ${y})`);\n    setIsAddingNode(false);\n  };\n\n  const handleNodeAdd = async () => {\n    const { x, y } = nodeCoordinates;\n    if (x === 0 && y === 0) {\n      alert('맵을 클릭하여 좌표를 선택해주세요.');\n      return;\n    }\n\n    const nodeName = prompt('노드 이름을 입력하세요:');\n    if (!nodeName) return;\n\n    try {\n      const response = await axios.post('http://172.30.1.15:5557/map/nodes', {\n        name: nodeName,\n        x,\n        y,\n        mapId: selectedMap._id,\n      });\n\n      alert('Node added successfully!');\n      setSelectedMap((prev) => ({\n        ...prev,\n        nodes: [...prev.nodes, response.data.node],\n      }));\n    } catch (error) {\n      console.error('Error adding node:', error);\n      alert('Error adding node');\n    }\n  };\n\n  return (\n    <div className=\"map-management\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      <div className=\"content\">\n        <div className=\"map-list\">\n          <h2>\n            Map List\n            <button className=\"add-map-button\" onClick={() => setIsUploadPopupOpen(true)}>\n              +\n            </button>\n          </h2>\n          <ul>\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={selectedMap && selectedMap._id === map._id ? 'selected' : ''}\n                onClick={() => handleSelectMap(map)}\n              >\n                <span>{map.name}</span>\n                <button onClick={() => setIsEditPopupOpen(true)} className=\"edit-button\">\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button onClick={() => handleDeleteMap(map._id)} className=\"delete-button\">\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"map-container\">\n          <div className=\"toolbar\">\n            <button className=\"node-add-button\" onClick={() => setIsAddingNode(true)}>\n              노드 추가\n            </button>\n            <button className=\"confirm-node-button\" onClick={handleNodeAdd}>\n              노드 저장\n            </button>\n          </div>\n\n          <div className=\"map-view\" onClick={handleMapClick}>\n            {mapImage ? (\n              <img src={mapImage} alt=\"Selected Map\" />\n            ) : (\n              <p>Select a map to view its image</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MapManagementPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}