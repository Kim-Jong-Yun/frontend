{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst TaskCreateForm = () => {\n  const [name, setName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const taskData = {\n      name,\n      taskType\n    };\n    try {\n      const response = await axios.post('http://172.30.1.28:6000/task/create', taskData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage('Task created successfully!');\n      setName('');\n      setTaskType('');\n    } catch (error) {\n      setMessage('Failed to create task.');\n      console.error('Error creating task:', error);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task Type\",\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    style: {\n      padding: '10px 20px',\n      borderRadius: '5px',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, isLoading ? 'Creating Task...' : 'Create Task')), message && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: message === 'Failed to create task.' ? 'red' : 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, message));\n};\nexport default TaskCreateForm;","map":{"version":3,"names":["React","useState","axios","TaskCreateForm","name","setName","taskType","setTaskType","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","taskData","response","post","headers","error","console","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","onSubmit","display","flexDirection","alignItems","type","placeholder","value","onChange","target","required","width","padding","borderRadius","border","disabled","backgroundColor","color","cursor"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Robot/RobotManagePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TaskCreateForm = () => {\n  const [name, setName] = useState('');\n  const [taskType, setTaskType] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const taskData = {\n      name,\n      taskType,\n    };\n\n    try {\n      const response = await axios.post('http://172.30.1.28:6000/task/create', taskData, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      setMessage('Task created successfully!');\n      setName('');\n      setTaskType('');\n    } catch (error) {\n      setMessage('Failed to create task.');\n      console.error('Error creating task:', error);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Create New Task</h2>\n      <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Task Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Task Type\"\n          value={taskType}\n          onChange={(e) => setTaskType(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          style={{\n            padding: '10px 20px',\n            borderRadius: '5px',\n            backgroundColor: '#4CAF50',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer',\n          }}\n        >\n          {isLoading ? 'Creating Task...' : 'Create Task'}\n        </button>\n      </form>\n      {message && (\n        <p style={{ color: message === 'Failed to create task.' ? 'red' : 'green' }}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default TaskCreateForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}