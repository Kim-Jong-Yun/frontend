{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/frontend/src/pages/Robot/RobotRegisterPage.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction RobotRegisterPage({\n  onClose\n}) {\n  const [name, setName] = useState('');\n  const [ip, setIp] = useState('');\n  const [model, setModel] = useState('');\n  const [sshUser, setSshUser] = useState(''); // sshUser 상태 추가\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n\n    // 이름 검증: 한글 입력 불가, 최소 길이 확인\n    if (!/^[a-zA-Z0-9-_]+$/.test(name)) {\n      alert('Robot name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n    if (name.length < 2) {\n      alert('Robot name must be at least 2 characters long');\n      return;\n    }\n\n    // 모델명 검증: 한글 입력 불가\n    if (!/^[a-zA-Z0-9-_]+$/.test(model)) {\n      alert('Model name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    // SSH 유저명 검증: 한글 입력 불가\n    if (!/^[a-zA-Z0-9-_]+$/.test(sshUser)) {\n      alert('SSH Username must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    // IP 주소 검증\n    const ipRegex = /^(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)$/;\n    if (!ipRegex.test(ip)) {\n      alert('Please enter a valid IP address (e.g., 192.168.0.1)');\n      return;\n    }\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n    try {\n      await axios.post('http://3.35.87.118:5559/robot/register', {\n        name,\n        ip,\n        model,\n        sshUser\n      },\n      // sshUser 추가\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('Robot registered successfully');\n      setName('');\n      setIp('');\n      setModel('');\n      setSshUser(''); // sshUser 상태 초기화\n\n      // 부모 컴포넌트에서 전달받은 onClose 함수 호출\n      if (onClose) {\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error registering robot:', error);\n      alert('Failed to register robot');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClose,\n    style: {\n      background: 'transparent',\n      border: 'none',\n      fontSize: '18px',\n      cursor: 'pointer',\n      color: '#000'\n    },\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"\\u2716\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot IP\",\n    value: ip,\n    onChange: e => setIp(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Robot Model\",\n    value: model,\n    onChange: e => setModel(e.target.value),\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"SSH Username\",\n    value: sshUser,\n    onChange: e => setSshUser(e.target.value) // sshUser 상태 업데이트\n    ,\n    required: true,\n    style: {\n      width: '300px',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      padding: '10px 20px',\n      margin: '20px 0',\n      borderRadius: '5px',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Register Robot\")));\n}\nexport default RobotRegisterPage;","map":{"version":3,"names":["React","useState","axios","RobotRegisterPage","onClose","name","setName","ip","setIp","model","setModel","sshUser","setSshUser","handleRegister","e","preventDefault","token","localStorage","getItem","test","alert","length","ipRegex","post","headers","error","console","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","onClick","background","border","fontSize","cursor","color","onSubmit","flexDirection","alignItems","type","placeholder","value","onChange","target","required","width","padding","borderRadius","backgroundColor"],"sources":["/home/ketgintern/Desktop/frontend/src/pages/Robot/RobotRegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction RobotRegisterPage({ onClose }) {\n  const [name, setName] = useState('');\n  const [ip, setIp] = useState('');\n  const [model, setModel] = useState('');\n  const [sshUser, setSshUser] = useState(''); // sshUser 상태 추가\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n\n    // 이름 검증: 한글 입력 불가, 최소 길이 확인\n    if (!/^[a-zA-Z0-9-_]+$/.test(name)) {\n      alert('Robot name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    if (name.length < 2) {\n      alert('Robot name must be at least 2 characters long');\n      return;\n    }\n\n    // 모델명 검증: 한글 입력 불가\n    if (!/^[a-zA-Z0-9-_]+$/.test(model)) {\n      alert('Model name must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    // SSH 유저명 검증: 한글 입력 불가\n    if (!/^[a-zA-Z0-9-_]+$/.test(sshUser)) {\n      alert('SSH Username must not contain Korean characters and should only include letters, numbers, hyphens, or underscores.');\n      return;\n    }\n\n    // IP 주소 검증\n    const ipRegex = /^(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)$/;\n    if (!ipRegex.test(ip)) {\n      alert('Please enter a valid IP address (e.g., 192.168.0.1)');\n      return;\n    }\n\n    if (!token) {\n      alert('No token found, please log in again.');\n      return;\n    }\n\n    try {\n      await axios.post(\n        'http://3.35.87.118:5559/robot/register',\n        { name, ip, model, sshUser }, // sshUser 추가\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      alert('Robot registered successfully');\n      setName('');\n      setIp('');\n      setModel('');\n      setSshUser(''); // sshUser 상태 초기화\n\n      // 부모 컴포넌트에서 전달받은 onClose 함수 호출\n      if (onClose) {\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error registering robot:', error);\n      alert('Failed to register robot');\n    }\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      {/* 닫기 버튼 추가 */}\n      <header style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: '20px' }}>\n        <button\n          onClick={onClose}\n          style={{\n            background: 'transparent',\n            border: 'none',\n            fontSize: '18px',\n            cursor: 'pointer',\n            color: '#000',\n          }}\n          aria-label=\"Close\"\n        >\n          ✖\n        </button>\n      </header>\n     \n      <form\n        onSubmit={handleRegister}\n        style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Robot Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Robot IP\"\n          value={ip}\n          onChange={(e) => setIp(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Robot Model\"\n          value={model}\n          onChange={(e) => setModel(e.target.value)}\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"SSH Username\"\n          value={sshUser}\n          onChange={(e) => setSshUser(e.target.value)} // sshUser 상태 업데이트\n          required\n          style={{ width: '300px', padding: '10px', margin: '10px 0', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <button\n          type=\"submit\"\n          style={{\n            padding: '10px 20px',\n            margin: '20px 0',\n            borderRadius: '5px',\n            backgroundColor: '#4CAF50',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer',\n          }}\n        >\n          Register Robot\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default RobotRegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}