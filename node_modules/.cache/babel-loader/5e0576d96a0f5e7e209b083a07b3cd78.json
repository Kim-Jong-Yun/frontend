{"ast":null,"code":"import React, { useEffect } from 'react';\nimport axios from 'axios';\nfunction NodeDisconnect({\n  firstNodeId,\n  secondNodeId\n}) {\n  useEffect(() => {\n    if (firstNodeId && secondNodeId) {\n      const disconnectNodes = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('토큰이 없습니다. 다시 로그인해주세요.');\n          return;\n        }\n        try {\n          await axios.delete(`http://172.30.1.30:5557/map/${firstNodeId}/connections/${secondNodeId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          alert('노드 간 연결이 성공적으로 해제되었습니다.');\n        } catch (error) {\n          console.error('노드 연결 해제 중 오류 발생:', error);\n          alert('노드 연결 해제에 실패했습니다.');\n        }\n      };\n      disconnectNodes();\n    }\n  }, [firstNodeId, secondNodeId]);\n  return null;\n}\nexport default NodeDisconnect;","map":{"version":3,"names":["React","useEffect","axios","NodeDisconnect","firstNodeId","secondNodeId","disconnectNodes","token","localStorage","getItem","alert","delete","headers","Authorization","error","console"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/NodeDisconnect.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\n\nfunction NodeDisconnect({ firstNodeId, secondNodeId }) {\n  useEffect(() => {\n    if (firstNodeId && secondNodeId) {\n      const disconnectNodes = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('토큰이 없습니다. 다시 로그인해주세요.');\n          return;\n        }\n\n        try {\n          await axios.delete(`http://172.30.1.30:5557/map/${firstNodeId}/connections/${secondNodeId}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          alert('노드 간 연결이 성공적으로 해제되었습니다.');\n        } catch (error) {\n          console.error('노드 연결 해제 중 오류 발생:', error);\n          alert('노드 연결 해제에 실패했습니다.');\n        }\n      };\n\n      disconnectNodes();\n    }\n  }, [firstNodeId, secondNodeId]);\n\n  return null;\n}\n\nexport default NodeDisconnect;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAcA,CAAC;EAAEC,WAAW;EAAEC;AAAa,CAAC,EAAE;EACrDJ,SAAS,CAAC,MAAM;IACd,IAAIG,WAAW,IAAIC,YAAY,EAAE;MAC/B,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;QAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVG,KAAK,CAAC,uBAAuB,CAAC;UAC9B;QACF;QAEA,IAAI;UACF,MAAMR,KAAK,CAACS,MAAM,CAAC,+BAA+BP,WAAW,gBAAgBC,YAAY,EAAE,EAAE;YAC3FO,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUN,KAAK;YAAG;UAC9C,CAAC,CAAC;UACFG,KAAK,CAAC,yBAAyB,CAAC;QAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzCJ,KAAK,CAAC,mBAAmB,CAAC;QAC5B;MACF,CAAC;MAEDJ,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACF,WAAW,EAAEC,YAAY,CAAC,CAAC;EAE/B,OAAO,IAAI;AACb;AAEA,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}