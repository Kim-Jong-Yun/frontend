{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    fetchMonitoredMap();\n    fetchMapMetadata();\n    const ws = new WebSocket('ws://172.30.1.28:5050'); // WebSocket 서버 주소\n\n    ws.onmessage = event => {\n      const robotPositions = JSON.parse(event.data);\n      setRobots(robotPositions);\n    };\n    return () => {\n      ws.close();\n    };\n  }, []);\n  const fetchMonitoredMap = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n      };\n    } catch (error) {\n      console.error('Error fetching monitored map:', error);\n    }\n  };\n  const fetchMapMetadata = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('Error fetching map metadata:', error);\n    }\n  };\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return {\n      mapX,\n      mapY\n    };\n  };\n  const drawMapAndRobots = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n    mapImage.onload = () => {\n      canvas.width = mapImage.width;\n      canvas.height = mapImage.height;\n      ctx.drawImage(mapImage, 0, 0);\n      robots.forEach(robot => {\n        const {\n          x,\n          y\n        } = robot;\n        const {\n          mapX,\n          mapY\n        } = worldToMap(x, y, mapImage.width, mapImage.height, mapResolution);\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n  };\n  useEffect(() => {\n    if (mapUrl) {\n      drawMapAndRobots();\n    }\n  }, [mapUrl, robots]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Monitoring Page\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Loading map...\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1',\n      padding: '20px',\n      borderLeft: '1px solid #ccc',\n      overflowY: 'auto',\n      maxHeight: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Robot List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, robots.length > 0 ? robots.map((robot, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    style: {\n      marginBottom: '10px',\n      borderBottom: '1px solid #ddd',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Robot \", index + 1), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Position:\"), \" X: \", robot.x, \", Y: \", robot.y)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"No robots connected.\")))));\n}\nexport default TestPage;","map":{"version":3,"names":["Navbar","LogoutButton","UserInfo","React","useState","useEffect","useRef","axios","TestPage","mapUrl","setMapUrl","robots","setRobots","canvasRef","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","fetchMonitoredMap","fetchMapMetadata","ws","WebSocket","onmessage","event","robotPositions","JSON","parse","data","close","token","localStorage","getItem","response","get","headers","Authorization","responseType","url","URL","createObjectURL","img","Image","src","onload","error","console","metadata","resolution","parseFloat","match","worldToMap","x","y","mapWidth","mapHeight","mapX","mapY","drawMapAndRobots","canvas","current","ctx","getContext","mapImage","drawImage","forEach","robot","fillStyle","beginPath","arc","Math","PI","fill","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","alignItems","flex","marginRight","ref","border","padding","borderLeft","overflowY","maxHeight","listStyleType","length","map","index","key","borderBottom"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["import Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    fetchMonitoredMap();\n    fetchMapMetadata();\n    const ws = new WebSocket('ws://172.30.1.28:5050'); // WebSocket 서버 주소\n\n    ws.onmessage = (event) => {\n      const robotPositions = JSON.parse(event.data);\n      setRobots(robotPositions);\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, []);\n\n  const fetchMonitoredMap = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({ width: img.width, height: img.height });\n      };\n    } catch (error) {\n      console.error('Error fetching monitored map:', error);\n    }\n  };\n\n  const fetchMapMetadata = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('Error fetching map metadata:', error);\n    }\n  };\n\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return { mapX, mapY };\n  };\n\n  const drawMapAndRobots = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n\n    mapImage.onload = () => {\n      canvas.width = mapImage.width;\n      canvas.height = mapImage.height;\n      ctx.drawImage(mapImage, 0, 0);\n\n      robots.forEach((robot) => {\n        const { x, y } = robot;\n        const { mapX, mapY } = worldToMap(x, y, mapImage.width, mapImage.height, mapResolution);\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n  };\n\n  useEffect(() => {\n    if (mapUrl) {\n      drawMapAndRobots();\n    }\n  }, [mapUrl, robots]);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Monitoring Page</h2>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n        {/* Left side - Map canvas */}\n        <div style={{ flex: '3', display: 'flex', justifyContent: 'center', alignItems: 'center', marginRight: '20px' }}>\n          {mapUrl ? (\n            <canvas ref={canvasRef} style={{ border: '1px solid #ccc' }}></canvas>\n          ) : (\n            <p>Loading map...</p>\n          )}\n        </div>\n\n        {/* Right side - Robot list */}\n        <div style={{ flex: '1', padding: '20px', borderLeft: '1px solid #ccc', overflowY: 'auto', maxHeight: '600px' }}>\n          <h3>Robot List</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.length > 0 ? (\n              robots.map((robot, index) => (\n                <li key={index} style={{ marginBottom: '10px', borderBottom: '1px solid #ddd', padding: '10px' }}>\n                  <strong>Robot {index + 1}</strong> <br />\n                  <strong>Position:</strong> X: {robot.x}, Y: {robot.y}\n                </li>\n              ))\n            ) : (\n              <p>No robots connected.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}