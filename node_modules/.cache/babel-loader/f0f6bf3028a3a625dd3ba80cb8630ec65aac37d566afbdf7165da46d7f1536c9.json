{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://172.30.1.40:7000', {\n  transports: ['websocket'],\n  upgrade: true,\n  forceNew: true,\n  withCredentials: true\n});\nfunction MapCreatePage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const videoRef = useRef();\n  const peerRef = useRef(null);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedRobot) {\n      // WebRTC 설정\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      }).then(stream => {\n        const peer = new SimplePeer({\n          initiator: true,\n          trickle: false,\n          stream: stream // 스트림을 전달\n        });\n        peer.on('signal', data => {\n          console.log('Peer signal:', data);\n          socket.emit('signal', {\n            signal: data,\n            robot_id: selectedRobot\n          });\n        });\n        peer.on('stream', remoteStream => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = remoteStream;\n            console.log('Stream received:', remoteStream);\n          }\n        });\n        peerRef.current = peer;\n        socket.on('signal', data => {\n          console.log('Signal from server:', data);\n          peer.signal(data.signal);\n        });\n\n        // WebSocket 연결을 통해 송신부에 연결\n        const ws = new WebSocket('ws://172.30.1.76:8081');\n        ws.onopen = () => {\n          console.log('WebSocket connected');\n        };\n        ws.onmessage = message => {\n          const data = JSON.parse(message.data);\n          console.log('Message from WebSocket:', data);\n          peer.signal(data);\n        };\n        ws.onerror = error => {\n          console.error('WebSocket error:', error);\n        };\n        ws.onclose = () => {\n          console.log('WebSocket connection closed');\n        };\n\n        // ROS 연결 설정\n        const ros = new window.ROSLIB.Ros({\n          url: 'ws://172.30.1.40:9090'\n        });\n        ros.on('connection', () => {\n          console.log('Connected to ROS websocket server.');\n        });\n        ros.on('error', error => {\n          console.log('Error connecting to ROS websocket server: ', error);\n        });\n        ros.on('close', () => {\n          console.log('Connection to ROS websocket server closed.');\n        });\n\n        // SLAM 데이터 수신 및 렌더링\n        const mapTopic = new window.ROSLIB.Topic({\n          ros: ros,\n          name: '/map',\n          messageType: 'nav_msgs/OccupancyGrid'\n        });\n        mapTopic.subscribe(message => {\n          const {\n            width,\n            height\n          } = message.info;\n          const data = message.data;\n          const canvas = mapRef.current;\n          const context = canvas.getContext('2d');\n          const imageData = context.createImageData(width, height);\n          for (let i = 0; i < data.length; i++) {\n            const value = data[i];\n            const color = value === -1 ? 255 : 255 - value;\n            imageData.data[i * 4] = color;\n            imageData.data[i * 4 + 1] = color;\n            imageData.data[i * 4 + 2] = color;\n            imageData.data[i * 4 + 3] = 255;\n          }\n          context.putImageData(imageData, 0, 0);\n        });\n        return () => {\n          ros.close();\n        };\n      }).catch(error => {\n        console.error('Error accessing media devices.', error);\n      });\n    }\n  }, [selectedRobot]);\n  const handleKeyDown = useCallback(e => {\n    const velocityCommands = {\n      w: {\n        linear: 0.1,\n        angular: 0\n      },\n      a: {\n        linear: 0,\n        angular: 0.1\n      },\n      s: {\n        linear: -0.1,\n        angular: 0\n      },\n      d: {\n        linear: 0,\n        angular: -0.1\n      },\n      ' ': {\n        linear: 0,\n        angular: 0\n      }\n    };\n    if (velocityCommands[e.key]) {\n      socket.emit('key_press', {\n        robot_id: selectedRobot,\n        velocity: velocityCommands[e.key]\n      });\n    }\n  }, [selectedRobot]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedRobot, handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SLAM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRobot(e.target.value),\n        value: selectedRobot,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: robot._id,\n          children: robot.name\n        }, robot._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SLAM \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: mapRef,\n          width: \"600\",\n          height: \"600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"WebCam \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n_s(MapCreatePage, \"lFXSwbqffOYty/iht+vTPXgyML0=\");\n_c = MapCreatePage;\nexport default MapCreatePage;\nvar _c;\n$RefreshReg$(_c, \"MapCreatePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Navbar","LogoutButton","UserInfo","axios","io","SimplePeer","jsxDEV","_jsxDEV","socket","connect","transports","upgrade","forceNew","withCredentials","MapCreatePage","_s","robots","setRobots","selectedRobot","setSelectedRobot","videoRef","peerRef","mapRef","fetchRobots","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","disconnect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","peer","initiator","trickle","on","log","emit","signal","robot_id","remoteStream","current","srcObject","ws","WebSocket","onopen","onmessage","message","JSON","parse","onerror","onclose","ros","window","ROSLIB","Ros","url","mapTopic","Topic","name","messageType","subscribe","width","height","info","canvas","context","getContext","imageData","createImageData","i","length","value","color","putImageData","close","catch","handleKeyDown","e","velocityCommands","w","linear","angular","a","s","d","key","velocity","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","target","map","robot","_id","justifyContent","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\n\nconst socket = io.connect('http://172.30.1.40:7000', {\n    transports: ['websocket'],\n    upgrade: true,\n    forceNew: true,\n    withCredentials: true\n});\n\nfunction MapCreatePage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n    const videoRef = useRef();\n    const peerRef = useRef(null);\n    const mapRef = useRef(null);\n\n    useEffect(() => {\n        const fetchRobots = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            // WebRTC 설정\n            navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then(stream => {\n                const peer = new SimplePeer({\n                    initiator: true,\n                    trickle: false,\n                    stream: stream // 스트림을 전달\n                });\n\n                peer.on('signal', data => {\n                    console.log('Peer signal:', data);\n                    socket.emit('signal', { signal: data, robot_id: selectedRobot });\n                });\n\n                peer.on('stream', remoteStream => {\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = remoteStream;\n                        console.log('Stream received:', remoteStream);\n                    }\n                });\n\n                peerRef.current = peer;\n\n                socket.on('signal', data => {\n                    console.log('Signal from server:', data);\n                    peer.signal(data.signal);\n                });\n\n                // WebSocket 연결을 통해 송신부에 연결\n                const ws = new WebSocket('ws://172.30.1.76:8081');\n                ws.onopen = () => {\n                    console.log('WebSocket connected');\n                };\n\n                ws.onmessage = (message) => {\n                    const data = JSON.parse(message.data);\n                    console.log('Message from WebSocket:', data);\n                    peer.signal(data);\n                };\n\n                ws.onerror = (error) => {\n                    console.error('WebSocket error:', error);\n                };\n\n                ws.onclose = () => {\n                    console.log('WebSocket connection closed');\n                };\n\n                // ROS 연결 설정\n                const ros = new window.ROSLIB.Ros({\n                    url: 'ws://172.30.1.40:9090'\n                });\n\n                ros.on('connection', () => {\n                    console.log('Connected to ROS websocket server.');\n                });\n\n                ros.on('error', (error) => {\n                    console.log('Error connecting to ROS websocket server: ', error);\n                });\n\n                ros.on('close', () => {\n                    console.log('Connection to ROS websocket server closed.');\n                });\n\n                // SLAM 데이터 수신 및 렌더링\n                const mapTopic = new window.ROSLIB.Topic({\n                    ros: ros,\n                    name: '/map',\n                    messageType: 'nav_msgs/OccupancyGrid'\n                });\n\n                mapTopic.subscribe((message) => {\n                    const { width, height } = message.info;\n                    const data = message.data;\n                    const canvas = mapRef.current;\n                    const context = canvas.getContext('2d');\n                    const imageData = context.createImageData(width, height);\n\n                    for (let i = 0; i < data.length; i++) {\n                        const value = data[i];\n                        const color = value === -1 ? 255 : 255 - value;\n                        imageData.data[i * 4] = color;\n                        imageData.data[i * 4 + 1] = color;\n                        imageData.data[i * 4 + 2] = color;\n                        imageData.data[i * 4 + 3] = 255;\n                    }\n\n                    context.putImageData(imageData, 0, 0);\n                });\n\n                return () => {\n                    ros.close();\n                };\n            }).catch(error => {\n                console.error('Error accessing media devices.', error);\n            });\n        }\n    }, [selectedRobot]);\n\n    const handleKeyDown = useCallback((e) => {\n        const velocityCommands = {\n            w: { linear: 0.1, angular: 0 },\n            a: { linear: 0, angular: 0.1 },\n            s: { linear: -0.1, angular: 0 },\n            d: { linear: 0, angular: -0.1 },\n            ' ': { linear: 0, angular: 0 }\n        };\n        if (velocityCommands[e.key]) {\n            socket.emit('key_press', { robot_id: selectedRobot, velocity: velocityCommands[e.key] });\n        }\n    }, [selectedRobot]);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [selectedRobot, handleKeyDown]);\n\n    return (\n        <div>\n            <header>\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div style={{ display: 'flex' }}>\n                <Navbar />\n            </div>\n            <h2>SLAM Control</h2>\n            <div>\n                <label>로봇 선택:</label>\n                <select onChange={(e) => setSelectedRobot(e.target.value)} value={selectedRobot}>\n                    <option value=\"\">로봇을 선택하세요</option>\n                    {robots.map(robot => (\n                        <option key={robot._id} value={robot._id}>{robot.name}</option>\n                    ))}\n                </select>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div style={{ width: '50%' }}>\n                    <h3>SLAM 화면</h3>\n                    <canvas ref={mapRef} width=\"600\" height=\"600\" />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <h3>WebCam 화면</h3>\n                    <video ref={videoRef} autoPlay playsInline style={{ width: '100%' }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MapCreatePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAO,CAAC,yBAAyB,EAAE;EACjDC,UAAU,EAAE,CAAC,WAAW,CAAC;EACzBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMwB,QAAQ,GAAGtB,MAAM,CAAC,CAAC;EACzB,MAAMuB,OAAO,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMwB,MAAM,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZ,MAAM0B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,sCAAsC,EAAE;UACrEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAChD,CAAC,CAAC;QACFP,SAAS,CAACU,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDT,WAAW,CAAC,CAAC;IAEb,OAAO,MAAM;MACTf,MAAM,CAAC0B,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENrC,SAAS,CAAC,MAAM;IACZ,IAAIqB,aAAa,EAAE;MACf;MACAiB,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAM,CAAC,CAAC,CAACC,IAAI,CAACC,MAAM,IAAI;QAC9E,MAAMC,IAAI,GAAG,IAAIrC,UAAU,CAAC;UACxBsC,SAAS,EAAE,IAAI;UACfC,OAAO,EAAE,KAAK;UACdH,MAAM,EAAEA,MAAM,CAAC;QACnB,CAAC,CAAC;QAEFC,IAAI,CAACG,EAAE,CAAC,QAAQ,EAAEd,IAAI,IAAI;UACtBE,OAAO,CAACa,GAAG,CAAC,cAAc,EAAEf,IAAI,CAAC;UACjCvB,MAAM,CAACuC,IAAI,CAAC,QAAQ,EAAE;YAAEC,MAAM,EAAEjB,IAAI;YAAEkB,QAAQ,EAAE/B;UAAc,CAAC,CAAC;QACpE,CAAC,CAAC;QAEFwB,IAAI,CAACG,EAAE,CAAC,QAAQ,EAAEK,YAAY,IAAI;UAC9B,IAAI9B,QAAQ,CAAC+B,OAAO,EAAE;YAClB/B,QAAQ,CAAC+B,OAAO,CAACC,SAAS,GAAGF,YAAY;YACzCjB,OAAO,CAACa,GAAG,CAAC,kBAAkB,EAAEI,YAAY,CAAC;UACjD;QACJ,CAAC,CAAC;QAEF7B,OAAO,CAAC8B,OAAO,GAAGT,IAAI;QAEtBlC,MAAM,CAACqC,EAAE,CAAC,QAAQ,EAAEd,IAAI,IAAI;UACxBE,OAAO,CAACa,GAAG,CAAC,qBAAqB,EAAEf,IAAI,CAAC;UACxCW,IAAI,CAACM,MAAM,CAACjB,IAAI,CAACiB,MAAM,CAAC;QAC5B,CAAC,CAAC;;QAEF;QACA,MAAMK,EAAE,GAAG,IAAIC,SAAS,CAAC,uBAAuB,CAAC;QACjDD,EAAE,CAACE,MAAM,GAAG,MAAM;UACdtB,OAAO,CAACa,GAAG,CAAC,qBAAqB,CAAC;QACtC,CAAC;QAEDO,EAAE,CAACG,SAAS,GAAIC,OAAO,IAAK;UACxB,MAAM1B,IAAI,GAAG2B,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC1B,IAAI,CAAC;UACrCE,OAAO,CAACa,GAAG,CAAC,yBAAyB,EAAEf,IAAI,CAAC;UAC5CW,IAAI,CAACM,MAAM,CAACjB,IAAI,CAAC;QACrB,CAAC;QAEDsB,EAAE,CAACO,OAAO,GAAI5B,KAAK,IAAK;UACpBC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QAC5C,CAAC;QAEDqB,EAAE,CAACQ,OAAO,GAAG,MAAM;UACf5B,OAAO,CAACa,GAAG,CAAC,6BAA6B,CAAC;QAC9C,CAAC;;QAED;QACA,MAAMgB,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC;UAC9BC,GAAG,EAAE;QACT,CAAC,CAAC;QAEFJ,GAAG,CAACjB,EAAE,CAAC,YAAY,EAAE,MAAM;UACvBZ,OAAO,CAACa,GAAG,CAAC,oCAAoC,CAAC;QACrD,CAAC,CAAC;QAEFgB,GAAG,CAACjB,EAAE,CAAC,OAAO,EAAGb,KAAK,IAAK;UACvBC,OAAO,CAACa,GAAG,CAAC,4CAA4C,EAAEd,KAAK,CAAC;QACpE,CAAC,CAAC;QAEF8B,GAAG,CAACjB,EAAE,CAAC,OAAO,EAAE,MAAM;UAClBZ,OAAO,CAACa,GAAG,CAAC,4CAA4C,CAAC;QAC7D,CAAC,CAAC;;QAEF;QACA,MAAMqB,QAAQ,GAAG,IAAIJ,MAAM,CAACC,MAAM,CAACI,KAAK,CAAC;UACrCN,GAAG,EAAEA,GAAG;UACRO,IAAI,EAAE,MAAM;UACZC,WAAW,EAAE;QACjB,CAAC,CAAC;QAEFH,QAAQ,CAACI,SAAS,CAAEd,OAAO,IAAK;UAC5B,MAAM;YAAEe,KAAK;YAAEC;UAAO,CAAC,GAAGhB,OAAO,CAACiB,IAAI;UACtC,MAAM3C,IAAI,GAAG0B,OAAO,CAAC1B,IAAI;UACzB,MAAM4C,MAAM,GAAGrD,MAAM,CAAC6B,OAAO;UAC7B,MAAMyB,OAAO,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;UACvC,MAAMC,SAAS,GAAGF,OAAO,CAACG,eAAe,CAACP,KAAK,EAAEC,MAAM,CAAC;UAExD,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjD,IAAI,CAACkD,MAAM,EAAED,CAAC,EAAE,EAAE;YAClC,MAAME,KAAK,GAAGnD,IAAI,CAACiD,CAAC,CAAC;YACrB,MAAMG,KAAK,GAAGD,KAAK,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGA,KAAK;YAC9CJ,SAAS,CAAC/C,IAAI,CAACiD,CAAC,GAAG,CAAC,CAAC,GAAGG,KAAK;YAC7BL,SAAS,CAAC/C,IAAI,CAACiD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGG,KAAK;YACjCL,SAAS,CAAC/C,IAAI,CAACiD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGG,KAAK;YACjCL,SAAS,CAAC/C,IAAI,CAACiD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;UACnC;UAEAJ,OAAO,CAACQ,YAAY,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,OAAO,MAAM;UACThB,GAAG,CAACuB,KAAK,CAAC,CAAC;QACf,CAAC;MACL,CAAC,CAAC,CAACC,KAAK,CAACtD,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;EAEnB,MAAMqE,aAAa,GAAGxF,WAAW,CAAEyF,CAAC,IAAK;IACrC,MAAMC,gBAAgB,GAAG;MACrBC,CAAC,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,OAAO,EAAE;MAAE,CAAC;MAC9BC,CAAC,EAAE;QAAEF,MAAM,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC;MAC9BE,CAAC,EAAE;QAAEH,MAAM,EAAE,CAAC,GAAG;QAAEC,OAAO,EAAE;MAAE,CAAC;MAC/BG,CAAC,EAAE;QAAEJ,MAAM,EAAE,CAAC;QAAEC,OAAO,EAAE,CAAC;MAAI,CAAC;MAC/B,GAAG,EAAE;QAAED,MAAM,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAE;IACjC,CAAC;IACD,IAAIH,gBAAgB,CAACD,CAAC,CAACQ,GAAG,CAAC,EAAE;MACzBxF,MAAM,CAACuC,IAAI,CAAC,WAAW,EAAE;QAAEE,QAAQ,EAAE/B,aAAa;QAAE+E,QAAQ,EAAER,gBAAgB,CAACD,CAAC,CAACQ,GAAG;MAAE,CAAC,CAAC;IAC5F;EACJ,CAAC,EAAE,CAAC9E,aAAa,CAAC,CAAC;EAEnBrB,SAAS,CAAC,MAAM;IACZkE,MAAM,CAACmC,gBAAgB,CAAC,SAAS,EAAEX,aAAa,CAAC;IACjD,OAAO,MAAM;MACTxB,MAAM,CAACoC,mBAAmB,CAAC,SAAS,EAAEZ,aAAa,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,CAACrE,aAAa,EAAEqE,aAAa,CAAC,CAAC;EAElC,oBACIhF,OAAA;IAAA6F,QAAA,gBACI7F,OAAA;MAAA6F,QAAA,gBACI7F,OAAA,CAACL,QAAQ;QAAAmG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZjG,OAAA,CAACN,YAAY;QAAAoG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACTjG,OAAA;MAAKkG,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAN,QAAA,eAC5B7F,OAAA,CAACP,MAAM;QAAAqG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNjG,OAAA;MAAA6F,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjG,OAAA;MAAA6F,QAAA,gBACI7F,OAAA;QAAA6F,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBjG,OAAA;QAAQoG,QAAQ,EAAGnB,CAAC,IAAKrE,gBAAgB,CAACqE,CAAC,CAACoB,MAAM,CAAC1B,KAAK,CAAE;QAACA,KAAK,EAAEhE,aAAc;QAAAkF,QAAA,gBAC5E7F,OAAA;UAAQ2E,KAAK,EAAC,EAAE;UAAAkB,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClCxF,MAAM,CAAC6F,GAAG,CAACC,KAAK,iBACbvG,OAAA;UAAwB2E,KAAK,EAAE4B,KAAK,CAACC,GAAI;UAAAX,QAAA,EAAEU,KAAK,CAACzC;QAAI,GAAxCyC,KAAK,CAACC,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwC,CACjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNjG,OAAA;MAAKkG,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEM,cAAc,EAAE;MAAgB,CAAE;MAAAZ,QAAA,gBAC7D7F,OAAA;QAAKkG,KAAK,EAAE;UAAEjC,KAAK,EAAE;QAAM,CAAE;QAAA4B,QAAA,gBACzB7F,OAAA;UAAA6F,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBjG,OAAA;UAAQ0G,GAAG,EAAE3F,MAAO;UAACkD,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC;QAAK;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACNjG,OAAA;QAAKkG,KAAK,EAAE;UAAEjC,KAAK,EAAE;QAAM,CAAE;QAAA4B,QAAA,gBACzB7F,OAAA;UAAA6F,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBjG,OAAA;UAAO0G,GAAG,EAAE7F,QAAS;UAAC8F,QAAQ;UAACC,WAAW;UAACV,KAAK,EAAE;YAAEjC,KAAK,EAAE;UAAO;QAAE;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzF,EAAA,CAnLQD,aAAa;AAAAsG,EAAA,GAAbtG,aAAa;AAqLtB,eAAeA,aAAa;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}