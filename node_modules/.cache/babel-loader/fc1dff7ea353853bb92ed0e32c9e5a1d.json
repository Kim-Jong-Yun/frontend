{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]); // 작업 로그 상태 추가\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    fetchMonitoredMap();\n    fetchMapMetadata();\n    fetchRobots(); // 로봇 리스트 API 호출\n    fetchAllTasks(); // 모든 작업 로그 API 호출\n  }, []);\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n      };\n    } catch (error) {\n      console.error('Error fetching monitored map:', error);\n    }\n  };\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('Error fetching map metadata:', error);\n    }\n  };\n\n  // 모든 작업 로그 API 호출 함수\n  const fetchAllTasks = async () => {\n    console.log(\"Fetching all tasks (logs)\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchAllTasks\");\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // 주어진 fetchRobots 함수 사용\n  const fetchRobots = async () => {\n    console.log(\"Fetching robots\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchRobots\");\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  // 로봇의 IP와 작업 로그를 매칭하여 로봇 이름을 찾는 함수\n  const getRobotNameByIp = robotIp => {\n    const robot = robots.find(r => r.ip === robotIp);\n    return robot ? robot.name : 'Unknown Robot';\n  };\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return {\n      mapX,\n      mapY\n    };\n  };\n  const drawMapAndRobots = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n    mapImage.onload = () => {\n      canvas.width = mapImage.width;\n      canvas.height = mapImage.height;\n      ctx.drawImage(mapImage, 0, 0);\n      robots.forEach(robot => {\n        const {\n          x,\n          y\n        } = robot.location; // 로봇 위치 정보 사용\n        const {\n          mapX,\n          mapY\n        } = worldToMap(x, y, mapImage.width, mapImage.height, mapResolution);\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n  };\n  useEffect(() => {\n    if (mapUrl) {\n      drawMapAndRobots();\n    }\n  }, [mapUrl, robots]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"Monitoring Page\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Loading map...\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1',\n      padding: '20px',\n      borderLeft: '1px solid #ccc',\n      overflowY: 'auto',\n      maxHeight: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Robot List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, robots.length > 0 ? robots.map(robot => /*#__PURE__*/React.createElement(\"li\", {\n    key: robot._id,\n    style: {\n      marginBottom: '10px',\n      borderBottom: '1px solid #ddd',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, \"State:\"), \" \", robot.status.state), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, \"Battery:\"), \" \", robot.status.battery, \"%\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, \"IP:\"), \" \", robot.ip)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"No robots connected.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px',\n      padding: '20px',\n      borderTop: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Task Logs\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0,\n      maxHeight: '200px',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    style: {\n      marginBottom: '10px',\n      borderBottom: '1px solid #ddd',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, \"Robot Name:\"), \" \", getRobotNameByIp(task.robotIp), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 81\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, \"Task Name:\"), \" \", task.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 59\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, \"Task Type:\"), \" \", task.taskType, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, \"Status:\"), \" \", task.status, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, \"Start Time:\"), \" \", new Date(task.startTime).toLocaleString(), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 92\n    }\n  }), task.endTime && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, \"End Time:\"), \" \", new Date(task.endTime).toLocaleString(), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 92\n    }\n  })))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"No task logs available.\")))));\n}\nexport default TestPage;","map":{"version":3,"names":["Navbar","LogoutButton","UserInfo","React","useState","useEffect","useRef","axios","TestPage","mapUrl","setMapUrl","robots","setRobots","tasks","setTasks","canvasRef","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","fetchMonitoredMap","fetchMapMetadata","fetchRobots","fetchAllTasks","getToken","token","localStorage","getItem","alert","window","location","href","response","get","headers","Authorization","responseType","url","URL","createObjectURL","data","img","Image","src","onload","error","console","metadata","resolution","parseFloat","match","log","getRobotNameByIp","robotIp","robot","find","r","ip","name","worldToMap","x","y","mapWidth","mapHeight","mapX","mapY","drawMapAndRobots","canvas","current","ctx","getContext","mapImage","drawImage","forEach","fillStyle","beginPath","arc","Math","PI","fill","createElement","style","fontFamily","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","textAlign","flexDirection","alignItems","flex","marginRight","ref","border","padding","borderLeft","overflowY","maxHeight","listStyleType","length","map","key","_id","borderBottom","status","state","battery","marginTop","borderTop","task","index","taskType","Date","startTime","toLocaleString","endTime","Fragment"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["import Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);  // 작업 로그 상태 추가\n  const canvasRef = useRef(null);\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    fetchMonitoredMap();\n    fetchMapMetadata();\n    fetchRobots(); // 로봇 리스트 API 호출\n    fetchAllTasks(); // 모든 작업 로그 API 호출\n  }, []);\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('No token found, please log in again.');\n      window.location.href = '/login'; // Redirect to login if token is missing\n      return null;\n    }\n    return token;\n  };\n\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapDimensions({ width: img.width, height: img.height });\n      };\n    } catch (error) {\n      console.error('Error fetching monitored map:', error);\n    }\n  };\n\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('Error fetching map metadata:', error);\n    }\n  };\n\n  // 모든 작업 로그 API 호출 함수\n  const fetchAllTasks = async () => {\n    console.log(\"Fetching all tasks (logs)\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchAllTasks\");\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data); // 모든 작업 데이터를 상태로 설정\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // 주어진 fetchRobots 함수 사용\n  const fetchRobots = async () => {\n    console.log(\"Fetching robots\");\n    const token = getToken();\n    if (!token) {\n      console.log(\"No token found, exiting fetchRobots\");\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('Error fetching robots:', error);\n    }\n  };\n\n  // 로봇의 IP와 작업 로그를 매칭하여 로봇 이름을 찾는 함수\n  const getRobotNameByIp = (robotIp) => {\n    const robot = robots.find((r) => r.ip === robotIp);\n    return robot ? robot.name : 'Unknown Robot';\n  };\n\n  const worldToMap = (x, y, mapWidth, mapHeight, resolution) => {\n    const mapX = (x + mapWidth * resolution / 2) / resolution;\n    const mapY = mapHeight - (y + mapHeight * resolution / 2) / resolution;\n    return { mapX, mapY };\n  };\n\n  const drawMapAndRobots = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const mapImage = new Image();\n    mapImage.src = mapUrl;\n\n    mapImage.onload = () => {\n      canvas.width = mapImage.width;\n      canvas.height = mapImage.height;\n      ctx.drawImage(mapImage, 0, 0);\n\n      robots.forEach((robot) => {\n        const { x, y } = robot.location; // 로봇 위치 정보 사용\n        const { mapX, mapY } = worldToMap(x, y, mapImage.width, mapImage.height, mapResolution);\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    };\n  };\n\n  useEffect(() => {\n    if (mapUrl) {\n      drawMapAndRobots();\n    }\n  }, [mapUrl, robots]);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', margin: '20px' }}>\n      <header style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <h2 style={{ textAlign: 'center', margin: '20px 0' }}>Monitoring Page</h2>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          {/* Left side - Map canvas */}\n          <div style={{ flex: '3', display: 'flex', justifyContent: 'center', alignItems: 'center', marginRight: '20px' }}>\n            {mapUrl ? (\n              <canvas ref={canvasRef} style={{ border: '1px solid #ccc' }}></canvas>\n            ) : (\n              <p>Loading map...</p>\n            )}\n          </div>\n\n          {/* Right side - Robot list */}\n          <div style={{ flex: '1', padding: '20px', borderLeft: '1px solid #ccc', overflowY: 'auto', maxHeight: '600px' }}>\n            <h3>Robot List</h3>\n            <ul style={{ listStyleType: 'none', padding: 0 }}>\n              {robots.length > 0 ? (\n                robots.map((robot) => (\n                  <li key={robot._id} style={{ marginBottom: '10px', borderBottom: '1px solid #ddd', padding: '10px' }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                      <span><strong>State:</strong> {robot.status.state}</span>\n                      <span><strong>Battery:</strong> {robot.status.battery}%</span>\n                      <span><strong>IP:</strong> {robot.ip}</span>\n                    </div>\n                  </li>\n                ))\n              ) : (\n                <p>No robots connected.</p>\n              )}\n            </ul>\n          </div>\n        </div>\n\n        {/* Task logs section */}\n        <div style={{ marginTop: '20px', padding: '20px', borderTop: '1px solid #ccc' }}>\n          <h3>Task Logs</h3>\n          <ul style={{ listStyleType: 'none', padding: 0, maxHeight: '200px', overflowY: 'auto' }}>\n            {tasks.length > 0 ? (\n              tasks.map((task, index) => (\n                <li key={index} style={{ marginBottom: '10px', borderBottom: '1px solid #ddd', padding: '10px' }}>\n                  <strong>Robot Name:</strong> {getRobotNameByIp(task.robotIp)} <br />\n                  <strong>Task Name:</strong> {task.name} <br />\n                  <strong>Task Type:</strong> {task.taskType} <br />\n                  <strong>Status:</strong> {task.status} <br />\n                  <strong>Start Time:</strong> {new Date(task.startTime).toLocaleString()} <br />\n                  {task.endTime && (\n                    <>\n                      <strong>End Time:</strong> {new Date(task.endTime).toLocaleString()} <br />\n                    </>\n                  )}\n                </li>\n              ))\n            ) : (\n              <p>No task logs available.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}