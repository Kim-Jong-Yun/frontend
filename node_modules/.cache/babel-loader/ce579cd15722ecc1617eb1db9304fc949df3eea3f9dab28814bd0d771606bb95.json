{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapCreatePage() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const fetchRobots = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobots(response.data);\n      } catch (error) {\n        console.error('Error fetching robots:', error);\n      }\n    };\n    fetchRobots();\n  }, []);\n  useEffect(() => {\n    if (selectedRobot) {\n      // ROS 연결 설정\n      const ros = new ROSLIB.Ros({\n        url: 'ws://172.30.1.40:9090'\n      });\n      ros.on('connection', () => {\n        console.log('Connected to websocket server.');\n      });\n      ros.on('error', error => {\n        console.log('Error connecting to websocket server: ', error);\n      });\n      ros.on('close', () => {\n        console.log('Connection to websocket server closed.');\n      });\n\n      // SLAM 데이터를 수신하여 화면에 표시\n      const mapTopic = new ROSLIB.Topic({\n        ros: ros,\n        name: '/map',\n        messageType: 'nav_msgs/OccupancyGrid'\n      });\n      mapTopic.subscribe(message => {\n        // 여기에 SLAM 데이터를 처리하는 코드를 작성합니다.\n        console.log('Received message on /map: ', message);\n        // mapRef를 사용하여 데이터를 처리하고 화면에 표시합니다.\n        if (mapRef.current) {\n          // 여기에 데이터를 HTML5 캔버스나 다른 방법으로 표시하는 코드를 작성합니다.\n        }\n      });\n      return () => {\n        ros.close();\n      };\n    }\n  }, [selectedRobot]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SLAM Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB85C\\uBD07 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedRobot(e.target.value),\n        value: selectedRobot,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uB85C\\uBD07\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: robot._id,\n          children: robot.name\n        }, robot._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SLAM \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: mapRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"WebCam \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(MapCreatePage, \"mLpfsA2l2J6VpSyF6Tbgx/GPOCY=\");\n_c = MapCreatePage;\nexport default MapCreatePage;\nvar _c;\n$RefreshReg$(_c, \"MapCreatePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Navbar","LogoutButton","UserInfo","axios","ROSLIB","jsxDEV","_jsxDEV","MapCreatePage","_s","robots","setRobots","selectedRobot","setSelectedRobot","mapRef","fetchRobots","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","ros","Ros","url","on","log","mapTopic","Topic","name","messageType","subscribe","message","current","close","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","e","target","value","map","robot","_id","justifyContent","width","ref","_c","$RefreshReg$"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapCreatePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport ROSLIB from 'roslib';\n\nfunction MapCreatePage() {\n    const [robots, setRobots] = useState([]);\n    const [selectedRobot, setSelectedRobot] = useState('');\n    const mapRef = useRef(null);\n\n    useEffect(() => {\n        const fetchRobots = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://172.30.1.40:5559/robot/robots', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setRobots(response.data);\n            } catch (error) {\n                console.error('Error fetching robots:', error);\n            }\n        };\n\n        fetchRobots();\n    }, []);\n\n    useEffect(() => {\n        if (selectedRobot) {\n            // ROS 연결 설정\n            const ros = new ROSLIB.Ros({\n                url: 'ws://172.30.1.40:9090'\n            });\n\n            ros.on('connection', () => {\n                console.log('Connected to websocket server.');\n            });\n\n            ros.on('error', (error) => {\n                console.log('Error connecting to websocket server: ', error);\n            });\n\n            ros.on('close', () => {\n                console.log('Connection to websocket server closed.');\n            });\n\n            // SLAM 데이터를 수신하여 화면에 표시\n            const mapTopic = new ROSLIB.Topic({\n                ros: ros,\n                name: '/map',\n                messageType: 'nav_msgs/OccupancyGrid'\n            });\n\n            mapTopic.subscribe((message) => {\n                // 여기에 SLAM 데이터를 처리하는 코드를 작성합니다.\n                console.log('Received message on /map: ', message);\n                // mapRef를 사용하여 데이터를 처리하고 화면에 표시합니다.\n                if (mapRef.current) {\n                    // 여기에 데이터를 HTML5 캔버스나 다른 방법으로 표시하는 코드를 작성합니다.\n                }\n            });\n\n            return () => {\n                ros.close();\n            };\n        }\n    }, [selectedRobot]);\n\n    return (\n        <div>\n            <header>\n                <UserInfo />\n                <LogoutButton />\n            </header>\n            <div style={{ display: 'flex' }}>\n                <Navbar />\n            </div>\n            <h2>SLAM Control</h2>\n            <div>\n                <label>로봇 선택:</label>\n                <select onChange={(e) => setSelectedRobot(e.target.value)} value={selectedRobot}>\n                    <option value=\"\">로봇을 선택하세요</option>\n                    {robots.map(robot => (\n                        <option key={robot._id} value={robot._id}>{robot.name}</option>\n                    ))}\n                </select>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div style={{ width: '50%' }}>\n                    <h3>SLAM 화면</h3>\n                    <canvas ref={mapRef} />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <h3>WebCam 화면</h3>\n                    {/* WebRTC를 사용하여 WebCam 화면을 표시하는 코드를 여기에 추가합니다. */}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MapCreatePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}