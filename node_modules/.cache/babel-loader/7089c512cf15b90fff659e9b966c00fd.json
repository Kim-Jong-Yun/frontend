{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js\";\n// src/pages/Map/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport NodeList from './NodeList'; // NodeList 컴포넌트 임포트\nimport NodeDisconnect from './NodeDisconnect'; // NodeDisconnect 컴포넌트 임포트\nimport NodeConnectionPopup from './NodeConnectionPopup'; // NodeConnectionPopup 컴포넌트 임포트\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\nfunction Mapmanage() {\n  // 맵 관련 상태\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false);\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n\n  // 노드 관련 상태\n  const [nodes, setNodes] = useState([]);\n  const [isCreatingNode, setIsCreatingNode] = useState(false);\n  const [nodeX, setNodeX] = useState(null);\n  const [nodeY, setNodeY] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false);\n\n  // 캔버스 관련 참조 및 상태\n  const canvasRef = useRef(null);\n  const mapImageRef = useRef(null);\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  // 금지구역 관련 상태\n  const [isCreatingNoGoZone, setIsCreatingNoGoZone] = useState(false);\n  const [isDeletingNoGoZone, setIsDeletingNoGoZone] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [noGoZones, setNoGoZones] = useState([]);\n\n  // 로딩 및 기타 상태\n  const [isPatchingMap, setIsPatchingMap] = useState(false);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 노드 연결 팝업 관련 상태\n  const [isConnectionPopupOpen, setIsConnectionPopupOpen] = useState(false);\n  const [nodeConnectionData, setNodeConnectionData] = useState(null);\n\n  // 맵 목록 불러오기\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.33:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n      if (response.data.length > 0) {\n        await handleSelectMap(response.data[0]);\n      }\n    } catch (error) {\n      console.error('맵을 가져오는 중 오류 발생:', error);\n      alert('맵을 가져오는 데 실패했습니다.');\n    }\n  };\n  const fetchNodes = async mapId => {\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data);\n      } else {\n        setNodes([]);\n      }\n    } catch (error) {\n      console.error('노드를 가져오는 중 오류 발생:', error);\n      setNodes([]);\n      alert('노드를 가져오는 데 실패했습니다.');\n    }\n  };\n  const fetchNoGoZones = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/no-go-zones/map/${mapId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNoGoZones(response.data);\n    } catch (error) {\n      console.error('금지구역을 가져오는 중 오류 발생:', error);\n      alert('금지구역을 가져오는 데 실패했습니다.');\n    }\n  };\n  const handleSelectMap = async map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/file/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('맵 이미지를 가져오는 중 오류 발생:', error);\n      alert('맵 이미지를 가져오는 데 실패했습니다.');\n    }\n    await fetchNoGoZones(map._id);\n  };\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawAll();\n    };\n  };\n  const mapToMapCoordinates = (x, y) => {\n    return worldToMap(x, y, imageNaturalWidth, imageNaturalHeight);\n  };\n  const drawAll = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(mapImageRef.current, 0, 0, imageNaturalWidth, imageNaturalHeight);\n\n    // 금지구역 그리기\n    noGoZones.forEach(zone => {\n      const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n      const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n      const width = bottomRight.x - topLeft.x;\n      const height = bottomRight.y - topLeft.y;\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n      ctx.fillRect(topLeft.x, topLeft.y, width, height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(topLeft.x, topLeft.y, width, height);\n    });\n\n    // 드래그 중인 사각형 그리기\n    if (currentRect) {\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n    }\n\n    // 노드 연결선 그리기\n    nodes.forEach(node => {\n      node.connections.forEach(connection => {\n        const connectedNode = nodes.find(n => n._id === connection.node);\n        if (connectedNode) {\n          const {\n            x: startX,\n            y: startY\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const {\n            x: endX,\n            y: endY\n          } = worldToMap(connectedNode.x, connectedNode.y, imageNaturalWidth, imageNaturalHeight);\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(startX, startY);\n          if (connection.waypoints && connection.waypoints.length > 0) {\n            connection.waypoints.forEach(wp => {\n              const {\n                x: wpX,\n                y: wpY\n              } = worldToMap(wp.x, wp.y, imageNaturalWidth, imageNaturalHeight);\n              ctx.lineTo(wpX, wpY);\n            });\n          }\n          ctx.lineTo(endX, endY);\n          ctx.stroke();\n        }\n      });\n    });\n\n    // 금지구역 삭제 모드일 때, 금지구역 위에 삭제 아이콘 표시\n    if (isDeletingNoGoZone) {\n      noGoZones.forEach(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        ctx.fillStyle = 'red';\n        ctx.font = 'bold 16px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('X', topLeft.x + 8, topLeft.y + 15);\n      });\n    }\n\n    // 노드 그리기\n    nodes.forEach(node => {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const size = 10;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size);\n    });\n  };\n\n  // 이미지 로드 후 캔버스에 지도 그리기\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n  }, [mapImage]);\n\n  // 맵 이미지와 selectedMap이 모두 설정된 후 노드 패치\n  useEffect(() => {\n    if (mapImage && selectedMap) {\n      fetchNodes(selectedMap._id);\n    }\n  }, [mapImage, selectedMap]);\n\n  // 노드 또는 금지구역 변경 시마다 캔버스에 다시 그리기\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawAll();\n    }\n  }, [nodes, noGoZones, currentRect, isDeletingNoGoZone]);\n\n  // 노드 삭제 시 커서 복구\n  useEffect(() => {\n    if (!isDeletingNode && !isCreatingNoGoZone && !isDeletingNoGoZone && !dragging) {\n      document.body.style.cursor = 'default';\n    }\n  }, [isDeletingNode, isCreatingNoGoZone, isDeletingNoGoZone, dragging]);\n\n  // 마우스가 캔버스 위를 움직일 때 노드 호버 상태 업데이트\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    let foundNode = null;\n    for (let node of nodes) {\n      const {\n        x,\n        y\n      } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 5) {\n        foundNode = node;\n        break;\n      }\n    }\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else {\n      setHoveredNode(null);\n    }\n\n    // 금지구역 생성 모드일 때 드래그 중인 사각형 업데이트\n    if (isCreatingNoGoZone && dragging && dragStart) {\n      const newRect = {\n        x: Math.min(mouseX, dragStart.x),\n        y: Math.min(mouseY, dragStart.y),\n        width: Math.abs(mouseX - dragStart.x),\n        height: Math.abs(mouseY - dragStart.y)\n      };\n      setCurrentRect(newRect);\n    }\n  };\n\n  // 마우스가 캔버스를 벗어났을 때 호버 상태 초기화 및 드래그 상태 초기화\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n    if (isCreatingNoGoZone && dragging) {\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  // 드래그 시작 이벤트 핸들러\n  const handleMouseDown = e => {\n    if (isCreatingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      setDragStart({\n        x: startX,\n        y: startY\n      });\n      setDragging(true);\n      document.body.style.cursor = 'crosshair';\n    }\n\n    // 금지구역 삭제 모드일 때\n    if (isDeletingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n\n      // 금지구역 클릭 여부 확인\n      const clickedZone = noGoZones.find(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n        return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n      });\n      if (clickedZone) {\n        handleDeleteNoGoZone(clickedZone._id);\n      }\n    }\n  };\n\n  // 드래그 종료 이벤트 핸들러\n  const handleMouseUp = async e => {\n    if (isCreatingNoGoZone && dragging && dragStart && currentRect) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n      const finalRect = {\n        x: Math.min(endX, dragStart.x),\n        y: Math.min(endY, dragStart.y),\n        width: Math.abs(endX - dragStart.x),\n        height: Math.abs(endY - dragStart.y)\n      };\n      const topLeftWorld = mapToWorld(finalRect.x, finalRect.y, imageNaturalWidth, imageNaturalHeight);\n      const bottomRightWorld = mapToWorld(finalRect.x + finalRect.width, finalRect.y + finalRect.height, imageNaturalWidth, imageNaturalHeight);\n      const noGoZone = {\n        topLeft: topLeftWorld,\n        bottomRight: bottomRightWorld,\n        mapId: selectedMap._id\n      };\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://172.30.1.33:5557/map/no-go-zones', noGoZone, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('금지 구역이 성공적으로 생성되었습니다.');\n        setNoGoZones([...noGoZones, response.data.noGoZone]);\n      } catch (error) {\n        console.error('금지 구역 생성 중 오류 발생:', error);\n        alert('금지 구역 생성에 실패했습니다.');\n      }\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n\n  // 금지구역을 삭제하는 함수\n  const handleDeleteNoGoZone = async zoneId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 금지 구역을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/no-go-zones/${zoneId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('금지 구역이 성공적으로 삭제되었습니다.');\n      setNoGoZones(noGoZones.filter(zone => zone._id !== zoneId));\n    } catch (error) {\n      console.error('금지 구역 삭제 중 오류 발생:', error);\n      alert('금지 구역 삭제에 실패했습니다.');\n    } finally {\n      setIsDeletingNoGoZone(false);\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n\n  // 맵 클릭 이벤트 핸들러\n  const handleMapClick = async e => {\n    if (!selectedMap) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n    const {\n      x,\n      y\n    } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n    try {\n      if (isCreatingNode) {\n        setNodeX(x);\n        setNodeY(y);\n        setIsCreatingNode(false);\n        setIsNodePopupOpen(true);\n        document.body.style.cursor = 'default';\n        return;\n      }\n      if (isDeletingNode) {\n        let nodeToDelete = null;\n        for (let node of nodes) {\n          const {\n            x: nodeXCoord,\n            y: nodeYCoord\n          } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeXCoord) ** 2 + (clickY - nodeYCoord) ** 2);\n          if (distance < 5) {\n            nodeToDelete = node;\n            break;\n          }\n        }\n        if (nodeToDelete) {\n          const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n          if (confirmDelete) {\n            const token = localStorage.getItem('token');\n            try {\n              await axios.delete(`http://172.30.1.33:5557/map/node/${nodeToDelete._id}`, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              alert('노드가 성공적으로 삭제되었습니다.');\n              await fetchNodes(selectedMap._id);\n              drawAll();\n              setIsDeletingNode(false);\n            } catch (error) {\n              console.error('노드 삭제 중 오류 발생:', error);\n              alert('노드 삭제에 실패했습니다.');\n            }\n          }\n        } else {\n          alert('해당 위치에 노드를 찾을 수 없습니다.');\n        }\n        return;\n      }\n\n      // 노드 연결 팝업 활성화 상태일 경우 팝업 내에서 처리\n      if (isConnectionPopupOpen) {\n        // NodeConnectionPopup 컴포넌트가 별도로 맵 클릭을 처리함\n        // 여기서는 별도의 처리를 하지 않음\n        return;\n      }\n\n      // 기타 맵 클릭 처리 로직 (예: 금지구역 생성 등)\n      // ...\n    } catch (error) {\n      console.error('맵 클릭 처리 중 오류 발생:', error);\n      alert('맵 클릭 처리 중 오류가 발생했습니다.');\n    } finally {\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    }\n  };\n\n  // 맵 수정 팝업 열기 함수\n  const openEditPopup = map => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    setIsEditPopupOpen(true);\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNode(true);\n    setIsDeletingNoGoZone(false);\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // 노드 삭제 모드를 활성화하는 함수\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    setIsDeletingNoGoZone(false);\n    setIsCreatingNoGoZone(false);\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  // 맵을 로봇에게 전송하는 함수\n  const handleSendMap = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5559/robot/send_map', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 로봇에게 성공적으로 전송되었습니다.');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('맵을 로봇에게 전송하는 중 오류 발생:', error);\n      alert(`맵을 로봇에게 전송하는 중 오류 발생: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n\n  // 맵 패치를 처리하는 함수 (기존 경로 삭제 후 재계산)\n  const handlePatchMap = async () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmPatch = window.confirm('선택한 맵의 모든 노드 간의 최단 경로를 계산하고 저장하시겠습니까?');\n    if (!confirmPatch) return;\n    setIsPatchingMap(true);\n    try {\n      // Step 1: 기존 경로 데이터 삭제\n      await axios.delete(`http://172.30.1.33:5557/map/shortpaths/map/${selectedMap._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('기존 ShortPath 데이터가 삭제되었습니다.');\n\n      // Step 2: 새로운 경로 계산 및 저장\n      const response = await axios.post('http://172.30.1.33:5557/map/calculate-paths', {\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('맵 패치가 성공적으로 완료되었습니다.');\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      } else {\n        alert('맵 패치에 실패했습니다.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('맵 패치 중 오류 발생:', error);\n      alert(`맵 패치 중 오류 발생: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message}`);\n    } finally {\n      setIsPatchingMap(false);\n    }\n  };\n\n  // 노드 삭제 함수\n  const handleDeleteMap = async mapId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 맵을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/maps/${mapId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('맵이 성공적으로 삭제되었습니다.');\n      setMaps(maps.filter(map => map._id !== mapId));\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n        setMapImage(null);\n        setNodes([]);\n        setNoGoZones([]);\n      }\n    } catch (error) {\n      console.error('맵 삭제 중 오류 발생:', error);\n      alert('맵 삭제에 실패했습니다.');\n    }\n  };\n\n  // 노드 제출 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    if (!nodeName.trim()) {\n      alert('노드 이름을 입력해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('노드가 성공적으로 생성되었습니다.');\n      setIsNodePopupOpen(false);\n      setNodeName('');\n      setNodeX(null);\n      setNodeY(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 생성 중 오류 발생:', error);\n      alert('노드 생성에 실패했습니다.');\n    }\n  };\n\n  // 맵 업로드 함수\n  const handleUploadMap = async e => {\n    e.preventDefault();\n    if (uploadName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('맵이 성공적으로 업로드되었습니다.');\n      setIsUploadPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업로드 중 오류 발생:', error);\n      alert('맵 업로드에 실패했습니다.');\n    }\n  };\n\n  // 맵 파일 변경 처리\n  const handleFileChange = e => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 처리\n  const handleYamlFileChange = e => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 맵 업데이트 함수\n  const handleUpdateMap = async e => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 성공적으로 업데이트되었습니다.');\n      setIsEditPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('맵 업데이트 중 오류 발생:', error);\n      alert(`맵 업데이트 중 오류 발생: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message}`);\n    }\n  };\n\n  // 노드 연결 팝업 열기 함수\n  const handleOpenNodeConnectionPopup = () => {\n    setIsConnectionPopupOpen(true);\n  };\n\n  // 노드 연결 팝업 완료 시 처리 함수\n  const handleNodeConnectionComplete = data => {\n    setNodeConnectionData(data);\n    setIsConnectionPopupOpen(false);\n    // 필요 시 추가적인 상태 업데이트나 데이터 패칭\n    fetchNodes(selectedMap._id);\n    drawAll();\n  };\n\n  // 노드 연결 팝업 취소 시 처리 함수\n  const handleNodeConnectionCancel = () => {\n    setIsConnectionPopupOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"map-management-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateNodeMode,\n    className: \"create-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDeleteNodeMode,\n    className: \"delete-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC0AD\\uC81C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleOpenNodeConnectionPopup,\n    className: \"connect-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 11\n    }\n  }), \" \\uB178\\uB4DC \\uC5F0\\uACB0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsConnectionPopupOpen(true),\n    className: \"disconnect-node-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 11\n    }\n  }), \" \\uC5F0\\uACB0 \\uD574\\uC81C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setIsCreatingNoGoZone(true);\n      setIsDeletingNoGoZone(false);\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      document.body.style.cursor = 'crosshair';\n    },\n    className: \"create-nogozone-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 9\n    }\n  }, \"\\uAE08\\uC9C0 \\uAD6C\\uC5ED \\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setIsDeletingNoGoZone(true);\n      setIsCreatingNoGoZone(false);\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      document.body.style.cursor = 'not-allowed';\n    },\n    className: \"delete-nogozone-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 9\n    }\n  }, \"\\uAE08\\uC9C0 \\uAD6C\\uC5ED \\uD574\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-management-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"map-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 11\n    }\n  }, \"\\uB9F5 \\uB9AC\\uC2A4\\uD2B8\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsUploadPopupOpen(true),\n    className: \"add-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"map-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 11\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    className: `map-list-item ${(selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id) === map._id ? 'selected-map' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleSelectMap(map),\n    className: \"map-list-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 17\n    }\n  }, map.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditPopup(map),\n    className: \"edit-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteMap(map._id),\n    className: \"delete-map-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 15\n    }\n  }, selectedMap.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-and-node-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-image-container\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 11\n    }\n  }, mapImage ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    className: \"map-canvas\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleMapClick,\n    style: {\n      cursor: isCreatingNode ? 'crosshair' : isCreatingNoGoZone ? 'crosshair' : isDeletingNoGoZone ? 'not-allowed' : isConnectionPopupOpen ? 'pointer' : 'default'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 15\n    }\n  }, \"\\uB9F5\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uC774\\uBBF8\\uC9C0\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694.\"), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send-to-robots-button\",\n    onClick: handleSendMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07\\uC5D0\\uAC8C \\uC804\\uC1A1\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"map-patch-button\",\n    onClick: handlePatchMap,\n    disabled: isPatchingMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 17\n    }\n  }, isPatchingMap ? '맵 패치 중...' : '맵 패치'))), /*#__PURE__*/React.createElement(NodeList, {\n    mapId: selectedMap === null || selectedMap === void 0 ? void 0 : selectedMap._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 11\n    }\n  }))), isNodePopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 11\n    }\n  }, \"\\uB178\\uB4DC \\uC0DD\\uC131\"), nodeX !== null && nodeY !== null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 13\n    }\n  }, \"X: \", nodeX.toFixed(2), \", Y: \", nodeY.toFixed(2)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nodeName,\n    onChange: e => setNodeName(e.target.value),\n    placeholder: \"\\uB178\\uB4DC \\uC774\\uB984 \\uC785\\uB825\",\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitNode,\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 13\n    }\n  }, \"\\uC0DD\\uC131\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsNodePopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 13\n    }\n  }, \"\\uCDE8\\uC18C\"))), isConnectionPopupOpen && /*#__PURE__*/React.createElement(NodeConnectionPopup, {\n    onComplete: handleNodeConnectionComplete,\n    onCancel: handleNodeConnectionCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 9\n    }\n  }), isUploadPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 11\n    }\n  }, \"\\uB9F5 \\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: uploadName,\n    onChange: e => setUploadName(e.target.value),\n    placeholder: \"\\uB9F5 \\uC774\\uB984\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: uploadDescription,\n    onChange: e => setUploadDescription(e.target.value),\n    placeholder: \"\\uB9F5 \\uC124\\uBA85\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 13\n    }\n  }, \"\\uB9F5 \\uD30C\\uC77C (.pgm, .png, .jpg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pgm,.png,.jpg\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 13\n    }\n  }, \"YAML \\uD30C\\uC77C (.yaml)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".yaml\",\n    onChange: handleYamlFileChange,\n    required: true,\n    className: \"popup-file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 15\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsUploadPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")))), isEditPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 11\n    }\n  }, \"\\uB9F5 \\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    placeholder: \"\\uB9F5 \\uC774\\uB984\",\n    required: true,\n    className: \"popup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    placeholder: \"\\uB9F5 \\uC124\\uBA85\",\n    required: true,\n    className: \"popup-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginTop: '10px',\n      color: '#333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isMonitored,\n    onChange: e => setIsMonitored(e.target.checked),\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 15\n    }\n  }), \"\\uBAA8\\uB2C8\\uD130\\uB9C1 \\uB9F5\\uC73C\\uB85C \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 15\n    }\n  }, \"\\uC5C5\\uB370\\uC774\\uD2B8\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsEditPopupOpen(false),\n    className: \"popup-cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")))), hoveredNode && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip\",\n    style: {\n      position: 'fixed',\n      top: `${tooltipPosition.y + 10}px`,\n      left: `${tooltipPosition.x + 10}px`,\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      color: 'white',\n      padding: '5px 10px',\n      borderRadius: '4px',\n      pointerEvents: 'none',\n      zIndex: 1000,\n      fontSize: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 9\n    }\n  }, hoveredNode.name), /*#__PURE__*/React.createElement(NodeDisconnect, {\n    firstNodeId: null // 연결 해제 기능은 별도로 구현 필요\n    ,\n    secondNodeId: null,\n    onDisconnectSuccess: async isDeleted => {\n      if (isDeleted && selectedMap) {\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 7\n    }\n  }), isPatchingMap && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 11\n    }\n  })));\n}\nexport default Mapmanage;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faEdit","faPlus","faLink","faUnlink","Navbar","LogoutButton","UserInfo","NodeList","NodeDisconnect","NodeConnectionPopup","worldToMap","mapToWorld","Mapmanage","maps","setMaps","selectedMap","setSelectedMap","editName","setEditName","editDescription","setEditDescription","isMonitored","setIsMonitored","uploadName","setUploadName","uploadDescription","setUploadDescription","mapFile","setMapFile","yamlFile","setYamlFile","mapImage","setMapImage","isUploadPopupOpen","setIsUploadPopupOpen","isEditPopupOpen","setIsEditPopupOpen","nodes","setNodes","isCreatingNode","setIsCreatingNode","nodeX","setNodeX","nodeY","setNodeY","nodeName","setNodeName","isNodePopupOpen","setIsNodePopupOpen","canvasRef","mapImageRef","imageNaturalWidth","setImageNaturalWidth","imageNaturalHeight","setImageNaturalHeight","isCreatingNoGoZone","setIsCreatingNoGoZone","isDeletingNoGoZone","setIsDeletingNoGoZone","dragging","setDragging","dragStart","setDragStart","currentRect","setCurrentRect","noGoZones","setNoGoZones","isPatchingMap","setIsPatchingMap","hoveredNode","setHoveredNode","tooltipPosition","setTooltipPosition","x","y","isConnectionPopupOpen","setIsConnectionPopupOpen","nodeConnectionData","setNodeConnectionData","fetchMaps","token","localStorage","getItem","alert","response","get","headers","data","length","handleSelectMap","error","console","fetchNodes","mapId","status","fetchNoGoZones","map","name","description","_id","Authorization","responseType","imageUrl","URL","createObjectURL","loadMapImage","canvas","current","ctx","getContext","Image","src","onload","imgWidth","width","imgHeight","height","clearRect","drawImage","drawAll","mapToMapCoordinates","forEach","zone","topLeft","bottomRight","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","node","connections","connection","connectedNode","find","n","startX","startY","endX","endY","beginPath","moveTo","waypoints","wp","wpX","wpY","lineTo","stroke","font","textAlign","textBaseline","fillText","size","isDeletingNode","document","body","style","cursor","handleMouseMove","e","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","foundNode","distance","Math","sqrt","newRect","min","abs","handleMouseLeave","handleMouseDown","clickX","clickY","clickedZone","handleDeleteNoGoZone","handleMouseUp","finalRect","topLeftWorld","bottomRightWorld","noGoZone","post","zoneId","confirmDelete","window","confirm","delete","filter","handleMapClick","nodeToDelete","nodeXCoord","nodeYCoord","setIsDeletingNode","openEditPopup","handleCreateNodeMode","handleDeleteNodeMode","handleSendMap","_error$response","_error$response$data","message","handlePatchMap","confirmPatch","log","_error$response2","_error$response2$data","handleDeleteMap","handleSubmitNode","trim","handleUploadMap","preventDefault","formData","FormData","append","handleFileChange","target","files","handleYamlFileChange","handleUpdateMap","put","_error$response3","_error$response3$data","handleOpenNodeConnectionPopup","handleNodeConnectionComplete","handleNodeConnectionCancel","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","key","position","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","disabled","toFixed","type","value","onChange","placeholder","onComplete","onCancel","onSubmit","required","accept","marginTop","color","checked","marginRight","backgroundColor","padding","borderRadius","pointerEvents","zIndex","fontSize","firstNodeId","secondNodeId","onDisconnectSuccess","isDeleted"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/Mapmanage.js"],"sourcesContent":["// src/pages/Map/Mapmanage.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faPlus, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\n\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport NodeList from './NodeList'; // NodeList 컴포넌트 임포트\nimport NodeDisconnect from './NodeDisconnect'; // NodeDisconnect 컴포넌트 임포트\nimport NodeConnectionPopup from './NodeConnectionPopup'; // NodeConnectionPopup 컴포넌트 임포트\nimport './Mapmanage.css';\nimport { worldToMap, mapToWorld } from '../../utils/coordinateUtils';\n\nfunction Mapmanage() {\n  // 맵 관련 상태\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [isMonitored, setIsMonitored] = useState(false);\n  const [uploadName, setUploadName] = useState('');\n  const [uploadDescription, setUploadDescription] = useState('');\n  const [mapFile, setMapFile] = useState(null);\n  const [yamlFile, setYamlFile] = useState(null);\n  const [mapImage, setMapImage] = useState(null);\n  const [isUploadPopupOpen, setIsUploadPopupOpen] = useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\n\n  // 노드 관련 상태\n  const [nodes, setNodes] = useState([]);\n  const [isCreatingNode, setIsCreatingNode] = useState(false);\n  const [nodeX, setNodeX] = useState(null);\n  const [nodeY, setNodeY] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [isNodePopupOpen, setIsNodePopupOpen] = useState(false);\n\n  // 캔버스 관련 참조 및 상태\n  const canvasRef = useRef(null);\n  const mapImageRef = useRef(null);\n  const [imageNaturalWidth, setImageNaturalWidth] = useState(null);\n  const [imageNaturalHeight, setImageNaturalHeight] = useState(null);\n\n  // 금지구역 관련 상태\n  const [isCreatingNoGoZone, setIsCreatingNoGoZone] = useState(false);\n  const [isDeletingNoGoZone, setIsDeletingNoGoZone] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [noGoZones, setNoGoZones] = useState([]);\n\n  // 로딩 및 기타 상태\n  const [isPatchingMap, setIsPatchingMap] = useState(false);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  // 노드 연결 팝업 관련 상태\n  const [isConnectionPopupOpen, setIsConnectionPopupOpen] = useState(false);\n  const [nodeConnectionData, setNodeConnectionData] = useState(null);\n\n  // 맵 목록 불러오기\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n\n  const fetchMaps = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://172.30.1.33:5557/map/maps', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMaps(response.data);\n      if (response.data.length > 0) {\n        await handleSelectMap(response.data[0]);\n      }\n    } catch (error) {\n      console.error('맵을 가져오는 중 오류 발생:', error);\n      alert('맵을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  const fetchNodes = async (mapId) => {\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/nodes/${mapId}`);\n      if (response.status === 200) {\n        setNodes(response.data);\n      } else {\n        setNodes([]);\n      }\n    } catch (error) {\n      console.error('노드를 가져오는 중 오류 발생:', error);\n      setNodes([]);\n      alert('노드를 가져오는 데 실패했습니다.');\n    }\n  };\n\n  const fetchNoGoZones = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/no-go-zones/map/${mapId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      setNoGoZones(response.data);\n    } catch (error) {\n      console.error('금지구역을 가져오는 중 오류 발생:', error);\n      alert('금지구역을 가져오는 데 실패했습니다.');\n    }\n  };\n\n  const handleSelectMap = async (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get(`http://172.30.1.33:5557/map/file/${map._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const imageUrl = URL.createObjectURL(response.data);\n      setMapImage(imageUrl);\n    } catch (error) {\n      console.error('맵 이미지를 가져오는 중 오류 발생:', error);\n      alert('맵 이미지를 가져오는 데 실패했습니다.');\n    }\n\n    await fetchNoGoZones(map._id);\n  };\n\n  const loadMapImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    mapImageRef.current = new Image();\n    mapImageRef.current.src = mapImage;\n\n    mapImageRef.current.onload = () => {\n      const imgWidth = mapImageRef.current.width;\n      const imgHeight = mapImageRef.current.height;\n      setImageNaturalWidth(imgWidth);\n      setImageNaturalHeight(imgHeight);\n      canvas.width = imgWidth;\n      canvas.height = imgHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(mapImageRef.current, 0, 0, imgWidth, imgHeight);\n      drawAll();\n    };\n  };\n\n  const mapToMapCoordinates = (x, y) => {\n    return worldToMap(x, y, imageNaturalWidth, imageNaturalHeight);\n  };\n\n  const drawAll = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !imageNaturalWidth || !imageNaturalHeight) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(mapImageRef.current, 0, 0, imageNaturalWidth, imageNaturalHeight);\n\n    // 금지구역 그리기\n    noGoZones.forEach((zone) => {\n      const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n      const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n      const width = bottomRight.x - topLeft.x;\n      const height = bottomRight.y - topLeft.y;\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n      ctx.fillRect(topLeft.x, topLeft.y, width, height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(topLeft.x, topLeft.y, width, height);\n    });\n\n    // 드래그 중인 사각형 그리기\n    if (currentRect) {\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(currentRect.x, currentRect.y, currentRect.width, currentRect.height);\n    }\n\n    // 노드 연결선 그리기\n    nodes.forEach((node) => {\n      node.connections.forEach((connection) => {\n        const connectedNode = nodes.find(n => n._id === connection.node);\n        if (connectedNode) {\n          const { x: startX, y: startY } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const { x: endX, y: endY } = worldToMap(connectedNode.x, connectedNode.y, imageNaturalWidth, imageNaturalHeight);\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(startX, startY);\n          if (connection.waypoints && connection.waypoints.length > 0) {\n            connection.waypoints.forEach((wp) => {\n              const { x: wpX, y: wpY } = worldToMap(wp.x, wp.y, imageNaturalWidth, imageNaturalHeight);\n              ctx.lineTo(wpX, wpY);\n            });\n          }\n          ctx.lineTo(endX, endY);\n          ctx.stroke();\n        }\n      });\n    });\n\n    // 금지구역 삭제 모드일 때, 금지구역 위에 삭제 아이콘 표시\n    if (isDeletingNoGoZone) {\n      noGoZones.forEach((zone) => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        ctx.fillStyle = 'red';\n        ctx.font = 'bold 16px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('X', topLeft.x + 8, topLeft.y + 15);\n      });\n    }\n\n    // 노드 그리기\n    nodes.forEach((node) => {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const size = 10;\n      ctx.fillStyle = 'red';\n      ctx.fillRect(x - size / 2, y - size / 2, size, size);\n    });\n  };\n\n  // 이미지 로드 후 캔버스에 지도 그리기\n  useEffect(() => {\n    if (mapImage) {\n      loadMapImage();\n    }\n  }, [mapImage]);\n\n  // 맵 이미지와 selectedMap이 모두 설정된 후 노드 패치\n  useEffect(() => {\n    if (mapImage && selectedMap) {\n      fetchNodes(selectedMap._id);\n    }\n  }, [mapImage, selectedMap]);\n\n  // 노드 또는 금지구역 변경 시마다 캔버스에 다시 그리기\n  useEffect(() => {\n    if (canvasRef.current && mapImageRef.current) {\n      drawAll();\n    }\n  }, [nodes, noGoZones, currentRect, isDeletingNoGoZone]);\n\n  // 노드 삭제 시 커서 복구\n  useEffect(() => {\n    if (\n      !isDeletingNode &&\n      !isCreatingNoGoZone &&\n      !isDeletingNoGoZone &&\n      !dragging\n    ) {\n      document.body.style.cursor = 'default';\n    }\n  }, [isDeletingNode, isCreatingNoGoZone, isDeletingNoGoZone, dragging]);\n\n  // 마우스가 캔버스 위를 움직일 때 노드 호버 상태 업데이트\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    let foundNode = null;\n\n    for (let node of nodes) {\n      const { x, y } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n      const distance = Math.sqrt((mouseX - x) ** 2 + (mouseY - y) ** 2);\n      if (distance < 5) {\n        foundNode = node;\n        break;\n      }\n    }\n\n    if (foundNode) {\n      setHoveredNode(foundNode);\n      setTooltipPosition({ x: e.clientX, y: e.clientY });\n    } else {\n      setHoveredNode(null);\n    }\n\n    // 금지구역 생성 모드일 때 드래그 중인 사각형 업데이트\n    if (isCreatingNoGoZone && dragging && dragStart) {\n      const newRect = {\n        x: Math.min(mouseX, dragStart.x),\n        y: Math.min(mouseY, dragStart.y),\n        width: Math.abs(mouseX - dragStart.x),\n        height: Math.abs(mouseY - dragStart.y),\n      };\n      setCurrentRect(newRect);\n    }\n  };\n\n  // 마우스가 캔버스를 벗어났을 때 호버 상태 초기화 및 드래그 상태 초기화\n  const handleMouseLeave = () => {\n    setHoveredNode(null);\n    if (isCreatingNoGoZone && dragging) {\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  // 드래그 시작 이벤트 핸들러\n  const handleMouseDown = (e) => {\n    if (isCreatingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      setDragStart({ x: startX, y: startY });\n      setDragging(true);\n      document.body.style.cursor = 'crosshair';\n    }\n\n    // 금지구역 삭제 모드일 때\n    if (isDeletingNoGoZone) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n\n      // 금지구역 클릭 여부 확인\n      const clickedZone = noGoZones.find(zone => {\n        const topLeft = mapToMapCoordinates(zone.topLeft.x, zone.topLeft.y);\n        const bottomRight = mapToMapCoordinates(zone.bottomRight.x, zone.bottomRight.y);\n        return clickX >= topLeft.x && clickX <= bottomRight.x && clickY >= topLeft.y && clickY <= bottomRight.y;\n      });\n\n      if (clickedZone) {\n        handleDeleteNoGoZone(clickedZone._id);\n      }\n    }\n  };\n\n  // 드래그 종료 이벤트 핸들러\n  const handleMouseUp = async (e) => {\n    if (isCreatingNoGoZone && dragging && dragStart && currentRect) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n      const finalRect = {\n        x: Math.min(endX, dragStart.x),\n        y: Math.min(endY, dragStart.y),\n        width: Math.abs(endX - dragStart.x),\n        height: Math.abs(endY - dragStart.y),\n      };\n      const topLeftWorld = mapToWorld(finalRect.x, finalRect.y, imageNaturalWidth, imageNaturalHeight);\n      const bottomRightWorld = mapToWorld(finalRect.x + finalRect.width, finalRect.y + finalRect.height, imageNaturalWidth, imageNaturalHeight);\n\n      const noGoZone = {\n        topLeft: topLeftWorld,\n        bottomRight: bottomRightWorld,\n        mapId: selectedMap._id,\n      };\n\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://172.30.1.33:5557/map/no-go-zones', noGoZone, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        alert('금지 구역이 성공적으로 생성되었습니다.');\n        setNoGoZones([...noGoZones, response.data.noGoZone]);\n      } catch (error) {\n        console.error('금지 구역 생성 중 오류 발생:', error);\n        alert('금지 구역 생성에 실패했습니다.');\n      }\n\n      setDragging(false);\n      setDragStart(null);\n      setCurrentRect(null);\n      setIsCreatingNoGoZone(false);\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n\n  // 금지구역을 삭제하는 함수\n  const handleDeleteNoGoZone = async (zoneId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    const confirmDelete = window.confirm('이 금지 구역을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/no-go-zones/${zoneId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('금지 구역이 성공적으로 삭제되었습니다.');\n      setNoGoZones(noGoZones.filter(zone => zone._id !== zoneId));\n    } catch (error) {\n      console.error('금지 구역 삭제 중 오류 발생:', error);\n      alert('금지 구역 삭제에 실패했습니다.');\n    } finally {\n      setIsDeletingNoGoZone(false);\n      document.body.style.cursor = 'default';\n      drawAll();\n    }\n  };\n\n  // 맵 클릭 이벤트 핸들러\n  const handleMapClick = async (e) => {\n    if (!selectedMap) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n    const { x, y } = mapToWorld(clickX, clickY, imageNaturalWidth, imageNaturalHeight);\n\n    try {\n      if (isCreatingNode) {\n        setNodeX(x);\n        setNodeY(y);\n        setIsCreatingNode(false);\n        setIsNodePopupOpen(true);\n        document.body.style.cursor = 'default';\n        return;\n      }\n\n      if (isDeletingNode) {\n        let nodeToDelete = null;\n        for (let node of nodes) {\n          const { x: nodeXCoord, y: nodeYCoord } = worldToMap(node.x, node.y, imageNaturalWidth, imageNaturalHeight);\n          const distance = Math.sqrt((clickX - nodeXCoord) ** 2 + (clickY - nodeYCoord) ** 2);\n          if (distance < 5) {\n            nodeToDelete = node;\n            break;\n          }\n        }\n      \n        if (nodeToDelete) {\n          const confirmDelete = window.confirm(`노드 \"${nodeToDelete.name}\"를 삭제하시겠습니까?`);\n          if (confirmDelete) {\n            const token = localStorage.getItem('token');\n            try {\n              await axios.delete(`http://172.30.1.33:5557/map/node/${nodeToDelete._id}`, {\n                headers: { Authorization: `Bearer ${token}` },\n              });\n              alert('노드가 성공적으로 삭제되었습니다.');\n              await fetchNodes(selectedMap._id);\n              drawAll();\n              setIsDeletingNode(false);\n            } catch (error) {\n              console.error('노드 삭제 중 오류 발생:', error);\n              alert('노드 삭제에 실패했습니다.');\n            }\n          }\n        } else {\n          alert('해당 위치에 노드를 찾을 수 없습니다.');\n        }\n        return;\n      }\n\n      // 노드 연결 팝업 활성화 상태일 경우 팝업 내에서 처리\n      if (isConnectionPopupOpen) {\n        // NodeConnectionPopup 컴포넌트가 별도로 맵 클릭을 처리함\n        // 여기서는 별도의 처리를 하지 않음\n        return;\n      }\n\n      // 기타 맵 클릭 처리 로직 (예: 금지구역 생성 등)\n      // ...\n\n    } catch (error) {\n      console.error('맵 클릭 처리 중 오류 발생:', error);\n      alert('맵 클릭 처리 중 오류가 발생했습니다.');\n    } finally {\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    }\n  };\n\n  // 맵 수정 팝업 열기 함수\n  const openEditPopup = (map) => {\n    setSelectedMap(map);\n    setEditName(map.name);\n    setEditDescription(map.description);\n    setIsMonitored(map.isMonitored || false);\n    setIsEditPopupOpen(true);\n  };\n\n  // 노드 생성 모드를 활성화하는 함수\n  const handleCreateNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsCreatingNode(true);\n    setIsDeletingNoGoZone(false);\n    document.body.style.cursor = 'crosshair';\n  };\n\n  // 노드 삭제 모드를 활성화하는 함수\n  const handleDeleteNodeMode = () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    setIsDeletingNode(true);\n    setIsDeletingNoGoZone(false);\n    setIsCreatingNoGoZone(false);\n    document.body.style.cursor = 'not-allowed';\n  };\n\n  // 맵을 로봇에게 전송하는 함수\n  const handleSendMap = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    try {\n      await axios.post('http://172.30.1.33:5559/robot/send_map', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 로봇에게 성공적으로 전송되었습니다.');\n    } catch (error) {\n      console.error('맵을 로봇에게 전송하는 중 오류 발생:', error);\n      alert(`맵을 로봇에게 전송하는 중 오류 발생: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  // 맵 패치를 처리하는 함수 (기존 경로 삭제 후 재계산)\n  const handlePatchMap = async () => {\n    if (!selectedMap) {\n      alert('먼저 맵을 선택해주세요.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmPatch = window.confirm('선택한 맵의 모든 노드 간의 최단 경로를 계산하고 저장하시겠습니까?');\n    if (!confirmPatch) return;\n\n    setIsPatchingMap(true);\n    try {\n      // Step 1: 기존 경로 데이터 삭제\n      await axios.delete(`http://172.30.1.33:5557/map/shortpaths/map/${selectedMap._id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log('기존 ShortPath 데이터가 삭제되었습니다.');\n\n      // Step 2: 새로운 경로 계산 및 저장\n      const response = await axios.post('http://172.30.1.33:5557/map/calculate-paths', {\n        mapId: selectedMap._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        alert('맵 패치가 성공적으로 완료되었습니다.');\n        await fetchNodes(selectedMap._id);\n        drawAll();\n      } else {\n        alert('맵 패치에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('맵 패치 중 오류 발생:', error);\n      alert(`맵 패치 중 오류 발생: ${error.response?.data?.error || error.message}`);\n    } finally {\n      setIsPatchingMap(false);\n    }\n  };\n\n  // 노드 삭제 함수\n  const handleDeleteMap = async (mapId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n    const confirmDelete = window.confirm('이 맵을 삭제하시겠습니까?');\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`http://172.30.1.33:5557/map/maps/${mapId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('맵이 성공적으로 삭제되었습니다.');\n      setMaps(maps.filter(map => map._id !== mapId));\n      if (selectedMap && selectedMap._id === mapId) {\n        setSelectedMap(null);\n        setMapImage(null);\n        setNodes([]);\n        setNoGoZones([]);\n      }\n    } catch (error) {\n      console.error('맵 삭제 중 오류 발생:', error);\n      alert('맵 삭제에 실패했습니다.');\n    }\n  };\n\n  // 노드 제출 함수\n  const handleSubmitNode = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    if (!nodeName.trim()) {\n      alert('노드 이름을 입력해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5557/map/nodes', {\n        name: nodeName,\n        x: nodeX,\n        y: nodeY,\n        mapId: selectedMap._id,\n      }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert('노드가 성공적으로 생성되었습니다.');\n      setIsNodePopupOpen(false);\n      setNodeName('');\n      setNodeX(null);\n      setNodeY(null);\n      await fetchNodes(selectedMap._id);\n      drawAll();\n    } catch (error) {\n      console.error('노드 생성 중 오류 발생:', error);\n      alert('노드 생성에 실패했습니다.');\n    }\n  };\n\n  // 맵 업로드 함수\n  const handleUploadMap = async (e) => {\n    e.preventDefault();\n\n    if (uploadName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', uploadName);\n    formData.append('description', uploadDescription);\n    formData.append('file', mapFile);\n    formData.append('yaml', yamlFile);\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.post('http://172.30.1.33:5557/map/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('맵이 성공적으로 업로드되었습니다.');\n      setIsUploadPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업로드 중 오류 발생:', error);\n      alert('맵 업로드에 실패했습니다.');\n    }\n  };\n\n  // 맵 파일 변경 처리\n  const handleFileChange = (e) => {\n    setMapFile(e.target.files[0]);\n  };\n\n  // YAML 파일 변경 처리\n  const handleYamlFileChange = (e) => {\n    setYamlFile(e.target.files[0]);\n  };\n\n  // 맵 업데이트 함수\n  const handleUpdateMap = async (e) => {\n    e.preventDefault();\n    if (editName.length < 2) {\n      alert('맵 이름은 최소 2자 이상이어야 합니다.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://172.30.1.33:5557/map/update/${selectedMap._id}`, {\n        name: editName,\n        description: editDescription,\n        isMonitored\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('맵이 성공적으로 업데이트되었습니다.');\n      setIsEditPopupOpen(false);\n      await fetchMaps();\n    } catch (error) {\n      console.error('맵 업데이트 중 오류 발생:', error);\n      alert(`맵 업데이트 중 오류 발생: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  // 노드 연결 팝업 열기 함수\n  const handleOpenNodeConnectionPopup = () => {\n    setIsConnectionPopupOpen(true);\n  };\n\n  // 노드 연결 팝업 완료 시 처리 함수\n  const handleNodeConnectionComplete = (data) => {\n    setNodeConnectionData(data);\n    setIsConnectionPopupOpen(false);\n    // 필요 시 추가적인 상태 업데이트나 데이터 패칭\n    fetchNodes(selectedMap._id);\n    drawAll();\n  };\n\n  // 노드 연결 팝업 취소 시 처리 함수\n  const handleNodeConnectionCancel = () => {\n    setIsConnectionPopupOpen(false);\n  };\n\n  return (\n    <div className=\"map-management-page\">\n      {/* 상단 네비게이션 바 */}\n      <header className=\"map-management-header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n\n      {/* 툴바: 네비게이션 아래에 위치 */}\n      <div className=\"toolbar\">\n        <button onClick={handleCreateNodeMode} className=\"create-node-button\">\n          <FontAwesomeIcon icon={faPlus} /> 노드 생성\n        </button>\n        <button onClick={handleDeleteNodeMode} className=\"delete-node-button\">\n          <FontAwesomeIcon icon={faEdit} /> 노드 삭제\n        </button>\n        <button onClick={handleOpenNodeConnectionPopup} className=\"connect-node-button\">\n          <FontAwesomeIcon icon={faLink} /> 노드 연결\n        </button>\n        <button onClick={() => setIsConnectionPopupOpen(true)} className=\"disconnect-node-button\">\n          <FontAwesomeIcon icon={faUnlink} /> 연결 해제\n        </button>\n        {/* '금지 구역 생성' 버튼 추가 */}\n        <button\n          onClick={() => {\n            setIsCreatingNoGoZone(true);\n            setIsDeletingNoGoZone(false);\n            setDragging(false);\n            setDragStart(null);\n            setCurrentRect(null);\n            document.body.style.cursor = 'crosshair';\n          }}\n          className=\"create-nogozone-button\"\n        >\n          금지 구역 생성\n        </button>\n        {/* '금지 구역 해제' 버튼 추가 */}\n        <button\n          onClick={() => {\n            setIsDeletingNoGoZone(true);\n            setIsCreatingNoGoZone(false);\n            setDragging(false);\n            setDragStart(null);\n            setCurrentRect(null);\n            document.body.style.cursor = 'not-allowed';\n          }}\n          className=\"delete-nogozone-button\"\n        >\n          금지 구역 해제\n        </button>\n      </div>\n\n      {/* 맵 리스트와 이미지 컨텐츠 */}\n      <div className=\"map-management-content\">\n        {/* 맵 리스트 컨테이너 */}\n        <div className=\"map-list-container\">\n          <h2 className=\"map-list-header\">\n            맵 리스트\n            <button\n              onClick={() => setIsUploadPopupOpen(true)}\n              className=\"add-map-button\"\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </h2>\n          <ul className=\"map-list\">\n            {maps.map((map) => (\n              <li\n                key={map._id}\n                className={`map-list-item ${selectedMap?._id === map._id ? 'selected-map' : ''}`}\n              >\n                <span\n                  onClick={() => handleSelectMap(map)}\n                  className=\"map-list-item-name\"\n                >\n                  {map.name}\n                </span>\n                <button\n                  onClick={() => openEditPopup(map)}\n                  className=\"edit-map-button\"\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button\n                  onClick={() => handleDeleteMap(map._id)}\n                  className=\"delete-map-button\"\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {selectedMap && (\n            <div className=\"map-description\">\n              <h3>맵 설명</h3>\n              <p>{selectedMap.description}</p>\n            </div>\n          )}\n        </div>\n\n        {/* 지도 이미지와 노드 렌더링 및 노드 리스트 영역 */}\n        <div className=\"map-image-and-node-list\">\n          {/* 지도 이미지와 노드 렌더링 영역 */}\n          <div\n            className=\"map-image-container\"\n            style={{ position: 'relative' }}\n          >\n            {mapImage ? (\n              <canvas\n                ref={canvasRef}\n                className=\"map-canvas\"\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleMapClick}\n                style={{\n                  cursor:\n                    isCreatingNode\n                      ? 'crosshair'\n                      : isCreatingNoGoZone\n                      ? 'crosshair'\n                      : isDeletingNoGoZone\n                      ? 'not-allowed'\n                      : isConnectionPopupOpen\n                      ? 'pointer'\n                      : 'default'\n                }}\n              />\n            ) : (\n              <p>맵을 선택하여 이미지를 확인하세요.</p>\n            )}\n\n            {/* 플로팅 Send to Robots 버튼과 Map Patch 버튼 추가 */}\n            {selectedMap && (\n              <div className=\"floating-buttons\">\n                <button\n                  className=\"send-to-robots-button\"\n                  onClick={handleSendMap}\n                >\n                  로봇에게 전송\n                </button>\n                <button\n                  className=\"map-patch-button\"\n                  onClick={handlePatchMap}\n                  disabled={isPatchingMap}\n                >\n                  {isPatchingMap ? '맵 패치 중...' : '맵 패치'}\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* 오른쪽에 노드 목록 표시 */}\n          <NodeList mapId={selectedMap?._id} />\n        </div>\n      </div>\n\n      {/* Node 생성 팝업 */}\n      {isNodePopupOpen && (\n        <div className=\"popup-container\">\n          <h3>노드 생성</h3>\n          {nodeX !== null && nodeY !== null && (\n            <p>X: {nodeX.toFixed(2)}, Y: {nodeY.toFixed(2)}</p>\n          )}\n          <input\n            type=\"text\"\n            value={nodeName}\n            onChange={(e) => setNodeName(e.target.value)}\n            placeholder=\"노드 이름 입력\"\n            className=\"popup-input\"\n          />\n          <div className=\"popup-button-container\">\n            <button onClick={handleSubmitNode} className=\"popup-submit-button\">\n              생성\n            </button>\n            <button\n              onClick={() => setIsNodePopupOpen(false)}\n              className=\"popup-cancel-button\"\n            >\n              취소\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Node 연결 팝업 */}\n      {isConnectionPopupOpen && (\n        <NodeConnectionPopup\n          onComplete={handleNodeConnectionComplete}\n          onCancel={handleNodeConnectionCancel}\n        />\n      )}\n\n      {/* Map Upload Popup */}\n      {isUploadPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>맵 업로드</h3>\n          <form onSubmit={handleUploadMap}>\n            <input\n              type=\"text\"\n              value={uploadName}\n              onChange={(e) => setUploadName(e.target.value)}\n              placeholder=\"맵 이름\"\n              required\n              className=\"popup-input\"\n            />\n            <textarea\n              value={uploadDescription}\n              onChange={(e) => setUploadDescription(e.target.value)}\n              placeholder=\"맵 설명\"\n              required\n              className=\"popup-textarea\"\n            />\n            <label>맵 파일 (.pgm, .png, .jpg)</label>\n            <input\n              type=\"file\"\n              accept=\".pgm,.png,.jpg\"\n              onChange={handleFileChange}\n              required\n              className=\"popup-file-input\"\n            />\n            <label>YAML 파일 (.yaml)</label>\n            <input\n              type=\"file\"\n              accept=\".yaml\"\n              onChange={handleYamlFileChange}\n              required\n              className=\"popup-file-input\"\n            />\n            <div className=\"popup-button-container\">\n              <button type=\"submit\" className=\"popup-submit-button\">\n                업로드\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setIsUploadPopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Edit Map Popup */}\n      {isEditPopupOpen && (\n        <div className=\"popup-container\">\n          <h3>맵 수정</h3>\n          <form onSubmit={handleUpdateMap}>\n            <input\n              type=\"text\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              placeholder=\"맵 이름\"\n              required\n              className=\"popup-input\"\n            />\n            <textarea\n              value={editDescription}\n              onChange={(e) => setEditDescription(e.target.value)}\n              placeholder=\"맵 설명\"\n              required\n              className=\"popup-textarea\"\n            />\n            {/* 모니터링 지도 설정 체크박스 추가 */}\n            <label style={{ marginTop: '10px', color: '#333' }}>\n              <input\n                type=\"checkbox\"\n                checked={isMonitored}\n                onChange={(e) => setIsMonitored(e.target.checked)}\n                style={{ marginRight: '10px' }}\n              />\n              모니터링 맵으로 설정\n            </label>\n            <div className=\"popup-button-container\">\n              <button type=\"submit\" className=\"popup-submit-button\">\n                업데이트\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setIsEditPopupOpen(false)}\n                className=\"popup-cancel-button\"\n              >\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Hover Tooltip */}\n      {hoveredNode && (\n        <div\n          className=\"tooltip\"\n          style={{\n            position: 'fixed',\n            top: `${tooltipPosition.y + 10}px`,\n            left: `${tooltipPosition.x + 10}px`,\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            pointerEvents: 'none',\n            zIndex: 1000,\n            fontSize: '12px',\n          }}\n        >\n          {hoveredNode.name}\n        </div>\n      )}\n\n      {/* NodeDisconnect 컴포넌트에 클릭한 노드 정보 전달 */}\n      <NodeDisconnect\n        firstNodeId={null} // 연결 해제 기능은 별도로 구현 필요\n        secondNodeId={null}\n        onDisconnectSuccess={async (isDeleted) => {\n          if (isDeleted && selectedMap) {\n            await fetchNodes(selectedMap._id);\n            drawAll();\n          }\n        }}\n      />\n\n      {/* 로딩 인디케이터 추가 */}\n      {isPatchingMap && (\n        <div className=\"loading-overlay\">\n          <div className=\"spinner\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Mapmanage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}