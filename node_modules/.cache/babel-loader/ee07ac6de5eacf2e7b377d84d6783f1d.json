{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapEditPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nfunction MapEditPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [monitoringMapId, setMonitoringMapId] = useState('');\n  const [mapImage, setMapImage] = useState('');\n  useEffect(() => {\n    const fetchMaps = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n        const response = await axios.get('http://localhost:5557/map', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMaps(response.data);\n      } catch (error) {\n        console.error('Error fetching maps:', error);\n      }\n    };\n    fetchMaps();\n  }, []);\n  const handleMapSelect = async map => {\n    setSelectedMap(map);\n    try {\n      const token = localStorage.getItem('token'); // Add token to the request\n      const response = await axios.get(`http://localhost:5557/map/png/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'arraybuffer'\n      });\n      const base64Image = Buffer.from(response.data, 'binary').toString('base64');\n      setMapImage(`data:image/png;base64,${base64Image}`);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  const handleMonitoringMapSelect = async mapId => {\n    try {\n      const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n      if (!token) {\n        console.error('No token found in localStorage');\n        return;\n      }\n      const userId = JSON.parse(atob(token.split('.')[1])).id; // 토큰에서 사용자 ID 추출\n      await axios.post('http://localhost:5557/map/select', {\n        mapId,\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMonitoringMapId(mapId);\n      alert('Map selected for monitoring successfully');\n    } catch (error) {\n      console.error('Error selecting map for monitoring:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Map Edit\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, maps.map(map => /*#__PURE__*/React.createElement(\"li\", {\n    key: map._id,\n    onClick: () => handleMapSelect(map),\n    style: {\n      cursor: 'pointer',\n      fontWeight: map._id === monitoringMapId ? 'bold' : 'normal'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, map.name))), selectedMap && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Map Details: \", selectedMap.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Description: \", selectedMap.description), mapImage && /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    alt: \"Selected Map\",\n    style: {\n      maxWidth: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleMonitoringMapSelect(selectedMap._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, selectedMap._id === monitoringMapId ? 'Selected for Monitoring' : 'Select for Monitoring')));\n}\nexport default MapEditPage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","LogoutButton","UserInfo","axios","MapEditPage","maps","setMaps","selectedMap","setSelectedMap","monitoringMapId","setMonitoringMapId","mapImage","setMapImage","fetchMaps","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleMapSelect","map","_id","responseType","base64Image","Buffer","from","toString","handleMonitoringMapSelect","mapId","userId","JSON","parse","atob","split","id","post","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","onClick","style","cursor","fontWeight","name","description","src","alt","maxWidth"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Map/MapEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\n\nfunction MapEditPage() {\n  const [maps, setMaps] = useState([]);\n  const [selectedMap, setSelectedMap] = useState(null);\n  const [monitoringMapId, setMonitoringMapId] = useState('');\n  const [mapImage, setMapImage] = useState('');\n\n  useEffect(() => {\n    const fetchMaps = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n        const response = await axios.get('http://localhost:5557/map', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMaps(response.data);\n      } catch (error) {\n        console.error('Error fetching maps:', error);\n      }\n    };\n\n    fetchMaps();\n  }, []);\n\n  const handleMapSelect = async (map) => {\n    setSelectedMap(map);\n    try {\n      const token = localStorage.getItem('token'); // Add token to the request\n      const response = await axios.get(`http://localhost:5557/map/png/${map._id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'arraybuffer'\n      });\n      const base64Image = Buffer.from(response.data, 'binary').toString('base64');\n      setMapImage(`data:image/png;base64,${base64Image}`);\n    } catch (error) {\n      console.error('Error fetching map image:', error);\n    }\n  };\n  \n\n  const handleMonitoringMapSelect = async (mapId) => {\n    try {\n      const token = localStorage.getItem('token'); // 로그인 시 저장한 토큰을 가져옴\n      if (!token) {\n        console.error('No token found in localStorage');\n        return;\n      }\n      const userId = JSON.parse(atob(token.split('.')[1])).id; // 토큰에서 사용자 ID 추출\n      await axios.post('http://localhost:5557/map/select', { mapId, userId }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMonitoringMapId(mapId);\n      alert('Map selected for monitoring successfully');\n    } catch (error) {\n      console.error('Error selecting map for monitoring:', error);\n    }\n  };\n  \n\n  return (\n    <div>\n      <header>\n          <UserInfo />\n          <LogoutButton />\n      </header>\n      <Navbar />\n      <h2>Map Edit</h2>\n      <ul>\n        {maps.map((map) => (\n          <li \n            key={map._id} \n            onClick={() => handleMapSelect(map)}\n            style={{ cursor: 'pointer', fontWeight: map._id === monitoringMapId ? 'bold' : 'normal' }}\n          >\n            {map.name}\n          </li>\n        ))}\n      </ul>\n      {selectedMap && (\n        <div>\n          <h3>Map Details: {selectedMap.name}</h3>\n          <p>Description: {selectedMap.description}</p>\n          {mapImage && <img src={mapImage} alt=\"Selected Map\" style={{ maxWidth: '100%' }} />}\n          <button onClick={() => handleMonitoringMapSelect(selectedMap._id)}>\n            {selectedMap._id === monitoringMapId ? 'Selected for Monitoring' : 'Select for Monitoring'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MapEditPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}