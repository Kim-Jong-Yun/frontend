{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './TestPage.css'; // CSS 파일을 불러옵니다\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태 관리\n  const [selectedRobot, setSelectedRobot] = useState(null); // 선택된 로봇 정보 저장\n  const [selectedTask, setSelectedTask] = useState(''); // 선택된 작업 저장\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']); // 드롭다운에 표시할 작업들\n  const canvasRef = useRef(null);\n  const [mapImage, setMapImage] = useState(null); // 맵 이미지 객체 저장\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [dragging, setDragging] = useState(false); // 드래그 상태 관리\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  }); // 드래그 위치 상태 저장\n  const [lastMousePos, setLastMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [expandedRobotId, setExpandedRobotId] = useState(null); // 로봇 확장 상태 관리\n\n  // WebSocket으로 로봇 실시간 위치를 수신할 때마다 업데이트\n  useEffect(() => {\n    const socket = new WebSocket('ws://your-websocket-url'); // WebSocket 주소를 설정하세요\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n    socket.onmessage = event => {\n      const updatedRobots = JSON.parse(event.data);\n      setRobots(updatedRobots); // WebSocket으로 받은 데이터를 로봇 상태로 설정\n\n      // 새로운 로봇 위치 정보를 받아서 지도와 함께 다시 그리기\n      if (mapImage) {\n        drawMapAndRobots(mapImage, dragOffset.x, dragOffset.y); // 현재 지도와 로봇 위치 다시 그리기\n      }\n    };\n    socket.onerror = error => {\n      console.error('WebSocket 오류:', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n    return () => {\n      socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n    };\n  }, [mapImage, dragOffset]); // 의존성 배열에 WebSocket과 지도 드래그 상태 포함\n\n  // 맵 메타데이터 가져오기\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n\n  // 맵 파일 가져오기\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapImage(img); // 이미지 객체 저장\n        setMapDimensions({\n          width: img.width,\n          height: img.height\n        });\n        drawMapAndRobots(img, 0, 0); // 초기 이미지를 그리기\n      };\n      img.onerror = err => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n  const fetchRobots = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n  const fetchAllTasks = async () => {\n    const token = getToken();\n    if (!token) return;\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n\n  // 초기 데이터 가져오기\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      await fetchRobots();\n      await fetchAllTasks();\n    };\n    fetchData();\n  }, []); // 페이지 로드 시 한 번만 실행\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login';\n      return null;\n    }\n    return token;\n  };\n\n  // 지도와 로봇을 캔버스에 그리는 함수\n  const drawMapAndRobots = (image, offsetX, offsetY) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(image, offsetX, offsetY, image.width, image.height);\n    robots.forEach(robot => {\n      var _robot$status, _robot$status2, _robot$status3;\n      const {\n        x,\n        y\n      } = robot.location;\n      const {\n        mapX,\n        mapY\n      } = worldToMap(x, y, canvas.width, canvas.height, offsetX, offsetY, image.width, image.height, mapResolution);\n      let robotColor = 'gray';\n      if (((_robot$status = robot.status) === null || _robot$status === void 0 ? void 0 : _robot$status.state) === 'Tasking') {\n        robotColor = 'blue';\n      } else if (((_robot$status2 = robot.status) === null || _robot$status2 === void 0 ? void 0 : _robot$status2.state) === 'Waiting') {\n        robotColor = 'yellow';\n      } else if (((_robot$status3 = robot.status) === null || _robot$status3 === void 0 ? void 0 : _robot$status3.state) === 'Error') {\n        robotColor = 'red';\n      }\n      ctx.fillStyle = robotColor;\n      ctx.beginPath();\n      ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n  };\n  const worldToMap = (x, y, mapWidth, mapHeight, offsetX, offsetY, imgWidth, imgHeight, resolution) => {\n    const mapX = x / resolution + mapWidth / 2 + offsetX;\n    const mapY = mapHeight - (y / resolution + mapHeight / 2) + offsetY;\n    return {\n      mapX,\n      mapY\n    };\n  };\n\n  // 마우스로 지도 드래그\n  const handleMouseDown = e => {\n    setDragging(true);\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleMouseMove = e => {\n    if (dragging && mapImage) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n      const newOffsetX = dragOffset.x + deltaX;\n      const newOffsetY = dragOffset.y + deltaY;\n      const limitedX = Math.min(0, Math.max(canvasRef.current.width - mapImage.width, newOffsetX));\n      const limitedY = Math.min(0, Math.max(canvasRef.current.height - mapImage.height, newOffsetY));\n      drawMapAndRobots(mapImage, limitedX, limitedY);\n      setDragOffset({\n        x: limitedX,\n        y: limitedY\n      });\n      setLastMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  const handleMouseUp = () => setDragging(false);\n  const handleMouseLeave = () => setDragging(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, mapUrl ? /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: \"800\",\n    height: \"600\",\n    className: \"map-canvas\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, \"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"robot-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uBD07 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: 'none',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, robots.length > 0 ? robots.map(robot => {\n    var _robot$status4, _robot$status5, _robot$status6;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: robot._id,\n      className: \"robot-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }, \"\\uC774\\uB984:\"), \" \", robot.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 27\n      }\n    }, \"\\uC0C1\\uD0DC:\"), \" \", ((_robot$status4 = robot.status) === null || _robot$status4 === void 0 ? void 0 : _robot$status4.state) || 'Unknown'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 27\n      }\n    }, \"\\uBC30\\uD130\\uB9AC:\"), \" \", ((_robot$status5 = robot.status) === null || _robot$status5 === void 0 ? void 0 : _robot$status5.battery) || 'N/A', \"%\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => toggleExpand(robot._id),\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, expandedRobotId === robot._id ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 56\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 96\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `robot-details ${expandedRobotId === robot._id ? 'expanded' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 24\n      }\n    }, \"IP:\"), \" \", robot.ip), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 24\n      }\n    }, \"\\uC704\\uCE58:\"), \" x: \", robot.location.x, \", y: \", robot.location.y), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 24\n      }\n    }, \"\\uC18D\\uB3C4:\"), \" \", ((_robot$status6 = robot.status) === null || _robot$status6 === void 0 ? void 0 : _robot$status6.speed) || 'N/A', \" m/s\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 23\n      }\n    }, \"job\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => openPopup(robot),\n      style: {\n        background: 'none',\n        border: '1px solid #ccc',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, \"+\"))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, \"\\uC5F0\\uACB0\\uB41C \\uB85C\\uBD07\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))), isPopupOpen && selectedRobot && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC5C5 \\uC120\\uD0DD - \", selectedRobot.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, \"\\uC791\\uC5C5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedTask,\n    onChange: handleTaskChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, \"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"), availableTasks.map((task, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, task))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"popup-close-button\",\n    onClick: closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"\\uB2EB\\uAE30\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-log-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '80%',\n      overflowY: 'scroll',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"task-log-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC774\\uB984\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uBD07 IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC5C5 \\uC720\\uD615\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uD0DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uC791 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, \"\\uC885\\uB8CC \\uC2DC\\uAC04\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, task.robotIp), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, task.taskType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, formatDate(task.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, formatDate(task.endTime)))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    style: {\n      textAlign: 'center',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC5C5 \\uB85C\\uADF8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")))))));\n}\nexport default TestPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","LogoutButton","UserInfo","axios","TestPage","mapUrl","setMapUrl","robots","setRobots","tasks","setTasks","isPopupOpen","setIsPopupOpen","selectedRobot","setSelectedRobot","selectedTask","setSelectedTask","availableTasks","setAvailableTasks","canvasRef","mapImage","setMapImage","mapResolution","setMapResolution","mapDimensions","setMapDimensions","width","height","dragging","setDragging","dragOffset","setDragOffset","x","y","lastMousePos","setLastMousePos","expandedRobotId","setExpandedRobotId","socket","WebSocket","onopen","console","log","onmessage","event","updatedRobots","JSON","parse","data","drawMapAndRobots","onerror","error","onclose","close","fetchMapMetadata","token","getToken","response","get","headers","Authorization","metadata","resolution","parseFloat","match","fetchMonitoredMap","responseType","url","URL","createObjectURL","img","Image","src","onload","err","fetchRobots","fetchAllTasks","fetchData","localStorage","getItem","alert","window","location","href","image","offsetX","offsetY","canvas","current","ctx","getContext","clearRect","drawImage","forEach","robot","_robot$status","_robot$status2","_robot$status3","mapX","mapY","worldToMap","robotColor","status","state","fillStyle","beginPath","arc","Math","PI","fill","mapWidth","mapHeight","imgWidth","imgHeight","handleMouseDown","e","clientX","clientY","handleMouseMove","deltaX","deltaY","newOffsetX","newOffsetY","limitedX","min","max","limitedY","handleMouseUp","handleMouseLeave","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","listStyleType","padding","length","map","_robot$status4","_robot$status5","_robot$status6","key","_id","display","justifyContent","alignItems","name","battery","onClick","toggleExpand","background","border","cursor","fontSize","ip","speed","openPopup","closePopup","stopPropagation","value","onChange","handleTaskChange","task","index","overflowY","robotIp","taskType","formatDate","startTime","endTime","colSpan","textAlign"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Test/TestPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Navbar from '../../components/Common/Navbar';\nimport LogoutButton from '../../components/Common/LogoutButton';\nimport UserInfo from '../../components/Common/UserInfo';\nimport axios from 'axios';\nimport './TestPage.css'; // CSS 파일을 불러옵니다\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nfunction TestPage() {\n  const [mapUrl, setMapUrl] = useState(null);\n  const [robots, setRobots] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // 팝업 상태 관리\n  const [selectedRobot, setSelectedRobot] = useState(null); // 선택된 로봇 정보 저장\n  const [selectedTask, setSelectedTask] = useState(''); // 선택된 작업 저장\n  const [availableTasks, setAvailableTasks] = useState(['Task 1', 'Task 2', 'Task 3']); // 드롭다운에 표시할 작업들\n  const canvasRef = useRef(null);\n  const [mapImage, setMapImage] = useState(null); // 맵 이미지 객체 저장\n  const [mapResolution, setMapResolution] = useState(0.05); // 기본 값, 실제 파일에서 가져올 예정\n  const [mapDimensions, setMapDimensions] = useState({ width: 0, height: 0 });\n  const [dragging, setDragging] = useState(false); // 드래그 상태 관리\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 }); // 드래그 위치 상태 저장\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n  const [expandedRobotId, setExpandedRobotId] = useState(null); // 로봇 확장 상태 관리\n\n  // WebSocket으로 로봇 실시간 위치를 수신할 때마다 업데이트\n  useEffect(() => {\n    const socket = new WebSocket('ws://your-websocket-url'); // WebSocket 주소를 설정하세요\n\n    socket.onopen = () => {\n      console.log('WebSocket 연결 성공');\n    };\n\n    socket.onmessage = (event) => {\n      const updatedRobots = JSON.parse(event.data);\n      setRobots(updatedRobots); // WebSocket으로 받은 데이터를 로봇 상태로 설정\n\n      // 새로운 로봇 위치 정보를 받아서 지도와 함께 다시 그리기\n      if (mapImage) {\n        drawMapAndRobots(mapImage, dragOffset.x, dragOffset.y); // 현재 지도와 로봇 위치 다시 그리기\n      }\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket 오류:', error);\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket 연결 종료');\n    };\n\n    return () => {\n      socket.close(); // 컴포넌트가 언마운트되면 WebSocket 연결 종료\n    };\n  }, [mapImage, dragOffset]); // 의존성 배열에 WebSocket과 지도 드래그 상태 포함\n\n  // 맵 메타데이터 가져오기\n  const fetchMapMetadata = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/metadata', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const metadata = response.data;\n      const resolution = parseFloat(metadata.match(/resolution:\\s*(\\d+.\\d+)/)[1]);\n      setMapResolution(resolution);\n    } catch (error) {\n      console.error('지도 메타데이터 가져오기 오류:', error);\n    }\n  };\n\n  // 맵 파일 가져오기\n  const fetchMonitoredMap = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5557/map/monitored/file', {\n        headers: { Authorization: `Bearer ${token}` },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setMapUrl(url);\n\n      const img = new Image();\n      img.src = url;\n      img.onload = () => {\n        setMapImage(img); // 이미지 객체 저장\n        setMapDimensions({ width: img.width, height: img.height });\n        drawMapAndRobots(img, 0, 0); // 초기 이미지를 그리기\n      };\n      img.onerror = (err) => {\n        console.error('지도 이미지를 로드하는 중 오류 발생:', err);\n      };\n    } catch (error) {\n      console.error('모니터링 지도 가져오기 오류:', error);\n    }\n  };\n\n  const fetchRobots = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:5559/robot/robots', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setRobots(response.data);\n    } catch (error) {\n      console.error('로봇 정보 가져오기 오류:', error);\n    }\n  };\n\n  const fetchAllTasks = async () => {\n    const token = getToken();\n    if (!token) return;\n\n    try {\n      const response = await axios.get('http://172.30.1.28:8080/task/all', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error('작업 로그 가져오기 오류:', error);\n    }\n  };\n\n  // 초기 데이터 가져오기\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMapMetadata();\n      await fetchMonitoredMap();\n      await fetchRobots();\n      await fetchAllTasks();\n    };\n    fetchData();\n  }, []); // 페이지 로드 시 한 번만 실행\n\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('토큰이 없습니다. 다시 로그인해주세요.');\n      window.location.href = '/login';\n      return null;\n    }\n    return token;\n  };\n\n  // 지도와 로봇을 캔버스에 그리는 함수\n  const drawMapAndRobots = (image, offsetX, offsetY) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.drawImage(image, offsetX, offsetY, image.width, image.height);\n\n    robots.forEach((robot) => {\n      const { x, y } = robot.location;\n      const { mapX, mapY } = worldToMap(x, y, canvas.width, canvas.height, offsetX, offsetY, image.width, image.height, mapResolution);\n\n      let robotColor = 'gray';\n      if (robot.status?.state === 'Tasking') {\n        robotColor = 'blue';\n      } else if (robot.status?.state === 'Waiting') {\n        robotColor = 'yellow';\n      } else if (robot.status?.state === 'Error') {\n        robotColor = 'red';\n      }\n\n      ctx.fillStyle = robotColor;\n      ctx.beginPath();\n      ctx.arc(mapX, mapY, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n  };\n\n  const worldToMap = (x, y, mapWidth, mapHeight, offsetX, offsetY, imgWidth, imgHeight, resolution) => {\n    const mapX = ((x / resolution) + mapWidth / 2) + offsetX;\n    const mapY = mapHeight - ((y / resolution) + mapHeight / 2) + offsetY;\n    return { mapX, mapY };\n  };\n\n  // 마우스로 지도 드래그\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging && mapImage) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n      const newOffsetX = dragOffset.x + deltaX;\n      const newOffsetY = dragOffset.y + deltaY;\n\n      const limitedX = Math.min(0, Math.max(canvasRef.current.width - mapImage.width, newOffsetX));\n      const limitedY = Math.min(0, Math.max(canvasRef.current.height - mapImage.height, newOffsetY));\n\n      drawMapAndRobots(mapImage, limitedX, limitedY);\n      setDragOffset({ x: limitedX, y: limitedY });\n      setLastMousePos({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseUp = () => setDragging(false);\n  const handleMouseLeave = () => setDragging(false);\n\n  return (\n    <div className=\"test-page-container\">\n      <header className=\"header\">\n        <UserInfo />\n        <LogoutButton />\n      </header>\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"map-container\">\n          {mapUrl ? (\n            <canvas\n              ref={canvasRef}\n              width=\"800\"\n              height=\"600\"\n              className=\"map-canvas\"\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={handleMouseLeave}\n            ></canvas>\n          ) : (\n            <p>지도를 불러오는 중...</p>\n          )}\n        </div>\n\n        <div className=\"robot-list-container\">\n          <h3>로봇 리스트</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {robots.length > 0 ? (\n              robots.map((robot) => (\n                <li key={robot._id} className=\"robot-list-item\">\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span><strong>이름:</strong> {robot.name}</span>\n                    <span><strong>상태:</strong> {robot.status?.state || 'Unknown'}</span>\n                    <span><strong>배터리:</strong> {robot.status?.battery || 'N/A'}%</span>\n                    <button\n                      onClick={() => toggleExpand(robot._id)}\n                      style={{ background: 'none', border: 'none', cursor: 'pointer', fontSize: '16px' }}\n                    >\n                      {expandedRobotId === robot._id ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>}\n                    </button>\n                  </div>\n                  <div className={`robot-details ${expandedRobotId === robot._id ? 'expanded' : ''}`}>\n                    <p><strong>IP:</strong> {robot.ip}</p>\n                    <p><strong>위치:</strong> x: {robot.location.x}, y: {robot.location.y}</p>\n                    <p><strong>속도:</strong> {robot.status?.speed || 'N/A'} m/s</p>\n                    <p>\n                      <strong>job</strong>\n                      <button onClick={() => openPopup(robot)} style={{ background: 'none', border: '1px solid #ccc', cursor: 'pointer', fontSize: '16px' }}>+</button>\n                    </p>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <p>연결된 로봇이 없습니다.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {isPopupOpen && selectedRobot && (\n        <div className=\"popup-overlay\" onClick={closePopup}>\n          <div className=\"popup-container\" onClick={(e) => e.stopPropagation()}>\n            <h2>작업 선택 - {selectedRobot.name}</h2>\n            <div>\n              <label>\n                작업을 선택하세요:\n                <select value={selectedTask} onChange={handleTaskChange}>\n                  <option value=\"\">선택하세요</option>\n                  {availableTasks.map((task, index) => (\n                    <option key={index} value={task}>{task}</option>\n                  ))}\n                </select>\n              </label>\n            </div>\n            <button className=\"popup-close-button\" onClick={closePopup}>닫기</button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"task-log-container\">\n        <h3>작업 로그</h3>\n        <div style={{ height: '80%', overflowY: 'scroll', border: '1px solid #ccc' }}>\n          <table className=\"task-log-table\">\n            <thead>\n              <tr>\n                <th>작업 이름</th>\n                <th>로봇 IP</th>\n                <th>작업 유형</th>\n                <th>상태</th>\n                <th>시작 시간</th>\n                <th>종료 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.length > 0 ? (\n                tasks.map((task, index) => (\n                  <tr key={index}>\n                    <td>{task.name}</td>\n                    <td>{task.robotIp}</td>\n                    <td>{task.taskType}</td>\n                    <td>{task.status}</td>\n                    <td>{formatDate(task.startTime)}</td>\n                    <td>{formatDate(task.endTime)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" style={{ textAlign: 'center', padding: '10px' }}>작업 로그가 없습니다.</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}