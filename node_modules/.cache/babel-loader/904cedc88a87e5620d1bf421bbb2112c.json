{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js\";\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport './TaskFlow.css';\nimport CreateTaskFlow from './CreateTaskFlow';\nconst TaskFlow = forwardRef(({\n  workflow,\n  onTemporaryFlowAdd,\n  onTemporaryFlowDelete\n}, ref) => {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n\n  // 팝업 열기/닫기 토글\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  // CreateTaskFlow 컴포넌트로부터 새로운 작업 플로우를 추가하는 함수\n  const handleTaskFlowAdd = (nodeName, stepName) => {\n    if (nodeName.trim() === '' || stepName.trim() === '') return;\n    const newFlow = {\n      _id: Date.now().toString(),\n      node: nodeName,\n      step: stepName,\n      isDeleted: false\n    };\n    const updatedTemporaryWorkflow = [...temporaryWorkflow, newFlow];\n    setTemporaryWorkflow(updatedTemporaryWorkflow);\n    onTemporaryFlowAdd(newFlow);\n    togglePopup();\n  };\n\n  // 개별 워크플로우 항목을 프론트에서 숨기고 _id를 TaskPage로 전달하는 함수\n  const handleRemoveFlow = flow => {\n    if (flow._id) {\n      const updatedWorkflow = temporaryWorkflow.map(item => item._id === flow._id ? {\n        ...item,\n        isDeleted: true\n      } : item);\n      setTemporaryWorkflow(updatedWorkflow);\n      onTemporaryFlowDelete(flow._id);\n    }\n  };\n\n  // 임시 플로우 초기화 함수\n  useImperativeHandle(ref, () => ({\n    clearTemporaryWorkflow() {\n      setTemporaryWorkflow([]);\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, workflow.concat(temporaryWorkflow).map((flow, index) => !flow.isDeleted && /*#__PURE__*/React.createElement(\"div\", {\n    key: flow._id || index,\n    className: \"task-flow-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, \"Node:\"), \" \", flow.node), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, \"Step:\"), \" \", flow.step), index >= workflow.length && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"task-flow-remove-btn\",\n    onClick: () => handleRemoveFlow(flow),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePopup,\n    className: \"task-flow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"+\")))), isPopupOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CreateTaskFlow, {\n    onClose: togglePopup,\n    onTaskFlowAdd: handleTaskFlowAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }))));\n});\nexport default TaskFlow;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","CreateTaskFlow","TaskFlow","workflow","onTemporaryFlowAdd","onTemporaryFlowDelete","ref","isPopupOpen","setIsPopupOpen","temporaryWorkflow","setTemporaryWorkflow","togglePopup","handleTaskFlowAdd","nodeName","stepName","trim","newFlow","_id","Date","now","toString","node","step","isDeleted","updatedTemporaryWorkflow","handleRemoveFlow","flow","updatedWorkflow","map","item","clearTemporaryWorkflow","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","concat","index","key","length","onClick","onClose","onTaskFlowAdd"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport './TaskFlow.css';\nimport CreateTaskFlow from './CreateTaskFlow';\n\nconst TaskFlow = forwardRef(({ workflow, onTemporaryFlowAdd, onTemporaryFlowDelete }, ref) => {\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [temporaryWorkflow, setTemporaryWorkflow] = useState([]);\n\n    // 팝업 열기/닫기 토글\n    const togglePopup = () => {\n        setIsPopupOpen(!isPopupOpen);\n    };\n\n    // CreateTaskFlow 컴포넌트로부터 새로운 작업 플로우를 추가하는 함수\n    const handleTaskFlowAdd = (nodeName, stepName) => {\n        if (nodeName.trim() === '' || stepName.trim() === '') return;\n        const newFlow = { _id: Date.now().toString(), node: nodeName, step: stepName, isDeleted: false };\n        const updatedTemporaryWorkflow = [...temporaryWorkflow, newFlow];\n        setTemporaryWorkflow(updatedTemporaryWorkflow);\n        onTemporaryFlowAdd(newFlow);\n        togglePopup();\n    };\n\n    // 개별 워크플로우 항목을 프론트에서 숨기고 _id를 TaskPage로 전달하는 함수\n    const handleRemoveFlow = (flow) => {\n        if (flow._id) {\n            const updatedWorkflow = temporaryWorkflow.map(item => \n                item._id === flow._id ? { ...item, isDeleted: true } : item\n            );\n            setTemporaryWorkflow(updatedWorkflow);\n            onTemporaryFlowDelete(flow._id);\n        }\n    };\n\n    // 임시 플로우 초기화 함수\n    useImperativeHandle(ref, () => ({\n        clearTemporaryWorkflow() {\n            setTemporaryWorkflow([]);\n        }\n    }));\n\n    return (\n        <div className=\"task-flow-container\">\n            <div className=\"task-flow-background\">\n                <div className=\"task-flow-list\">\n                    {workflow.concat(temporaryWorkflow).map((flow, index) => (\n                        !flow.isDeleted && ( \n                            <div key={flow._id || index} className=\"task-flow-item\">\n                                <div>\n                                    <strong>Node:</strong> {flow.node}\n                                </div>\n                                <div>\n                                    <strong>Step:</strong> {flow.step}\n                                </div>\n                                {index >= workflow.length && (\n                                    <button\n                                        className=\"task-flow-remove-btn\"\n                                        onClick={() => handleRemoveFlow(flow)}\n                                    >\n                                        ×\n                                    </button>\n                                )}\n                            </div>\n                        )\n                    ))}\n                    <div className=\"task-flow-add\">\n                        <button onClick={togglePopup} className=\"task-flow-button\">+</button>\n                    </div>\n                </div>\n            </div>\n            {isPopupOpen && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup-content\">\n                        <CreateTaskFlow onClose={togglePopup} onTaskFlowAdd={handleTaskFlowAdd} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default TaskFlow;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,OAAO;AACxE,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAAC;EAAEI,QAAQ;EAAEC,kBAAkB;EAAEC;AAAsB,CAAC,EAAEC,GAAG,KAAK;EAC1F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACA,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACtBH,cAAc,CAAC,CAACD,WAAW,CAAC;EAChC,CAAC;;EAED;EACA,MAAMK,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC9C,IAAID,QAAQ,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAID,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACtD,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAAEC,IAAI,EAAER,QAAQ;MAAES,IAAI,EAAER,QAAQ;MAAES,SAAS,EAAE;IAAM,CAAC;IAChG,MAAMC,wBAAwB,GAAG,CAAC,GAAGf,iBAAiB,EAAEO,OAAO,CAAC;IAChEN,oBAAoB,CAACc,wBAAwB,CAAC;IAC9CpB,kBAAkB,CAACY,OAAO,CAAC;IAC3BL,WAAW,CAAC,CAAC;EACjB,CAAC;;EAED;EACA,MAAMc,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,IAAIA,IAAI,CAACT,GAAG,EAAE;MACV,MAAMU,eAAe,GAAGlB,iBAAiB,CAACmB,GAAG,CAACC,IAAI,IAC9CA,IAAI,CAACZ,GAAG,KAAKS,IAAI,CAACT,GAAG,GAAG;QAAE,GAAGY,IAAI;QAAEN,SAAS,EAAE;MAAK,CAAC,GAAGM,IAC3D,CAAC;MACDnB,oBAAoB,CAACiB,eAAe,CAAC;MACrCtB,qBAAqB,CAACqB,IAAI,CAACT,GAAG,CAAC;IACnC;EACJ,CAAC;;EAED;EACAjB,mBAAmB,CAACM,GAAG,EAAE,OAAO;IAC5BwB,sBAAsBA,CAAA,EAAG;MACrBpB,oBAAoB,CAAC,EAAE,CAAC;IAC5B;EACJ,CAAC,CAAC,CAAC;EAEH,oBACIb,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCzC,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCzC,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1BnC,QAAQ,CAACoC,MAAM,CAAC9B,iBAAiB,CAAC,CAACmB,GAAG,CAAC,CAACF,IAAI,EAAEc,KAAK,KAChD,CAACd,IAAI,CAACH,SAAS,iBACX1B,KAAA,CAAAkC,aAAA;IAAKU,GAAG,EAAEf,IAAI,CAACT,GAAG,IAAIuB,KAAM;IAACR,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnDzC,KAAA,CAAAkC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIzC,KAAA,CAAAkC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,OAAa,CAAC,KAAC,EAACZ,IAAI,CAACL,IAC5B,CAAC,eACNxB,KAAA,CAAAkC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIzC,KAAA,CAAAkC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,OAAa,CAAC,KAAC,EAACZ,IAAI,CAACJ,IAC5B,CAAC,EACLkB,KAAK,IAAIrC,QAAQ,CAACuC,MAAM,iBACrB7C,KAAA,CAAAkC,aAAA;IACIC,SAAS,EAAC,sBAAsB;IAChCW,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACC,IAAI,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzC,MAEO,CAEX,CAEZ,CAAC,eACFzC,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BzC,KAAA,CAAAkC,aAAA;IAAQY,OAAO,EAAEhC,WAAY;IAACqB,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CACnE,CACJ,CACJ,CAAC,EACL/B,WAAW,iBACRV,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BzC,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BzC,KAAA,CAAAkC,aAAA,CAAC9B,cAAc;IAAC2C,OAAO,EAAEjC,WAAY;IAACkC,aAAa,EAAEjC,iBAAkB;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACxE,CACJ,CAER,CAAC;AAEd,CAAC,CAAC;AAEF,eAAepC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}