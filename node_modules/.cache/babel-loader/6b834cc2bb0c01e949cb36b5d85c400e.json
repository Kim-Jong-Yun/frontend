{"ast":null,"code":"var _jsxFileName = \"/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js\";\nimport React, { useState } from 'react';\nimport './TaskFlow.css'; // 스타일 파일 임포트\n\nfunction TaskFlow() {\n  const [taskFlows, setTaskFlows] = useState([]); // 추가된 작업 플로우 목록\n  const [taskFlowName, setTaskFlowName] = useState(''); // 입력된 작업 플로우 이름\n\n  const handleAddTaskFlow = () => {\n    if (taskFlowName.trim() === '') return; // 빈 값일 경우 추가하지 않음\n    setTaskFlows([...taskFlows, taskFlowName]); // 새로운 플로우 추가\n    setTaskFlowName(''); // 입력 필드 초기화\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, taskFlows.map((flow, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"task-flow-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, flow)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-flow-add\",\n    onClick: handleAddTaskFlow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"task-flow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"+\")))));\n}\nexport default TaskFlow;","map":{"version":3,"names":["React","useState","TaskFlow","taskFlows","setTaskFlows","taskFlowName","setTaskFlowName","handleAddTaskFlow","trim","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","flow","index","key","onClick"],"sources":["/home/ketgintern/Desktop/FMS-AGV-AMR/frontend/src/pages/Task/TaskFlow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskFlow.css'; // 스타일 파일 임포트\n\nfunction TaskFlow() {\n    const [taskFlows, setTaskFlows] = useState([]); // 추가된 작업 플로우 목록\n    const [taskFlowName, setTaskFlowName] = useState(''); // 입력된 작업 플로우 이름\n\n    const handleAddTaskFlow = () => {\n        if (taskFlowName.trim() === '') return; // 빈 값일 경우 추가하지 않음\n        setTaskFlows([...taskFlows, taskFlowName]); // 새로운 플로우 추가\n        setTaskFlowName(''); // 입력 필드 초기화\n    };\n\n    return (\n        <div className=\"task-flow-container\">\n            <div className=\"task-flow-background\">\n              \n                <div className=\"task-flow-list\">\n                    {taskFlows.map((flow, index) => (\n                        <div key={index} className=\"task-flow-item\">\n                            {flow}\n                        </div>\n                    ))}\n                    {/* 마지막에 + 버튼이 있는 큰 둥근 사각형 */}\n                    <div className=\"task-flow-add\" onClick={handleAddTaskFlow}>\n                        <button className=\"task-flow-button\">+</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskFlow;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB,CAAC,CAAC;;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIF,YAAY,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;IACxCJ,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEE,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5CC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACIN,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChChB,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEjChB,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1Bb,SAAS,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBnB,KAAA,CAAAS,aAAA;IAAKW,GAAG,EAAED,KAAM;IAACT,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtCE,IACA,CACR,CAAC,eAEFlB,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAC,eAAe;IAACW,OAAO,EAAEd,iBAAkB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtDhB,KAAA,CAAAS,aAAA;IAAQC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAS,CAC7C,CACJ,CACJ,CACJ,CAAC;AAEd;AAEA,eAAed,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}